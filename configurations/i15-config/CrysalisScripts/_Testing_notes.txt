--------------------------------------------------------------------------------
Representative commands:
--------------------------------------------------------------------------------

-------- Low level -------------------------------------------------------------

call Image_Start 3 1			<1. time> <2. binning>
call Scan_Start 30 1 			<1. timeout> <2. binning>
call Dark_Start 3 1 			<1. time> <2. binning>

call Img_Cut "/ppcdirpnp/data/Image" "/root/tmp/Data/Image" 3 1
call applyCorrections "/root/tmp/Data/Image" 1 0 0 0
cr call export_img_inc "/root/tmp/Data/Image" "D:/Data/Test/exposure35kev_01s.img"

db $(/ppcdirpnp/data/Image) flag valid

-------- Utility ---------------------------------------------------------------

call dbbrowser				Fails on Custom IS
script					Lists scripts running on every object

-------- GDA Level -------------------------------------------------------------

expose(atlas, 5, 3)
	This crashes the ISCCDAxisWrapper, but no error is reported as
	ConcurrentScan seems to swallow exceptions.

	I would expect it to do something like:

  call expose_atlas 3 "D:/Data/Test/exposure35kev_01s.img" 1 1 0 0 0 0 0 0

    call Image_Start 3 1
    call Img_Cut "/ppcdirpnp/data/Image" "/root/tmp/Data/Image" 3 1
    call applyCorrections "/root/tmp/Data/Image" 1 0 0 0
    call exportImage "/root/tmp/Data/Image" "D:/Data/Test/exposure35kev_01s.img" 0

atlas.setDir('X:/currentdir')
atlas.expose(2, 'Atlas/Dark_002s/dark_002s_1_1')
	The command from GDA fails silently

	From IS it suceeds if using X:\currentdir AND the file doesn't exist

  call expose_atlas 2 "X:/currentdir/Atlas/Dark_002s/dark_002s_9_1.img" 1 1 0 0 0 0 0 0
  call expose_atlas 2 "x:/currentdir/Atlas/Dark_002s/dark_002s_15_1.img" 1 1 0 0 0 0 0 0

	But fails if it uses the full directory name
  call expose_atlas 2 "X:/2011/cm2062-3/Atlas/Dark_002s/dark_002s_14_1.img" 1 1 0 0 0 0 0 0

	In fact, to reporoduce the problem, you only need to do an export

    export image -i /root/tmp/Data/Image to X:/2011/cm2062-3/Atlas/Dark_002s/dark_002s_14_1.img
    cr(ERROR):export image -i /root/tmp/Data/Image to X:/?!2011/cm2062-3/Atlas/Dark_002s/dark_002s_14_1.img
    cr(ERROR):Syntax error - file name expected.

    export image -i /root/tmp/Data/Image to X:/currentdir/Atlas/Dark_002s/dark_002s_14_1.img
    cr(ANS):/root/tmp/Data/Image exported as Crysalis image X:/currentdir/Atlas/Dark_002s/dark_002s_14_1.img.

	Once you've added a link from y2011 to 2011 then
  call expose_atlas 2 "X:/y2011/cm2062-3/Atlas/Dark_002s/dark_002s_14_1.img" 1 1 0 0 0 0 0 0
	also works, so IS doesn't support numeric directory names!

atlas.setDir('X:/currentdir')
atlas.expose(2, 'Atlas/Dark_002s/dark_002s_1_1')
	Using currentdir from GDA does allow us to manually expose

simpleScanUnsync(dkphi, 58, 60, 4, atlas, 2, 1, 'Atlas/Dark_002s/dark_002s')
	Appears to work (it shows the filename in the scan) but produces 2k img files.
	NOte these were created by gda, not i15detector!

simpleScan(dkphi, 58, 60, 4, atlas, 2, 1, 'Atlas/Dark_002s/dark_002s')
	Behaves as it should.

simpleScan(dkphi, 58, 60, 0.5, atlas, 2, 1)
simpleScan(axis=dkphi, start=58, stop=60, step=0.2, detector=atlas, exposureTime=3)
simpleScan(dkphi, 58, 60, 2.5, atlas, 60)

	All complete Ok.

simpleScan(dkphi, 58, 60, 2.5, atlas, 600)

	But this fails:

Exposing Atlas
java.io.IOException: java.io.IOException: Mark invalid
5)
	at org.python.core.ParserFacade.prepBufReader(ParserFacade.java:280)
	at org.python.core.ParserFacade.prepBufReader(ParserFacade.java:353)
	at org.python.core.ParserFacade.parse(ParserFacade.java:200)
	at org.python.core.Py.compile_flags(Py.java:1685)
	at org.python.core.Py.exec(Py.java:1245)
	at org.python.util.PythonInterpreter.exec(PythonInterpreter.java:181)
	at org.python.util.InteractiveInterpreter.runcode(InteractiveInterpreter.java:89)
	at gda.jython.GDAJythonInterpreter.runcode(GDAJythonInterpreter.java:471)
	at gda.jython.JythonServer.runCommand(JythonServer.java:436)
	at gda.jython.JythonServerFacade.print(JythonServerFacade.java:687)
	at sun.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)

java.io.IOException: java.io.IOException: Mark invalid
Writing data to file:/dls/i15/data/2011/cm2062-3/16336.dat
value	exposure time	dkphi	         file name
    1	        600.0	 60.5	['scan_test_92_1']

  call smi_exps1_atlas 1

    call Scan_Start 30 1
    call Img_Cut /ppcdirpnp/data/Image /tmp/Data/Image 0 1

  call smi_exps2_atlas X:/currentdir//scan_test_77_4.img 59.5 60 0.25 -134.76 -134.76 0 89.996 89.996 0 -0.004 -0.004 0 0 0 0 0 1 0 0 0 0 0 0 0 2 1

    call applyCorrections /tmp/Data/Image 1 0 0 0
    call exportImage /tmp/Data/Image X:/currentdir//scan_test_77_4.img 0

	This seems to work ok.

	Note though that the smi_exps1_atlas script hard codes a 30s
	timout.

rockScan(dkphi, 58, 1, 2, atlas, 5)

	This seems to just do a simpleScan instead, as would be expected from
	looking at ISCCDAxisWrapper:

  call smi_exps2_atlas X:/currentdir//rock_scan_test_87_1.img 57 59 0.4 -134.76 -134.76 0 89.996 89.996 0 -0.004 -0.004 0 0 0 0 0 1 0 0 0 0 0 0 0 5 1

	We would expect something like:

  call smi_xps_atlas ... ?

--------------------------------------------------------------------------------
Other test commands suggested by Nicola
--------------------------------------------------------------------------------

>>>atlas.plot('/dls/i15/data/currentDir/scan_test_76_10.img')

	This errored, but I've fixed it so now

>>>atlas.plot('/dls/i15/data/currentdir/scan_test_88_3.img')

	works.

--------------------------------------------------------------------------------

>>>atlas.getFloodFile()
Relative file name on IS machine (at C:\IS_v18A\) for flood field correction:
'lib/bin/crysalis/floodmo_a_80_calib_090311.ffiinffit'

>>>atlas.setFloodFile('lib/bin/crysalis/floodcu_a_80_calib_090311.ffiinffit')
Flood field correction file was: lib/bin/crysalis/floodmo_a_80_calib_090311.ffiinffit
File is now: lib/bin/crysalis/floodcu_a_80_calib_090311.ffiinffit (at C:\IS_v18A\)

>>>atlas.getFloodFile()
Relative file name on IS machine (at C:\IS_v18A\) for flood field correction:
'lib/bin/crysalis/floodcu_a_80_calib_090311.ffiinffit'

>>>atlas.setFloodFile('lib/bin/crysalis/floodmo_a_80_calib_090311.ffiinffit')
Flood field correction file was: lib/bin/crysalis/floodcu_a_80_calib_090311.ffiinffit
File is now: lib/bin/crysalis/floodmo_a_80_calib_090311.ffiinffit (at C:\IS_v18A\)

--------------------------------------------------------------------------------

>>>atlas.setDetectorDist(150)
Detector distance was: 0
Detector distance is now: 150

>>>atlas.setDetectorDist(150, "scan_test_88_3.img")
Detector distance was: 150
Detector distance is now: 150
Detector distance set in header on: scan_test_88_3.img

--------------------------------------------------------------------------------

>>>atlas.getDetectorDist()
150

--------------------------------------------------------------------------------
WARNING - COLLISION DANGER
	- Do not test this without Nicola present.

>>>CrysalisDataCollection.runScan(atlas, "X:/currentdir/tmp","test.run") 
runScan: runFolder = 'X:/currentdir/tmp' runFile = 'test.run' dkphi = u'dkphi'
runScan - getting runlist from Crysalis
runList = 
RunList - info
runFolder = X:/currentdir/tmp
runFile = test.run
cexperimentdir = 
cexperimentname = test
dwtotalnumofframes = 2
wreferenceframefrequency = 0
wversioninfo = 0
wisreferenceframes = 0
inumofreferenceruns = 0
inumofruns = 1

Run - run1
ddetectorindeg = 0.000000
dexposuretimeinsec = 1.000000
dkappaindeg = -134.760000
domegaindeg = 90.000000
dphiindeg = 0.000000
dscanendindeg = 60.000000
dscanspeedratio = 0.000000
dscanstartindeg = 58.000000
dscanwidthindeg = 1.000000
dwnumofframes = 2
dwnumofframesdone = 0
inum = 0
irunscantype = 4
runScan - saving runlist to u'/dls_sw/i15/software/gda/i15-config/var/CrysalisRunList_test.xml'
runScan <type 'exceptions.AttributeError'> 'gda.device.detector.odccd.CrysalisRunList' object has no attribute 'writeToXML'
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "/dls_sw/i15/software/gda/i15-config/scripts/CrysalisDataCollection.py", line 281, in runScan
    handle_messages.log(None, "runScan", type, exception, traceback, True)
  File "/dls_sw/i15/software/gda/plugins/uk.ac.gda.core/scripts/gdascripts/messages/handle_messages.py", line 108, in log
    raise Exception(msg)
Exception: runScan <type 'exceptions.AttributeError'> 'gda.device.detector.odccd.CrysalisRunList' object has no attribute 'writeToXML'

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------