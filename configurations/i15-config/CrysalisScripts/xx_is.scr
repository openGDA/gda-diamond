#
# syntax: xx_is <time> <binning> <nr of images to loop>
#
# i.e. call xx_is 1.0 2 200
#

((i):integer)
((r):real)
((timeinms):integer)

((s):integer)
((a):integer)
((max):integer)
((min):integer)

((dx):integer)
((dy):integer)
((x):integer)
((y):integer)

($(i)=0)

mode echo
if not exist object cr jmp crysalis_notexist

if (@3==0) jmp end_ok

#in test configuration for Newport we must disconnect gonio before using sm i command since shutter
#control is not going through MGC interface

if not exist object gonio jmp no_gonio 
gonio disconnect
label no_gonio

#create output window if not exist
if exist object wlog jmp wlog_exists

object wlog : win32dlg := log
wlog clear
wlog move window 0 580

label wlog_exists

#confirm gg graph window exists or create it
if exist object gg jmp gg_exists

object gg : graph
#set colour table
gg db cp file lib/db/palette.db to *
gg load palette Saturn

#set image zoom to show whole image
if (@2==1) jmp zoom1
if (@2==2) jmp zoom2
if (@2==4) jmp zoom4

echo =NOT ALLOWED BINNING
jmp end_ok

label zoom1
gg zoom 1:4
jmp endzoom

label zoom2
gg zoom 1:2
jmp endzoom

label zoom3
gg zoom 1:1

label endzoom

#set look up table range for image window
gg level = 255

#position window on screen
gg resize 533 560
gg move 730 420

label gg_exists

#confirm /root/Darks node exists or creat it
if (exist("/root/Darks")) jmp darks_node_exists

db cd /root
db mkdir /root/Darks

label darks_node_exists

($(r)=@1)
($(r)*=1000.0)
($(timeinms)=Integer($(r)))

#make temporary node
db cd /root
db mkdir /root/tmp/single

#check whether dark current exists and measure it if not
cmd="call darkcurrent "+@1+" "+@2+" \"/root/Darks\""

#Check for a rectangle window defined on the image to be used for statistics
if (Exist(//gg/rectangle/coordinate)==0) jmp loop

cmd = "wlog echo =x ="+$[0:1,0:1](//gg/rectangle/coordinate)
cmd = "wlog echo =y ="+$[1:1,1:1](//gg/rectangle/coordinate)
($(dx)=$[1:1,0:1](//gg/rectangle/coordinate))
($(dx)-=$[0:1,0:1](//gg/rectangle/coordinate))
($(dy)=$[0:1,1:1](//gg/rectangle/coordinate))
($(dy)-=$[1:1,1:1](//gg/rectangle/coordinate))
cmd = "wlog echo =dx ="+$(dx)
cmd = "wlog echo =dy ="+$(dy)

if ($(dx)==0) jmp loop
if ($(dy)==0) jmp loop

if ($(dy)>0) jmp dy_ok

#dy is wrong way round
($(y)=$[1:1,1:1](//gg/rectangle/coordinate))
($[1:1,1:1](//gg/rectangle/coordinate)=$[0:1,1:1](//gg/rectangle/coordinate))
($[0:1,1:1](//gg/rectangle/coordinate)=$(y))
($(dy)=$[0:1,1:1](//gg/rectangle/coordinate))
($(dy)-=$[1:1,1:1](//gg/rectangle/coordinate))
label dy_ok

if ($(dx)>0) jmp dx_ok

#dx is wrong way round
($(x)=$[0:1,0:1](//gg/rectangle/coordinate))
($[0:1,0:1](//gg/rectangle/coordinate)=$[1:1,0:1](//gg/rectangle/coordinate))
($[1:1,0:1](//gg/rectangle/coordinate)=$(x))
($(dx)=$[1:1,0:1](//gg/rectangle/coordinate))
($(dx)-=$[0:1,0:1](//gg/rectangle/coordinate))
label dx_ok

label loop

#take first image
cmd="sm i "+@1+" bin "+@2+"x"+@2
wait for object detector ready
save results to /root

#take second image
cmd="sm i "+@1+" bin "+@2+"x"+@2
wait for object detector ready
save results to /root/tmp/single

#### REPAIR ####
cmd = "cr repair /root/Data/Image"
cmd = "cr repair /root/tmp/single/Data/Image"

#correlate
($("/root/Data/Image")=Correlate($("/root/Data/Image"),$("/root/tmp/single/Data/Image"),$(/root/cor_len_img),$(/root/cor_fact_img)))

##### DARK SUBTRACTION #####
($("/root/Data/Image")-=$("/root/Darks/dark"+$(timeinms)+"_"+@2+"x"+@2+"/Data/Dark"))

##### UNWARP #####
cr unwarp /root/Data/Image

gg print matrix /root/Data/Image

#Check for a rectangle window defined on the image to be used for statistics
if (Exist(//gg/rectangle/coordinate)==0) jmp noarea

($(s)=Sum($[$[1:1,1:1](//gg/rectangle/coordinate):$(dy),$[0:1,0:1](//gg/rectangle/coordinate):$(dx)](/root/Data/Image)))
($(a)=Avr($[$[1:1,1:1](//gg/rectangle/coordinate):$(dy),$[0:1,0:1](//gg/rectangle/coordinate):$(dx)](/root/Data/Image)))
($(max)=Max($[$[1:1,1:1](//gg/rectangle/coordinate):$(dy),$[0:1,0:1](//gg/rectangle/coordinate):$(dx)](/root/Data/Image)))
($(min)=Min($[$[1:1,1:1](//gg/rectangle/coordinate):$(dy),$[0:1,0:1](//gg/rectangle/coordinate):$(dx)](/root/Data/Image)))
cmd = "wlog echo =SUM ="+$(s)+"  AVR ="+$(a)+"  MAX ="+$(max)+"  MIN ="+$(min)

label noarea

#increment loop counter
($(i)+=1)

if ($(i)<@3) jmp loop

wlog echo =XX IS: LOOP FINISHED

#### END OK ####
label end_ok

#reconnect gonio
gonio connect
wait for object gonio ready

return


#ERRORS

label crysalis_notexist
#!OBJECT CRYSALIS NOT EXIST
return

