#syntax: call importAndCorrelate <1. rootName> <2. exposureTime> <3. flood_mscalar> <4. unwarp> <5. flood_poly>
#
# e.g. call importAndCorrelate "x:data/currentdir/ccd_whitebeam/white_1x1_01" 10 0 0 0
#
#	...will import '.../white_1x1_01_expNo1_10s.img' and '.../white_1x1_01_expNo2_10s.img', correlate and export
#	to '.../white_1x1_01_corrSumFromImports_10s.img'. Will apply corrections before imports if correspoding flag
#	set (=1)
#
#
#
#
mode echo

#
# 1. IMPORT IMAGES
#
cmd="call setup_node \"/root/tmp1\""

#call setup_node "/root/tmp1"
#call import_img "x:data/currentdir/ccd_whitebeam/white_1x1_01_expNo1_10s.img" "/root/tmp1"

cmd="cr call import_img \""+@1+"_expNo1_"+@2+"s.img\" \"/root/tmp1\""

cmd="call setup_node \"/root/tmp2\""
cmd="cr call import_img \""+@1+"_expNo2_"+@2+"s.img\" \"/root/tmp2\""

wait for object cr ready

#
## 2. CORRELATE
#
#($("/root/tmp1/Data/Image")=correlate($("/root/tmp1/Data/Image"),$("/root/tmp2/Data/Image"),$(//root/cor_len_img),$(//root/cor_fact_img)))
#($("/root/tmp1/crysalis/image/reference")=correlate($("/root/tmp1/crysalis/image/reference"),$("/root/tmp2/crysalis/image/reference"),$(//root/cor_len_img),$(//root/cor_fact_img)))
($("/root/tmp1")=correlate($("/root/tmp1"),$("/root/tmp2"),$(//root/cor_len_img),$(//root/cor_fact_img)))
wait for object cr ready

#
## 2.5 APPLY CORRECTIONS IF FLAG SET
#
cmd="call applyCorrections \"/root/tmp1\" 0 "+@3+" "+@4+" "+@5

#
## 3. EXPORT IMAGE
#
#

label do_export

#cmd="cr call export_img_inc \"/root/tmp1/crysalis/image/reference\" \""+@1+"_corrSum_"+@2"s.img\""
cmd="cr call export_img_inc \"/root/tmp1\" \""+@1+"_corrSumFromImports_"+@2+"s.img\""
wait for object cr ready
