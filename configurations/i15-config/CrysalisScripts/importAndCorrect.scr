#syntax: call importAndCorrect 	<1. importFile> (without .img extension)
#				<2. apply repair correction> <3. poly mscalar> <4. unwarp> <5. flood poly> (1=apply correction, 0=no correction) 
#		     		<6. export all intermediate images> <7. subtract correlated dark> <8. export compressed>  (1=true, 0=false) 
#				<9. detectorDistance> (to be set in header for flood poly)
#				<10. exportSuffix> (e.g. _mscalar)
#
# e.g. call importAndCorrect "x:/testsDec18/ee863_p03_1_1" 1 1 1 1 122 "_corrSuffix"
#      call importAndCorrect "c:/imageC" 0 0 0 0 12 ""
#
#
mode echo

#
# 1. IMPORT IMAGES
#
cmd="call setup_node \"/root/tmp\""
cmd="cr call import_img \""+@1+".img\" \"/root/tmp\""

wait for object cr ready

#
## 2. SET DETECTOR DISTANCE
#
((/root/tmp/mgcctrl/Axes/cam/StartPosition):real=@9)
((/root/tmp/mgcctrl/Axes/cam/EndPosition):real=@9)

#
## 3. APPLY CORRECTIONS (excpet repair, as has already been applied)
#
#cmd="call applyCorrections \"/root/tmp/crysalis/image\" 0 "+@3+" "+@4+" "+@5
cmd="call applyCorrections \"/root/tmp\" 0 "+@3+" "+@4+" "+@5

#
## 4. EXPORT IMAGE
#

label do_export
#
#### EXPORT IMAGE TO FILE NAME
#
##cmd="cr call export_img_inc \"/root/tmp\" \""+@1+@7+".img\""
cmd="call exportImage \"/root/tmp\" \""+@1+@7+".img\" "+@8
