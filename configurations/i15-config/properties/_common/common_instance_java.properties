gda.defVisit=cm40632-2

# The following parameters cannot be placed in java.properties and need to be
# system properties, i.e. be passed in as JAVA_OPTS
#-Dgda.client.jython.automatic.interpreter=1
#-Duk.ac.diamond.scisoft.analysis.analysisrpcserverprovider.disable=True
#-Duk.ac.diamond.scisoft.analysis.rmiserverprovider.disable=True

# Standard logging system message flow and [filters]:
# Server  ---> [gda.logging.root.level] -------------------------------> Graylog
# Clients -'                             \                           '-> LogFile
#                                         '-> [gda.logpanel.filter] ---> LogPanel

# Lowest level of messages sent from clients and servers to the graylog and the logserver (default: DEBUG)
gda.logging.root.level = ALL
# If you want TRACE messages *anywhere* then this needs to be overridden.

# Lowest level of message sent from log server to the logpanel (default: ALL)
gda.logpanel.filter = INFO
# ALL is effectively DEBUG unless gda.logging.root.level is overriden.

# Default logfile pattern is
#gda.logserver.logfile.pattern = %d %-5level [%property{GDA_SOURCE}/%property{JVMNAME}] %logger - %m%n%rEx
gda.logserver.logfile.pattern  = %d %-5level [%property{GDA_SOURCE}/%property{JVMNAME}] %logger - %m [%thread]%n%rEx


gda.factory.allowExceptionInConfigure=true

gda.instrument	  = i15

gda.data.scan.datawriter.datadir = ${gda.data}/$year$/$visit$
gda.device.temperature.datadir 	= ${gda.data}/$year$/$visit$/temperature

# gda.data.scan.datawriter.dataFormat can be SrsDataFile, NexusDataWriter or NexusScanDataWriter (oldest to newest option)
gda.data.scan.datawriter.dataFormat = NexusScanDataWriter
# If this is changed, make sure the profiles are changed too
#gda.nexus.createSRS = False

# To make Nexus files made by NexusScanDataWriter look more like those from NexusDataWriter, uncomment:
#gda.nexus.entryName = entry1

# To verify i15 Nexus files against it's application definitions, uncomment:
#gda.validateNexusFile = true

gda.jython.namespaceMappingFile = ${gda.config}/scripts/jythonNamespaceMapping
gda.jython.beamlineParametersFile = ${gda.config}/scripts/beamlineParameters
gda.jython.finderNameMappingFile = ${gda.config}/scripts/finderNameMapping
gda.beamline.scripts.procedure.dir = /dls_sw/i15/scripts/procedures

## The next three have constraints. srsStation cannot have more than 4  ##
## characters, srsProject and srsExperiment cannot have more than 8 ##

gda.data.scan.datawriter.srsStation     = BASE
gda.data.scan.datawriter.srsProject     = GDA_BASE
gda.data.scan.datawriter.srsExperiment  = Emulator

## EXAFS specific settings ##

gda.exafs.minEnergy	             = 1
gda.exafs.maxEnergy	             = 15

# Epics setting
gda.beamline.name = i15
#gda.epics.request.timeout=5
# gda.epics.request.timeout=5 seconds by default, may need to be increased for large area detector arrays
gda.epics.request.timeout=15
# LH detector problem at 5s so increased to 10
# Pilatus timeout problem to increased to 15s

# Scan should set the scan number inside ScanInformation so Area Detector has access to it.
gda.scan.sets.scannumber = true

# Allow motor moves as soon as Detector returns from waitWhileBusy()
gda.scan.concurrentScan.readoutConcurrently = true

gda.scanbase.printTimestamp = true

# Note that the rbac bean is now added by default, so we need to explicitly
# turn off access control, otherwise the scannables get wrapped, and Zebra
# motors are no longer linked to the continuous motion scannable that gets
# put in the scan to coordinate the motion.
gda.accesscontrol.useAccessControl = false
gda.accesscontrol.useReducedGUI = false

# Add i15 connect properties for IspyB datbase
include=/dls_sw/dasc/mariadb/ispyb_gda.config/ispyb.i15.connect.properties
# Use the live database with care, since we don't have a sandbox/test database

# This defines	i15.server.development.ispyb.connector.urls
#				i15.server.ispyb.connector.url
#				i15.server.ispyb.connector.user
#				i15.server.ispyb.connector.password
#				i15.server.ispyb.connector.database

gda.jython.startupScript=${gda.config}/scripts/localStation.py
gda.jython.stopJythonScannablesOnStopAll=false
