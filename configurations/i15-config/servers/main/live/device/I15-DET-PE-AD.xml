<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- AD hardware -->

	<!-- Devices which are defined in Epics but not needed by the client are defined below -->

	<bean id="peAD_summary_roi1"
			class="gda.spring.V17NDROIFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:ROI1:" />
	</bean>

	<bean id="peAD_summary_roi2"
			class="gda.spring.V17NDROIFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:ROI2:" />
	</bean>

	<bean id="peAD_summary_roi3"
			class="gda.spring.V17NDROIFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:ROI3:" />
	</bean>

	<bean id="peAD_summary_roi4"
			class="gda.spring.V17NDROIFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:ROI4:" />
	</bean>

	<bean id="peAD_summary_roi5"
			class="gda.spring.V17NDROIFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:ROI5:" />
	</bean>

	<bean id="peAD_summary_roi6"
			class="gda.spring.V17NDROIFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:ROI6:" />
	</bean>

	<bean id="peAD_summary_proc1"
			class="gda.spring.V17NDProcessFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:PROC1:" />
	</bean>

	<bean id="peAD_summary_proc2"
			class="gda.spring.V17NDProcessFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:PROC2:" />
	</bean>

	<bean id="peAD_summary_proc3"
			class="gda.spring.V17NDProcessFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:PROC3:" />
	</bean>

	<bean id="peAD_summary_proc4"
			class="gda.spring.V17NDProcessFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:PROC4:" />
	</bean>

	<bean id="peAD_summary_proc5"
			class="gda.spring.V17NDProcessFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:PROC5:" />
	</bean>

	<bean id="peAD_summary_proc6"
			class="gda.spring.V17NDProcessFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:PROC6:" />
	</bean>

	<bean id="peAD_summary_stat1"
			class="gda.spring.V17NDStatsFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:STAT1:" />
	</bean>

	<bean id="peAD_summary_stat2"
			class="gda.spring.V17NDStatsFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:STAT2:" />
	</bean>

	<bean id="peAD_summary_stat3"
			class="gda.spring.V17NDStatsFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:STAT3:" />
	</bean>

	<bean id="peAD_summary_stat4"
			class="gda.spring.V17NDStatsFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:STAT4:" />
	</bean>

	<bean id="peAD_summary_stat5"
			class="gda.spring.V17NDStatsFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:STAT5:" />
	</bean>

	<bean id="peAD_summary_stat6"
			class="gda.spring.V17NDStatsFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:STAT6:" />
	</bean>

	<bean id="pe_UnixToWindowsFilePathConverter"
			class="uk.ac.gda.util.UnixToWindowsFilePathConverter">
		<property name="unixSubString" value="/dls/i15/data" />
		<property name="windowsSubString" value="x:" />
	</bean>

	<bean id="pe_NDFileTiff"
			class="gda.spring.V17NDFileFactoryBean">
		<property name="prefix" value="BL15I-EA-DET-01:TIFF:" />
		<property name="resetToInitialValues" value="false" />
		<property name="filePathConverter" ref="pe_UnixToWindowsFilePathConverter" />
	</bean>

	<bean id="pe_NDFileHDF5"
			class="gda.spring.V17NDFileHDF5FactoryBean">
		<property name="ndFileImpl">
			<bean class="gda.spring.V17NDFileFactoryBean">
				<property name="prefix" value="BL15I-EA-DET-01:HDF5:" />
				<property name="resetToInitialValues" value="false" />
				<property name="filePathConverter" ref="pe_UnixToWindowsFilePathConverter" />
			</bean>
		</property>
		<property name="initialCompression" value="zlib" />
	</bean>

	<!-- NXDetector collection strategies -->

	<!-- We need to make a PE collection strategy which understands about PE states -->

	<!-- Create collection strategy by composition -->
	<bean id="pe_UnsynchronisedExternalShutterAutoSummingProcessImageModeCollectionStrategy" 
			class="gda.device.detector.addetector.collectionstrategy.UnsynchronisedExternalShutterDecorator">
		<property name="collectionExtensionTimeS" value="10" />
		<property name="decoratee">
			<bean class="gda.device.detector.addetector.collectionstrategy.AutoSummingProcessDecorator">
				<property name="ndProcess" ref="peAD_summary_proc2" />
				<property name="processDataTypeOut" value="4" />
				<property name="decoratee">
					<bean class="gda.device.detector.addetector.collectionstrategy.MultipleImageModeDecorator">
						<property name="decoratee">
							<bean class="gda.device.detector.addetector.collectionstrategy.InternalTriggerModeDecorator">
								<property name="decoratee">
									<bean class="gda.device.detector.addetector.collectionstrategy.SoftwareStartStop">
										<property name="adBase" ref="peAD_config_base" />
									</bean>
								</property>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<!-- A value of collectionExtensionTimeS=10 should allow a collection time of up to 250 seconds with
	     dkphi set to minimumAccelerationDistance=0.004 -->
	<!-- A value of 4 in processDataTypeOut set the proc output to Int32, it defaults to 5 which is UInt32.
		 Although having the wrong value for this doesn't cause problems for the tiff writer, it does cause
		 twos complement signed data to be written to the HDF5 annotated as UInt32, i.e. small -ve values
		 are seen as huge positive values. -->

	<!-- Create collection strategy by composition -->
	<bean id="pe_Continuous" 
			class="gda.device.detector.addetector.collectionstrategy.UnsynchronisedExternalShutterDecorator">
		<property name="collectionExtensionTimeS" value="10" />
		<property name="decoratee">
			<bean class="gda.device.detector.addetector.collectionstrategy.AutoSummingProcessDecorator">
				<property name="ndProcess" ref="peAD_summary_proc2" />
				<property name="processDataTypeOut" value="4" />
				<property name="decoratee">
					<bean class="gda.device.detector.addetector.collectionstrategy.InternalTriggerModeDecorator">
						<property name="decoratee">
							<bean class="gda.device.detector.addetector.collectionstrategy.ContinuousAcquisition">
								<property name="adBase" ref="peAD_config_base" />
								<property name="ndFile" ref="pe_NDFileTiff"/>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<!-- A value of collectionExtensionTimeS=10 should allow a collection time of up to 250 seconds with
	     dkphi set to minimumAccelerationDistance=0.004 -->
	<!-- A value of 4 in processDataTypeOut set the proc output to Int32, it defaults to 5 which is UInt32.
		 Although having the wrong value for this doesn't cause problems for the tiff writer, it does cause
		 twos complement signed data to be written to the HDF5 annotated as UInt32, i.e. small -ve values
		 are seen as huge positive values. -->


	<!-- NXDetector file writers -->

	<bean id="pe_hdf5_MultipleImagesPerHDF5FileWriter"
			class="gda.device.detector.addetector.filewriter.MultipleImagesPerHDF5FileWriter">
		<property name="ndFileHDF5" ref="pe_NDFileHDF5" />
		<property name="fileTemplate" value="%s%s%05d.hdf5" />
		<property name="filePathTemplate" value="$datadir$" />
		<property name="fileNameTemplate" value="$scan$-pe" />
		<property name="fileNumberAtScanStart" value="-1" /> <!-- 1 results in filenames of the form 92920-pe92920.hdf5 -->
		<property name="setChunking" value="false" />
		<!-- <property name="writeErrorStatusSupported" value="false" /> -->
		<property name="lazyOpen" value="true" />
		<!-- TODO: While we can set ndArrayPortVal from here, this filewriter may be used by detectors with different collection
			 strategies so we should have the option to take the filewriter port from the collection Strategy. For example: -->
		<!-- When using pe_SingleExposureStandardCollectionStrategy it needs to be set to pe1.cam, but 
			 When using pe_MultipleExposureSoftwareTriggerAutoModeCollectionStrategy without dark subtraction this needs to be set
			 we need to use pe1.proc.proc2 and with dark subtraction it needs to be set we need to use pe1.proc.proc3
		 -->
		<property name="ndArrayPortVal" value="pe1.proc.proc3" />
		<!--
		<property name="ndArrayPortVal" value="pe1.proc.proc2" />
		<property name="ndArrayPortVal" value="pe1.cam" />
		 -->
	</bean>

	<!-- SingleImagePerFileWriter(String detectorName)
	 -->
	<bean id="pe_tiff_SingleImagePerFileWriter"
			class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pe" />
		<property name="ndFile" ref="pe_NDFileTiff" />
		<property name="keyNameForMetadataPathTemplate" value="pe_path_template" />
		<!-- TODO: While we can set ndArrayPortVal from here, this filewriter may be used by detectors with different collection
			 strategies so we should have the option to take the filewriter port from the collection Strategy. For example: -->
		<!-- When using pe_SingleExposureStandardCollectionStrategy it needs to be set to pe1.cam, but 
			 When using pe_MultipleExposureSoftwareTriggerAutoModeCollectionStrategy without dark subtraction this needs to be set
			 we need to use pe1.proc.proc2 and with dark subtraction it needs to be set we need to use pe1.proc.proc3
		 -->
		<property name="ndArrayPortVal" value="pe1.proc.proc3" />
		<!--
		<property name="ndArrayPortVal" value="pe1.proc.proc2" />
		<property name="ndArrayPortVal" value="pe1.cam" />
		 -->
	</bean>

	<!-- NXDetectors -->

	<bean id="pe"
			class="gda.device.detector.HardwareTriggeredNXDetectorWithReadoutTime">
		<property name="name" value="pe"/>
		<property name="hardwareTriggerProvider" ref="zebraContinuousMoveController"/>
		<property name="collectionStrategy" ref="pe_UnsynchronisedExternalShutterAutoSummingProcessImageModeCollectionStrategy" />

		<property name="additionalPluginList">
			<list>
				<ref bean="pe_hdf5_MultipleImagesPerHDF5FileWriter" />
				<ref bean="pe_tiff_SingleImagePerFileWriter" />
			</list>
		</property>
	</bean>
</beans>