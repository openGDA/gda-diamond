<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- AD hardware -->

	<!-- Devices which are defined in Epics but not needed by the client are defined below -->

	<bean id="pil3AD_driver"
			class="gda.device.detector.areadetector.v17.impl.ADDriverPilatusImpl">
		<property name="basePVName" value="BL15I-EA-PILAT-03:CAM:" />
	</bean>

	<!-- NXDetector collection strategies -->


	<bean id="pil3_HardwareTriggeredPilatusCollectionStrategy"
			class="gda.device.detector.addetector.triggering.HardwareTriggeredPilatus">
		<constructor-arg ref="pil3AD_config_base" />
		<constructor-arg ref="pil3AD_driver" />
		<constructor-arg value=".003" />
		<constructor-arg value="MULTIPLE_EXTERNAL_TRIGGER" />
	</bean>

	<!-- NXDetector file writers -->

	<bean  id="pil3_camserver_SimpleFilePathConverter"
			class="uk.ac.gda.util.SimpleFilePathConverter">
		<property name="userSubString" value="/dls/i15/data" />
		<property name="internalSubString" value="/ramdisk" />
	</bean>

<!-- Will fix the "no base" issue?
	<bean id="pil3_camserver_ndfile"
			class="gda.spring.V17NDFileFactoryBean">
		<property name="prefix" value="BL15I-EA-PILAT-03:CAM:" />
		<property name="resetToInitialValues" value="false" />
		<property name="filePathConverter" ref="pil3_camserver_SimpleFilePathConverter" />
	</bean>
 -->

	<bean id="pil3_camserver_ndfile"
			class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
		<property name="basePVName" value="BL15I-EA-PILAT-03:CAM:" />
		<property name="resetToInitialValues" value="false" />
		<property name="filePathConverter" ref="pil3_camserver_SimpleFilePathConverter" />
	</bean>

	<bean id="pil3_cbf_SingleImagePerFileWriter"
			class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pil3cbf" />
		<property name="ndFile" ref="pil3_camserver_ndfile" />
		<property name="pathErrorSuppressed" value="true" />
		<property name="name" value="cbfwriter" />
		<!-- Extra things needed by i16, probably not needed on i15
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="alwaysPrepare" value="true" />
		<property name="keyNameForMetadataPathTemplate" value="pilatus3_100k_path_template" />
		<property name="waitForFileArrival" value="false" /> <?ignore Should be True if not using ProcessingDetectorWrapper ?> 
		<property name="blocking" value="false" />
		<property name="returnPathRelativeToDatadir" value="true" />
		 -->
	</bean>

	<!-- NXDetectors -->

	<bean id="pil3cbf"
			class="gda.device.detector.HardwareTriggeredNXDetectorWithReadoutTime">
		<property name="name" value="pil3cbf"/>
		<!-- 
		<property name="readOutTime" value="240"/>
		 -->
		<property name="hardwareTriggerProvider" ref="zebraContinuousMoveController"/>
		<property name="collectionStrategy" ref="pil3_HardwareTriggeredPilatusCollectionStrategy" />
		<property name="additionalPluginList">
			<list>
				<ref bean="pil3_hdf5_MultipleImagesPerHDF5FileWriter" />
				<ref bean="pil3_cbf_SingleImagePerFileWriter" />
				<!-- Note pil3_cbf_SingleImagePerFileWriter does not enable array callbacks, as it
					 writes .cbf files via the CAM plugin.

					 If no other plugins are in this list then no other AD plugins will see data
					 unless pilatus3_force_callbacks is included.
				<ref bean="pilatus3_force_callbacks" />
				 -->
			</list>
		</property>
	</bean>
</beans>