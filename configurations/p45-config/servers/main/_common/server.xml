<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:corba="http://www.diamond.ac.uk/schema/gda/corba"
	xmlns:gda="http://www.diamond.ac.uk/schema/gda/gda"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.diamond.ac.uk/schema/gda/corba
	http://www.diamond.ac.uk/schema/gda/corba/gda-corba-1.0.xsd
	http://www.diamond.ac.uk/schema/gda/gda
	http://www.diamond.ac.uk/schema/gda/gda/gda-gda-1.1.xsd" >

	<context:property-placeholder/>

	<bean class="gda.spring.FindableNameSetterPostProcessor" />

	<bean id="GDAMetadata" class="gda.data.metadata.GdaMetadata"/>
	<bean id="GDAHashtable" class="gda.util.findableHashtable.FindableHashtable" />

	<!--  object to provide recording of metadata in Nexus files -->
	<bean id="metashop" class="gda.data.metadata.NXMetaDataProvider">
		<property name="name" value="metashop"/>
	</bean>

	<!-- This can't be replaced with gda:rmi-export as it doesn't yet handle plain objects retrieved via SpEL -->
	<bean class="uk.ac.gda.remoting.server.GdaRmiServiceExporter">
		<property name="serviceName" value="gda/ScanDataPointServer" />
		<property name="service" value="#{ T(gda.scan.ScanDataPointServer).getInstance() }" />
		<property name="serviceInterface" value="gda.scan.IScanDataPointServer" />
	</bean>


	<import resource="file://${gda.core.dir}/servers/_common/plot_server.xml" />

	<import resource="file://${gda.facility.dir}/servers/_common/det.xml"/>
	<import resource="file://${gda.facility.dir}/servers/_common/mic.xml"/>
	<import resource="file://${gda.facility.dir}/servers/_common/constantVelocityDevice.xml"/>
	<import resource="file://${gda.facility.dir}/servers/_common/darkImageDetector.xml"/>
	<import resource="dummyMalcolmDetector.xml"/>
	<import resource="file://${gda.facility.dir}/servers/_common/mandelbrotDetector.xml"/>
	<import resource="command_queue_processor.xml"/>
	<import resource="jython_server_facade.xml" />
	<import resource="file://${gda.facility.dir}/servers/_common/mapping_motors.xml"/>
	<import resource="file://${gda.facility.dir}/servers/_common/mandelbrot_detectors.xml"/>
	<import resource="aop.xml"/>
	<import resource="logging_script_controller.xml"/>
	<import resource="toplink_persistence.xml"/>

	<!-- To enable use of a simulated AD uncomment this import -->
	<!-- <import resource="simulated_area_detector.xml"/> -->
	<corba:export namespace="${gda.beamline.name}" />

	
	<!--  
	      IMPORTANT: this will start processing the scanning queue. 
	      detectors must be created before doing this.
	      ADVISED: do it last or towards the end, scan will now start to run!
	 --> 
	<import resource="solstice_scanning.xml"/> 

</beans>
