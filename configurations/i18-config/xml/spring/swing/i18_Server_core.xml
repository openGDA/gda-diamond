<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
           
 <bean id="dummy_xmapcontroller" class="gda.device.detector.xmap.DummyXmapController">
		<property name="local" value="true"/>
		<property name="numberOfMca" value="4"/>
		<property name="numberOfBins" value="1024"/>
		<property name="numberOfROIs" value="10"/>
</bean> 

<bean id="GDAHashtable" class="gda.util.findableHashtable.FindableHashtable"/>

	<!-- ************************ -->
	<!-- *** DETECTOR SECTION *** -->
	<!-- ************************ -->
	<!-- Dummy CounterTimer for temporary use in Exafs -->
<bean id="dummytfg" class="gda.device.timer.DummyTfg" />
	
<bean id="xmapMca" class="gda.device.detector.xmap.Xmap">
<property name="xmapControllerName" value="xmapcontroller"/>
</bean>

	<!-- XSPRESS2 DA Server -->
	<bean id="daserver" class="gda.device.detector.DAServer">
	<property name="local" value="true"></property>
	<property name="host" value="i18-xspress0"></property>
	<property name="port" value="1972"></property>
	<property name="startupCommands">
			<list>
				<value>~config</value>				
			</list>
		</property>
	<property name="dataPort" value="20030"></property>
	<property name="replyTimeOut" value="5000"></property>
	</bean>
	

	<!-- Time Frame Generator (TFG) -->
	<bean id="tfg" class="gda.device.timer.Etfg">
	<property name="daServerName" value="daserver"></property>
	</bean>
	
	<bean id="counterTimer02" class="gda.device.detector.countertimer.TfgXspress">
	<property name="extraNames" >
		<list>
				<value>flu_0</value>
				<value>flu_1</value>
				<value>flu_2</value>
				<value>flu_3</value>
				<value>flu_4</value>
				<value>flu_5</value>
				<value>flu_6</value>
				<value>flu_7</value>
				<value>flu_8</value>
		</list>
		</property>
		<property name="xspressSystemName" value="xspress2system"></property>
		<property name="timerName" value="tfg"></property>
		<property name="slave" value="true"></property>
	</bean>
	
	<!-- XSPRESS2 System -->
	<!-- Startup script which does the setup command is no longer needed for the 
		new version of the xspress as it is done in the config script using the follwoing
		commands, set-input and set-glitch. However a new command called format-run for setting the output format 
		 has to be sent before opening the mca and scaler paths. So in this version of gda the startupScript element 
		 is used to send this format command. In later versions of GDA this will be replaced by a formatCommand element-->
	<bean id="xspress2system" class="gda.device.xspress.Xspress2System">
	<property name="daServerName" value="daserver"></property>
	<property name="tfgName" value="tfg"></property>
	<property name="mcaOpenCommand" value="xspress2 open-mca 'xsp1'"></property>
	<property name="scalerOpenCommand" value="xspress2 open-scalers 'xsp1'"></property>
	<property name="startupScript" value="xspress2 format-run 'xsp1' res-none"></property>
	<property name="numberOfDetectors" value="9"></property>
	<property name="dummy" value="false"></property>
	</bean>
	
	<bean id="CalMemory" class="gda.device.memory.Scaler">
	<property name="daServerName" value="daserver"></property>
	<property name="width" value="3"></property>
	<property name="height" value="1"></property>
	<property name="openCommand" value="tfg open-cc"></property>
	</bean>
	
	<bean id="mapdetector" class="gda.device.detector.DummyDetector"/>
	<bean id="vortexmapdetector" class="gda.device.detector.DummyDetector"/>
	
	<bean id="counterTimer01" class="gda.device.detector.countertimer.TfgScaler">
	<property name="extraNames">
		<list>
			<value>I0</value>
			<value>It</value>
			<value>Iref</value>
		</list> 
	</property>
	<property name="scalerName" value="CalMemory"></property>
	<property name="timerName" value="tfg"></property>
	</bean>
	
		<!-- Photonic Science CCD -->
<bean id="photonccd" class="gda.device.detector.IPPserver">
	<property name="outputFolderRoot" value="x:/data/2010/sp6208-1/xrd/"></property>
	<property name="fileNameRoot" value="i18-"></property>
	<property name="fileFormat" value="tif"></property>
	<property name="collectionTime" value="1"></property>
	<property name="host" value="172.23.118.71"></property>
	<property name="port" value="23"></property>
</bean>
	
	<!-- SESO XBPM -->
<bean id="seso" class="gda.device.detector.SesoXbpmDetector" >
	<property name="host" value="172.23.118.71"></property>
	<property name="port" value="20"></property>
</bean>
	
<!-- Lookup table converters for idgap -->

	
<bean id="eV_mDeg_converter" class="gda.util.converters.JEPConverterHolder">
		<constructor-arg value="eV_mDeg_converter" />
		<constructor-arg value="${gda.function.columnDataFile.lookupDir}/eV_mDeg_converter.xml" />
	</bean>
	<bean id="mDeg_dcm_perp_mm_converter" class="gda.util.converters.JEPConverterHolder">
		<constructor-arg value="mDeg_dcm_perp_mm_converter" />
		<constructor-arg value="${gda.function.columnDataFile.lookupDir}/mDeg_dcm_perp_mm_converter.xml" />
	</bean>
	<bean id="xz_converter" class="gda.util.converters.JEPConverterHolder">
		<constructor-arg value="xz_converter" />
		<constructor-arg value="${gda.function.columnDataFile.lookupDir}/xz_converter.xml" />
	</bean>
	<bean id="mDeg_idGap_mm_converter" class="gda.util.converters.RenameableConverter">
		<constructor-arg value="mDeg_idGap_mm_converter" />
		<constructor-arg value="harmonic1_converter" />
	</bean>
	<bean id="harmonic1_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic1_converter" />
		<constructor-arg value="lookuptable_harmonic1_260908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic3_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic3_converter" />
		<constructor-arg value="lookuptable_harmonic3_280109.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic5_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic5_converter" />
		<constructor-arg value="lookuptable_harmonic5_150908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic7_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic7_converter" />
		<constructor-arg value="lookuptable_harmonic7_240908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic9_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic9_converter" />
		<constructor-arg value="lookuptable_harmonic9_240908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic11_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic11_converter" />
		<constructor-arg value="lookuptable_harmonic11_150908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic13_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic13_converter" />
		<constructor-arg value="lookuptable_harmonic13_150908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic15_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic15_converter" />
		<constructor-arg value="lookuptable_harmonic15_150908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic17_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic17_converter" />
		<constructor-arg value="lookuptable_harmonic17_150908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	<bean id="harmonic19_converter" class="gda.util.converters.LookupTableConverterHolder">
		<constructor-arg value="harmonic19_converter" />
		<constructor-arg value="lookuptable_harmonic19_150908.txt" />
		<constructor-arg value="0" />
		<constructor-arg value="1" />
		<constructor-arg type="java.lang.String" value="Both" />
	</bean>
	
	
	<bean id="harmonic1" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic1" />
		<constructor-arg value="harmonic1_converter" />
		<constructor-arg value="56187" />
		<constructor-arg value="70000" />
	</bean>
	<bean id="harmonic3" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic3" />
		<constructor-arg value="harmonic3_converter" />
		<constructor-arg value="24801" />
		<constructor-arg value="56186" />
	</bean>
	<bean id="harmonic5" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic5" />
		<constructor-arg value="harmonic5_converter" />
		<constructor-arg value="17201" />
		<constructor-arg value="24800" />
	</bean>
	<bean id="harmonic7" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic7" />
		<constructor-arg value="harmonic7_converter" />
		<constructor-arg value="13201" />
		<constructor-arg value="17200" />
	</bean>
	<bean id="harmonic9" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic9" />
		<constructor-arg value="harmonic9_converter" />
		<constructor-arg value="11001" />
		<constructor-arg value="13200" />
	</bean>
	<bean id="harmonic11" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic11" />
		<constructor-arg value="harmonic11_converter" />
		<constructor-arg value="9251" />
		<constructor-arg value="11000" />
	</bean>
	<bean id="harmonic13" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic13" />
		<constructor-arg value="harmonic13_converter" />
		<constructor-arg value="8001" />
		<constructor-arg value="9250" />
	</bean>
	<bean id="harmonic15" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic15" />
		<constructor-arg value="harmonic15_converter" />
		<constructor-arg value="7101" />
		<constructor-arg value="8000" />
	</bean>
	<bean id="harmonic17" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic17" />
		<constructor-arg value="harmonic17_converter" />
		<constructor-arg value="6701" />
		<constructor-arg value="7100" />
	</bean>
	<bean id="harmonic19" class="gda.util.converters.util.RangeandConverterNameHolder">
		<constructor-arg value="harmonic19" />
		<constructor-arg value="harmonic19_converter" />
		<constructor-arg value="5450" />
		<constructor-arg value="6700" />
	</bean>
	 <bean id="lookup_name_provider" class="gda.util.converters.util.RangeConverterNameProvider">
		<constructor-arg value="lookup_name_provider" />
		<constructor-arg value="harmonic1_converter" />
		<property name="converters">
			<list>
				<ref bean="harmonic1" />
				<ref bean="harmonic3" />
				<ref bean="harmonic5" />
				<ref bean="harmonic7" />
				<ref bean="harmonic9" />
				<ref bean="harmonic11" />
				<ref bean="harmonic13" />
				<ref bean="harmonic15" />
				<ref bean="harmonic17" />
				<ref bean="harmonic19" />
			</list>
		</property>
	</bean>
	<bean id="auto_mDeg_idGap_mm_converter" class="gda.util.converters.AutoRenameableConverter">
		<constructor-arg value="auto_mDeg_idGap_mm_converter" />
		<constructor-arg value="lookup_name_provider" />
		<constructor-arg value="true" />	
	</bean>
	
<!--
		The ScanDataStore is required for the communication of ScanDataPoints
	-->
	<bean id="ScanDataStore" class="gda.util.simpleServlet.FindableSimpleServlet" />   
   
  <bean id="FileRegistrar" class="gda.data.fileregistrar.FileRegistrar">
		<property name="directory" value="/tmp/i18_" />
	</bean>
	
	<bean id="DataWriterFactory" class="gda.data.scan.datawriter.DefaultDataWriterFactory">
       <property name="dataWriterExtenders">
           <list>
               <ref bean="FileRegistrar" />
           </list>
       </property>
	</bean>
	</beans>
