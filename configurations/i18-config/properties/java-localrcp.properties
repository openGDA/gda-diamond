gda.factory.factoryName 	= I18_local
gda.oe.oefactory        	= remote
gda.objectserver.xml    	= ${gda.config}/xml/spring/server/I18-sim-main.xml
gda.gui.xml		       		= ${gda.config}/xml/spring/client/sim-client.xml
testing.gda.gui.xml   =${gda.config}/xml/TB_Client_Testing.xml 


gda.data                              = /scratch/users/data
gda.logs.dir                          = /scratch/users/logs
gda.jython.userScriptDir              = /scratch/users/scripts

gda.data.scan.datawriter.datadir      = ${gda.data}/$year$/$visit$/
gda.var                               = ${gda.config}/var

gda.defVisit=cm1946-2
#
gda.rmi.prefix=rmi://localhost/gda
#gda.var = "${gda.config}/var"
gda.jython.namespaceMappingFile = ${gda.config}/scripts/jythonNamespaceMapping
gda.jython.finderNameMappingFile = ${gda.config}/scripts/finderNameMapping
gda.jython.socket = 7777

#gda.logger.impl.server = ${gda.config}/xml/i18_logback.xml
#gda.logger.impl.client = ${gda.config}/xml/i18_logClient.xml

# GDA logging configuration parameters. The client port must match with the port
# setting in SocketAppender element of the LogServer.xml. If client port is not 
# set here, the default port is 6001 in AcquisitionGUI.java. The server port must also match 
# with the port number in SocketAppender element of the 
# ServerLoggingConfiguration.xml. If server port is not set here, the default
# port is 6000 in LogServer.java.

# message-panel listen on port (from log-server and client):
gda.client.logging.port = 6789
# log-server listen on port (from gda-server):
gda.server.logging.port = 6788
gda.logPanel.logging.xml= ${gda.config}/xml/spring/logging/logPanel.xml
gda.logPanel.logging.port=6790
# no ports configured here:
gda.client.logging.xml = ${gda.config}/xml/simulation/I18_ClientLoggingConfiguration.xml
# gda-server transmit to port (to log-server)
gda.server.logging.xml = ${gda.config}/xml/logging/i18_ServerLoggingConfiguration.xml
# log-server transmit to port (to message panel):
gda.logserver.xml = ${gda.config}/xml/simulation/I18_LogServer.xml
gda.scan.useScanPlotSettings = true

gda.help.manual=http://doc.diamond.ac.uk/Documentation/GDA-manual.html
gda.bugReport.site=http://trac.diamond.ac.uk/beam/login

#gda.data.scan.datawriter.datadir  = ${gda.users}/data/
#gda.device.xspress.mcDataDir      = /dls/$instrument$/data/$year$/$visit$
#gda.device.xspress.spoolDir       = /dls/$instrument$/data/$year$/$visit$/spool
#gda.microfocus.xrfdirectory       = /dls/$instrument$/data/$year$/$visit$/xrf

#Change the line below to specify the folder in case the value from IKitten is not correct
#gda.data.scan.datawriter.datadir = /dls/$instrument$/data/$year$/$visit$
#gda.defVisit=sp0
gda.rcp.workspace                   = ${gda.data.scan.datawriter.datadir}/.workspace/
gda.data.scan.datawriter.rgbdatadir  = ${gda.data.scan.datawriter.datadir}/processing/
gda.device.xspress.mcDataDir      = ${gda.data.scan.datawriter.datadir}/
gda.device.xspress.spoolDir       = ${gda.data.scan.datawriter.datadir}/spool/
gda.device.vortex.spoolDir        = ${gda.data.scan.datawriter.datadir}/spool/
gda.microfocus.xrfdirectory       = ${gda.data.scan.datawriter.datadir}/xrf/
gda.detectors.save.single.acquire = true

gda.jython.translator.class 	     = GeneralTranslator
#gda.data.scan.datawriter.dataFormat  = DiamondDataWriter
gda.data.scan.datawriter.dataFormat = XasAsciiNexusDataWriter
#gda.data.scan.datawriter.dataFormat 	 = SrsDataFile
gda.data.fileExtension = nxs
gda.data.filePrefix = i18-
#gda.data.numtracker 			= ${gda.users}/var

gda.data.nexusMetadata = true
gda.data.srbStore = true
false
# Configuration for NeXus writing
gda.nexus.backend = HDF5
gda.nexus.beamlinePrefix = true
gda.nexus.createSRS = true

# Metadata items
gda.beamline.name       = i18
gda.instrument		    = i18
gda.facility	    	= DLS
gda.facility.type      	= Synchrotron X-Ray Source
gda.facility.probe      = X-ray

# Metadata values that would normally be read from ICAT
# (just define them as properties so that we don't need an ICAT!)
#gda.icat.visit = so666-0
#gda.icat.proposal = 666
#gda.icat.title = GDA base simulation

# Default values
#gda.defVisit = 0-0

## The next three have constraints. srsStation cannot have more than 4  ##
## characters, srsProject and srsExperiment cannot have more than 8 ##
#
gda.data.scan.datawriter.srsStation     = i18
gda.data.scan.datawriter.srsProject     = development
gda.data.scan.datawriter.srsExperiment  = scripting
#
# Settings for DDH 
#gda.ddh.xml = ${gda.root}/src/gda/ddh/ddh.xml
# Directory to use to store the run number.
gda.data.scan.runNum = ${gda.var}
#
gda.data.scan.scanCompleteDir = /scratch/ddh
#
## Next three settings are for the jacorb CORBA event service ##
#
gda.ORBClass 	      	= org.jacorb.orb.ORB
gda.ORBSingletonClass   = org.jacorb.orb.ORBSingleton
gda.eventChannelName  	= local.eventChannel
#
#
## Next are miscellaneaous settings for various file locations and options ##
#
gda.params	       	            = ${gda.config}
gda.motordir                    = ${gda.config}/var/motorPositions
gda.limitsdir		            = ${gda.config}/var/limitsAndOffset
gda.softlimits.save       		= true
#
#
## These next are OEMove Panel display settings  ##
#
gda.gui.oemove.xmlFile = ${gda.config}/xml/i18_oemove.xml
gda.gui.oemove.singleMenu    =  false
gda.gui.oemove.pictorialView =  true
gda.gui.oemove.absolute     =  true
gda.gui.oemove.relative     =  true
gda.gui.oemove.continuous   =  true
gda.gui.oemove.set          =  true
gda.gui.oemove.homeSet      =  true
gda.gui.oemove.home         =  true
#
#
## EXAFS specific settings ##
#
gda.exafs.buttonFontSize         = 10
gda.exafs.minEnergy	             = 2
gda.exafs.maxEnergy	             = 21
gda.exafs.twoD		             = 6.271
gda.exafs.parameterDir                = ${gda.config}
#need to check if this disrupts the already existing settings - vas
gda.function.columnDataFile.lookupDir = ${gda.config}/lookupTables

# I18 Specific Developments!
gda.exafs.i18.windows.directory = ${gda.config}/var/windows
gda.exafs.i18.vortex.windows.directory = ${gda.config}/var/windows/vortexwindows
gda.exafs.i18.windows.filename = default
gda.exafs.i18.windows.label = default
#gda.exafs.i18.scan.class = I18ExafsScanClass
#gda.exafs.i18.transmission.scan.class = I18TransmissionExafsScanClass
#gda.exafs.i18.vortex.scan.class = I18VortexExafsScanClass
gda.exafs.i18.scan.class = DummyExafsScanClass
gda.exafs.i18.transmission.scan.class = DummyTransmissionExafsScanClass
#gda.microfocus.i18.step.scan.class = I18StepMapClass
gda.microfocus.i18.step.scan.class = DummyStepMapClass
#gda.microfocus.i18.transmission.scan.class = I18TransmissionMapClass
gda.microfocus.i18.transmission.scan.class = DummyTransmissionMapClass
gda.microfocus.i18.continuous.scan.class = I18ContinuousMapClass
gda.i18.daserver.restart.script = ${gda.root}/bin/daserver_remote_restart
gda.i18.ftpserver.passwordfile = ${gda.config}/fpassword

#
## MicroFocus ##
gda.microfocus.runnumberfile = ${gda.config}/microfocus_runfileno.txt
gda.microfocus.defaultscasfile = ${gda.config}/default.scas
gda.microfocus.defaultvortexscasfile = ${gda.config}/vortexdefault.scas
gda.microfocus.vortex.mca.dummy = true

#
## XSPRESS ##
gda.device.xspress.configFileName = ${gda.config}/var/detectors.cnf
gda.device.xspress.cnfDir 	  = ${gda.config}/var/
gda.xspress.readusingscript = true

#gda.xspress.cnfDir
#
## Docking Frame work licensing information
gda.gui.dock                =  true
gda.gui.fractionalSize      = 0.89
jdock.license.company.name = Diamond Light Source Ltd. and CCLRC
jdock.license.project.name = GDA
jdock.license.key = 0:doY66fEjlH8O.8XZmC62YgKankiZK2
# Number of screens. Usually 1,2 or 4 
gda.gui.nosOfScreens = 1  
# The position of screen displaying the main gda Acquisition panel 
# Either top, bottom, left or right for 2 screens or topleft, topright, bottomleft, bottomright for 4 screens. 
gda.gui.displayingScreen  = bottom

# GDA coordinate system
gda.coordinate.name = DLS-coordinate

# GDA Device Drive Unit System
gda.unit.name = DLS-unit

# Epics setting
gda.epics.beamline.name = BL18I
gda.epics.interface.xml = ${gda.config}/xml/epics/gda-interface.xml
#gda.epics.interface.xml = ${gda.config}/xml/xps-interface.xml
gda.epics.interface.schema = ${gda.config}/xsd/epics/genericBeamlineSchema.xsd
#gda.epics.interface.xml.unchecked = ${gda.config}/xml/BL18I-gda-interface_unchecked.xml
gda.epics.devices.xml = ${gda.config}/xml/epics/BL18I-gda-devices.xml
gda.epics.types.xml = ${gda.config}/xml/epics/BL18I-gda-types.xml
gda.epics.configs.xml = ${gda.config}/xml/epics/BL18I-gda-configs.xml
gda.epics.request.timeout = 60.0

gda.rmi.prefix=rmi://localhost/gda
# Login Authentication 
#gda.gui.AcquisitionGUI.authenticationMethod = JaasAuthenticator

# Lookup Panel
#gda.lookup.directory=${gda.config}/var/lookup
# used for ICAT
#oracle.host=localhost
#oracle.port=1521
#icat.username=ikiti18
#icat.password=d24sb4k
# for rbac
gda.accesscontrol.useAccessControl = false
# if set to true then the BatonPanel MUST be used in the GUI to exchange and control the baton
gda.accesscontrol.useBatonControl = false
# this must not be set to less than 1 or baton passing will not work
gda.accesscontrol.defaultAuthorisationLevel = 1
gda.accesscontrol.defaultStaffAuthorisationLevel = 3 
gda.accesscontrol.firstClientTakesBaton = true
gda.i18.energyController = comboDCM_d

##multithreaded scans
gda.scan.multithreadedScanDataPointPipeline.length = 1
gda.scan.multithreadedScanDataPointPipeline.pointsToComputeSimultaneousely = 1
##localstation name
gda.jython.stationStartupScript = ${gda.config}/scripts/localStation_localrcp.py
gda.microfocus.checkInTemplate = true
gda.microfocus.exafs.autoChangeFluorescenceFile = true
##property to override the xspress mode set in the parameters xml file
## when set to true xspress mode is always set to Scalers and MCA
gda.xspress.mode.override = true

## Synoptic screen and script locations
gda.dal.screens = ${gda.config}/synoptic/screens/
gda.dal.scripts = ${gda.config}/synoptic/scripts/
##Property to save the data from single acquire od detectors to spool directory
gda.detectors.save.single.acquire = true

# for experiment perspective. So it uses the correct project in the workspace
gda.client.experimentdefinition.project.name = exafs
gda.xml.save.extension = true