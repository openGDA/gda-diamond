<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="localhostInetAddress" class="java.net.InetAddress" factory-method="getLocalHost"/>
	
	<!-- Andor controls -->
	<bean id="andorExposureTime" class="gda.device.scannable.EpicsScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime"/>
		<property name="useNameAsInputName" value="true"/>
		<property name="hasUnits" value="false"/>
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="andorAcquirePeriod" class="gda.device.scannable.EpicsScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquirePeriod"/>
		<property name="useNameAsInputName" value="true"/>	
		<property name="hasUnits" value="false"/>	
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="andorCountdown" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimer" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
		<property name="timeFormatInSeconds" value="%4d"/>
	</bean>	
	<bean id="andorCountdownProgress" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimerProgress" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
	</bean>	
	<!-- Polarimeter controls -->
	<bean id="polarimeterExposureTime" class="gda.device.scannable.EpicsScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime"/>
		<property name="useNameAsInputName" value="true"/>
		<property name="hasUnits" value="false"/>
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="polarimeterAcquirePeriod" class="gda.device.scannable.EpicsScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquirePeriod"/>
		<property name="useNameAsInputName" value="true"/>	
		<property name="hasUnits" value="false"/>	
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="polarimeterCountdown" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimer" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
		<property name="timeFormatInSeconds" value="%4d"/>
	</bean>	
	<bean id="polarimeterCountdownProgress" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimerProgress" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
	</bean>	
	<!-- there is no EPICS simulation for the following beans -->
	<bean id="sampleTemperature" class="gda.device.scannable.DummyScannable">
		<constructor-arg index="0" value="sampleTemperature"/>
		<constructor-arg index="1" value="300.000"/>
		<property name="outputFormat">
			<list>
				<value>%6.3f</value>
			</list>
		</property>
	</bean>
</beans>
