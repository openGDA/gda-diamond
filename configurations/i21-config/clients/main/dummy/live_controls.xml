<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="localhostInetAddress" class="java.net.InetAddress" factory-method="getLocalHost"/>
	
	<!-- Andor controls -->
	<bean id="andorExposureTime" class="gda.device.scannable.PVScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime"/>
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="andorAcquirePeriod" class="gda.device.scannable.PVScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquirePeriod"/>
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="andorCountdown" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimer" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
		<property name="timeFormatInSeconds" value="%4d"/>
	</bean>	
	<bean id="andorCountdownProgress" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimerProgress" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
	</bean>	
	<!-- Polariser controls -->
	<bean id="andor2ExposureTime" class="gda.device.scannable.PVScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime"/>
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="andor2AcquirePeriod" class="gda.device.scannable.PVScannable">
		<property name="pvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquirePeriod"/>
		<property name="outputFormat">
			<list>
				<value>%4.3f</value>
			</list>
		</property>	
	</bean>
	<bean id="andor2Countdown" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimer" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
		<property name="timeFormatInSeconds" value="%4d"/>
	</bean>	
	<bean id="andor2CountdownProgress" class="uk.ac.gda.client.live.stream.controls.utils.EpicsCountDownTimerProgress" init-method="init" destroy-method="destroy">
		<property name="countdownTimePvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:AcquireTime_RBV"/>
		<property name="countdownTriggerPvName" value="#{ localhostInetAddress.hostName.split('\.')[0] }-AD-SIM-01:CAM:Acquire"/>
		<property name="updateIntervalInSeconds" value="1"/>
	</bean>	
	<!-- there is no EPICS simulation for the following beans -->
	<bean id="sampleTemperature" class="gda.device.scannable.DummyScannable">
		<constructor-arg index="0" value="sampleTemperature"/>
		<constructor-arg index="1" value="300.000"/>
		<property name="outputFormat">
			<list>
				<value>%6.3f</value>
			</list>
		</property>
	</bean>
	<bean id="feedbackState" class="gda.device.enumpositioner.DummyEnumPositioner">
		<property name="positions">
			<util:list list-class="java.util.ArrayList">
				<value>Feedback Off</value>
				<value>Feedback On</value>
			</util:list>
		</property>
	</bean>
	<bean id="feedbackMode" class="gda.device.enumpositioner.DummyEnumPositioner">
		<property name="positions">
			<util:list list-class="java.util.ArrayList">
				<value>Off (override)</value>
				<value>On (override)</value>
				<value>TopUp AutoPV</value>
				<value>Post-Capture AutoPV</value>
				<value>Pulsed TopUp AutoPV</value>
			</util:list>
		</property>
	</bean>
	<bean id="feedbackTime" class="gda.device.scannable.DummyScannable">
		<constructor-arg index="0" value="Time"/>
		<constructor-arg index="1" value="5.0"/>
		<property name="outputFormat">
			<list>
				<value>%3.1f</value>
			</list>
		</property>	
	</bean>
</beans>
