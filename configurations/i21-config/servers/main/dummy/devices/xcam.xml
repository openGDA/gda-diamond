<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util.xsd"> 
	
<!-- 	<bean id="SWMRSimhostname" class="java.net.InetAddress" factory-method="getLocalHost"/> -->

<!-- XCAM driver specific information for metadata -->
	<bean id="xcamADCOffset" class="gda.device.monitor.DummyEpicsMonitorDouble">
		<property name="value">
			<value type="double">0</value>
		</property>
		<property name="increment" value="1" />
	</bean>
	<bean id="xcamADCGain" class="gda.device.monitor.DummyEpicsMonitorDouble">
		<property name="value">
			<value type="double">0</value>
		</property>
		<property name="increment" value="1" />
	</bean>
	<bean id="xcamTemperatureSet" class="gda.device.monitor.DummyEpicsMonitorDouble">
		<property name="unit" value="°C"/>
		<property name="value">
			<value type="double">-60.0</value>
		</property>
		<property name="lowerLimit" value="0" />
		<property name="upperLimit" value="-90" />
		<property name="increment" value="1" />
	</bean>
	<bean id="xcamTemperatureActual" class="gda.device.monitor.DummyEpicsMonitorDouble">
		<property name="unit" value="°C"/>
		<property name="value">
			<value type="double">-60.0</value>
		</property>
		<property name="lowerLimit" value="0" />
		<property name="upperLimit" value="-90" />
		<property name="increment" value="1" />
	</bean>

	<bean id="xcamBinningSizeX" class="gda.device.monitor.DummyEpicsMonitorDouble">
		<property name="value">
			<value type="double">1</value>
		</property>
		<property name="lowerLimit" value="1" />
		<property name="upperLimit" value="8" />
		<property name="increment" value="1" />
	</bean>
	<bean id="xcamBinningSizeY" class="gda.device.monitor.DummyEpicsMonitorDouble">
		<property name="value">
			<value type="double">1</value>
		</property>
		<property name="lowerLimit" value="1" />
		<property name="upperLimit" value="8" />
		<property name="increment" value="1" />
	</bean>

<!-- Andor Area Detector EPICS Plugins -->
	<bean id="xcam_adbase" class="gda.spring.V17ADBaseFactoryBean">
		<property name="prefix" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:" />
	</bean>
	<bean id="xcam_stats" class="gda.device.detector.areadetector.v17.impl.NDStatsImpl">
		<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:" />
		<property name="pluginBase">
			<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
				<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:" />
				<property name="initialArrayPort" value="ADSIM.CAM" />
			</bean>
		</property>
	</bean>
	<bean id="xcam_ndarray" class="gda.device.detector.areadetector.v17.impl.NDArrayImpl">
		<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ARR:" />
		<property name="pluginBase">
			<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
				<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ARR:" />
				<property name="initialArrayPort" value="ADSIM.CAM" />
			</bean>
		</property>
	</bean>
	<bean id="xcam_ndfile" class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
		<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
		<property name="pluginBase">
			<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
				<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
				<property name="initialArrayPort" value="ADSIM.CAM" />
			</bean>
		</property>
		<!-- These arguments are here to please Spring -->
		<property name="initialAutoSave" value="Not hooked up to anything!" />
		<property name="initialAutoIncrement" value="Not hooked up to anything!" />
		<property name="initialWriteMode" value="0" />
		<property name="initialNumCapture" value="1" />
		<property name="initialFileName" value="xcam" />
		<property name="initialFileTemplate" value="%s%s.hdf5" />
	</bean>
	<bean id="xcam_hdf5" class="gda.device.detector.areadetector.v17.impl.NDFileHDF5Impl">
		<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
		<property name="file" ref="xcam_ndfile" />
	</bean>
	<!-- simulated extra HDF5 files using the same HDF5 plugin -->
	<bean id="xcam_xip1_hdf5" class="gda.device.detector.areadetector.v17.impl.NDFileHDF5Impl">
		<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
		<property name="file">
			<bean class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
				<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
				<property name="pluginBase">
					<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
						<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
						<property name="initialArrayPort" value="ADSIM.CAM" />
					</bean>
				</property>
				<!-- These arguments are here to please Spring -->
				<property name="initialAutoSave" value="Not hooked up to anything!" />
				<property name="initialAutoIncrement" value="Not hooked up to anything!" />
				<property name="initialWriteMode" value="0" />
				<property name="initialNumCapture" value="1" />
				<property name="initialFileName" value="xcam-xip1" />
				<property name="initialFileTemplate" value="%s%s.hdf5" />
			</bean>
		</property>
	</bean>
	<bean id="xcam_xip2_hdf5" class="gda.device.detector.areadetector.v17.impl.NDFileHDF5Impl">
		<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
		<property name="file">
			<bean class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
				<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
				<property name="pluginBase">
					<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
						<property name="basePVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:" />
						<property name="initialArrayPort" value="ADSIM.CAM" />
					</bean>
				</property>
				<!-- These arguments are here to please Spring -->
				<property name="initialAutoSave" value="Not hooked up to anything!" />
				<property name="initialAutoIncrement" value="Not hooked up to anything!" />
				<property name="initialWriteMode" value="0" />
				<property name="initialNumCapture" value="1" />
				<property name="initialFileName" value="xcam-xip2" />
				<property name="initialFileTemplate" value="%s%s.hdf5" />
			</bean>
		</property>
	</bean>

	<!-- The Object which get the ROIs from the client over RMI -->
	<bean id="xcam_roi" class="gda.device.detector.nxdetector.roi.LiveStreamROIProvider" />
	<bean class="uk.ac.gda.remoting.server.GdaRmiServiceExporter">
		<property name="serviceName" value="gda/xcamRoi" />
		<property name="service" ref="xcam_roi" />
		<property name="serviceInterface" value="gda.device.detector.nxdetector.roi.RemoteRectangularROIsProvider" />
	</bean>
	<bean id="xcam_RoiStats1" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="xcam_RoiStats1" />
		<property name="baseRoiPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI1:" />
		<property name="baseStatsPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT1:" />
		<property name="roiInputNdArrayPort" value="ADSIM.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
	        <bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
	            <property name="liveStreamRoiProvider" ref="xcam_roi" />
	            <property name="index" value="0" /> <!-- Zero based indexing i.e. Region 1 = index 0 -->
	        </bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>
	<bean id="xcam_RoiStats2" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="xcam_RoiStats2" />
		<property name="baseRoiPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI2:" />
		<property name="baseStatsPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT2:" />
		<property name="roiInputNdArrayPort" value="ADSIM.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
	        <bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
	            <property name="liveStreamRoiProvider" ref="xcam_roi" />
	            <property name="index" value="1" /> 
	        </bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>
	<bean id="xcam_RoiStats3" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="xcam_RoiStats3" />
		<property name="baseRoiPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI3:" />
		<property name="baseStatsPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT3:" />
		<property name="roiInputNdArrayPort" value="ADSIM.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
	        <bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
	            <property name="liveStreamRoiProvider" ref="xcam_roi" />
	            <property name="index" value="2" />
	        </bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>
	<bean id="xcam_RoiStats4" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="xcam_RoiStats4" />
		<property name="baseRoiPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI4:" />
		<property name="baseStatsPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT4:" />
		<property name="roiInputNdArrayPort" value="ADSIM.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
	        <bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
	            <property name="liveStreamRoiProvider" ref="xcam_roi" />
	            <property name="index" value="3" /> 
	        </bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>
	<bean id="xcam_RoiStats5" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="xcam_RoiStats5" />
		<property name="baseRoiPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI5:" />
		<property name="baseStatsPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT5:" />
		<property name="roiInputNdArrayPort" value="ADSIM.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
	        <bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
	            <property name="liveStreamRoiProvider" ref="xcam_roi" />
	            <property name="index" value="4" /> 
	        </bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>
	<bean id="xcam_RoiStats6" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="xcam_RoiStats6" />
		<property name="baseRoiPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI6:" />
		<property name="baseStatsPVName" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT6:" />
		<property name="roiInputNdArrayPort" value="ADSIM.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
	        <bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
	            <property name="liveStreamRoiProvider" ref="xcam_roi" />
	            <property name="index" value="5" /> 
	        </bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>
	
	<!-- simulated detector setting collections -->
	<bean id="xcam_settings" class="gda.device.detector.EpicsProcessVariableCollection">
		<property name="name" value="xcam_settings"/>
		<property name="name2PVSimpleMap">
			<util:map>
    			<entry key="manufacturer" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:Manufacturer_RBV" />
    			<entry key="model" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:Model_RBV" />
    			<entry key="serial_number" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:PortName_RBV" />
    			<entry key="adc_gain" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainX_RBV" />
    			<entry key="adc_offset" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainY_RBV" />
    			<entry key="temperature_set" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:Temperature" />
    			<entry key="temperature_actual" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:Temperature_RBV" />
    			<entry key="binning_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:BinX_RBV" />
    			<entry key="binning_y" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:BinY_RBV" />
			</util:map>		
		</property>
		<property name="fieldsToAppend">
			<util:map>
    			<entry key="description">
    				<list>
    					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">CONSTANT</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="XCAM - an in-vaccum X-ray camera with 2 CCD sensors"/>
    					</bean>
    					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">PV</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:Manufacturer_RBV"/>
    					</bean>
    					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">PV</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:Model_RBV"/>
    					</bean>
    				</list>
    			</entry>
    			<entry key="serial_number">
	    			<list>
	   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
	    						<constructor-arg index="0">
	    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">PV</value>
	    						</constructor-arg>
	    						<constructor-arg index="1" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:PortName_RBV"/>
	    				</bean>
	    			</list>
     			</entry>
			</util:map>		
		</property>
	</bean>
	
	<bean id="xip1_output" class="gda.device.detector.EpicsProcessVariableCollection">
		<property name="name" value="xip1_output"/>
		<property name="name2PairMap">
			<util:map>
    			<entry key="background_value">
  					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/BACKGROUND_VALUE"/>
   					</bean>
    			</entry>
    			<entry key="count_possible_event">
   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_POSSIBLE_EVENT"/>
    				</bean>
     			</entry>
    			<entry key="count_below_threshold">
  					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_BELOW_THRESHOLD"/>
   					</bean>
    			</entry>
    			<entry key="count_above_threshold">
   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_ABOVE_THRESHOLD"/>
    				</bean>
     			</entry>
    			<entry key="count_neighbouring">
  					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_NEIGHBOURING"/>
   					</bean>
    			</entry>
    			<entry key="count_actual_3x3">
   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_ACTUAL_3X3"/>
    				</bean>
     			</entry>
			</util:map>		
		</property>
	</bean>
	<bean id="xip1_settings" class="gda.device.detector.EpicsProcessVariableCollection">
		<property name="name" value="xip1_settings"/>
		<property name="name2PVNestedMap">
			<util:map>
				<entry key="centroid_algorithm">
					<util:map>
		    			<entry key="algorithm" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-0:CAM:DetectorState_RBV" />
		    			<entry key="output_mode" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:ColorMode" />
		    			<entry key="background_update_mode" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:ImageMode" />
		    			<entry key="background_value" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:MinX" />
		    			<entry key="sum_3x3_minimum_threshold" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:PROC:OOffset_RBV" />
		    			<entry key="sum_3x3_maximum_threshold" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:PROC:OScale_RBV" />
		    			<entry key="histogram_bin_width" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeX_RBV" />
		    			<entry key="histogram_bin_count" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeY_RBV" />
		    			<entry key="source_region" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:DataType" />
		    			<entry key="region_start_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:MinX_RBV" />
		    			<entry key="region_start_y" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:MinY_RBV" />
		    			<entry key="region_size_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeX_RBV" />
		    			<entry key="region_size_y" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeY_RBV" />
		    			<entry key="eta_correction_file" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:FullFileName_RBV" />
		    			<entry key="xip1_event_count" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:ArraySizeY_RBV" />
					</util:map>
				</entry>
				<entry key="isolinear_correction">
					<util:map>
		    			<entry key="beamline_energy" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainRed_RBV" />
		    			<entry key="isolinear_correction" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainGreen_RBV" />
		    			<entry key="coefficient_x^2" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainBlue_RBV" />
		    			<entry key="coefficient_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:SigmaXY_RBV" />
		    			<entry key="constant" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:SigmaX_RBV" />
		    			<entry key="calibration_threshold" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:CentroidThreshold_RBV" />
					</util:map>	
				</entry>
			</util:map>		
		</property>
	</bean>

	<bean id="xip2_output" class="gda.device.detector.EpicsProcessVariableCollection">
		<property name="name" value="xip2_output"/>
		<property name="name2PairMap">
			<util:map>
    			<entry key="background_value">
  					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/BACKGROUND_VALUE"/>
   					</bean>
    			</entry>
    			<entry key="count_possible_event">
   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_POSSIBLE_EVENT"/>
    				</bean>
     			</entry>
    			<entry key="count_below_threshold">
  					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_BELOW_THRESHOLD"/>
   					</bean>
    			</entry>
    			<entry key="count_above_threshold">
   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_ABOVE_THRESHOLD"/>
    				</bean>
     			</entry>
    			<entry key="count_neighbouring">
  					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_NEIGHBOURING"/>
   					</bean>
    			</entry>
    			<entry key="count_actual_3x3">
   					<bean class="org.apache.commons.lang3.tuple.ImmutablePair">
    						<constructor-arg index="0">
    							<value type="gda.device.detector.EpicsProcessVariableCollection.InputType">LINK</value>
    						</constructor-arg>
    						<constructor-arg index="1" value="/entry/instrument/NDAttributes/COUNT_ACTUAL_3X3"/>
    				</bean>
     			</entry>
			</util:map>		
		</property>
	</bean>
	<bean id="xip2_settings" class="gda.device.detector.EpicsProcessVariableCollection">
		<property name="name" value="xip2_settings"/>
		<property name="name2PVNestedMap">
			<util:map>
				<entry key="centroid_algorithm">
					<util:map>
		    			<entry key="algorithm" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:DetectorState_RBV" />
		    			<entry key="output_mode" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:ColorMode" />
		    			<entry key="background_update_mode" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:ImageMode" />
<!-- 		    			<entry key="background_value" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:MinX" /> -->
		    			<entry key="sum_3x3_minimum_threshold" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:PROC:OOffset_RBV" />
		    			<entry key="sum_3x3_maximum_threshold" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:PROC:OScale_RBV" />
		    			<entry key="histogram_bin_width" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeX_RBV" />
		    			<entry key="histogram_bin_count" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeY_RBV" />
		    			<entry key="source_region" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:DataType" />
		    			<entry key="region_start_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:MinX_RBV" />
		    			<entry key="region_start_y" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:MinY_RBV" />
		    			<entry key="region_size_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeX_RBV" />
		    			<entry key="region_size_y" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:ROI:SizeY_RBV" />
		    			<entry key="eta_correction_file" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:HDF5:FullFileName_RBV" />
		    			<entry key="xip2_event_count" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:ArraySizeY_RBV" />
					</util:map>
				</entry>
				<entry key="isolinear_correction">
					<util:map>
		    			<entry key="beamline_energy" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainRed_RBV" />
		    			<entry key="isolinear_correction" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainGreen_RBV" />
		    			<entry key="coefficient_x^2" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:CAM:GainBlue_RBV" />
		    			<entry key="coefficient_x" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:SigmaXY_RBV" />
		    			<entry key="constant" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:SigmaX_RBV" />
		    			<entry key="calibration_threshold" value="#{ SWMRSimhostname.hostName.split('\.')[0] }-AD-SIM-01:STAT:CentroidThreshold_RBV" />
					</util:map>	
				</entry>
			</util:map>		
		</property>
	</bean>
	
	<!-- use EPICS area detector's HDF5 plugin to emulate write XIP data to file as ADSIM only has 1 HDF5 plugin-->
	<bean id="xcamXip1Hdf5Filewriter" class="gda.device.detector.addetector.filewriter.MultipleHDF5PluginsPerDetectorFileWriter">
		<property name="name" value="xip1"/>
		<property name="ndFileHDF5" ref="xcam_xip1_hdf5"/>
		<property name="fileNameTemplate" value="xcam"/>
		<property name="filePathTemplate" value="$datadir$" />
		<property name="fileTemplate" value="%s%s-%d.hdf" />
		<property name="fileNumberAtScanStart" value="-1" />
		<property name="setFileNameAndNumber" value="true" />
		<property name="rowChunks" value="0" />
		<property name="colChunks" value="0" />
		<property name="framesChunks" value="1" />
		<property name="framesFlush" value="1" />
		<property name="storeAttr" value="true" />
		<property name="lazyOpen" value="true" />
		<property name="blocking" value="false" />
		<property name="attrByDimSupported" value="true" />
		<property name="attrByDim" value="true" />
		<property name="pathErrorSuppressed" value="true" />
		<property name="pvsToCollectMaps">
			<list>
<!-- 				<ref bean="xip1_settings"/> --><!-- NexusDataWriter requires this -->
				<ref bean="xip1_output"/>
			</list>
		</property>
	</bean>
	<bean id="xcamXip2Hdf5Filewriter" class="gda.device.detector.addetector.filewriter.MultipleHDF5PluginsPerDetectorFileWriter">
		<property name="name" value="xip2"/>
		<property name="ndFileHDF5" ref="xcam_xip2_hdf5"/>
		<property name="fileNameTemplate" value="xcam"/>
		<property name="filePathTemplate" value="$datadir$" />
		<property name="fileTemplate" value="%s%s-%d.hdf" />
		<property name="fileNumberAtScanStart" value="-1" />
		<property name="setFileNameAndNumber" value="true" />
		<property name="rowChunks" value="0" />
		<property name="colChunks" value="0" />
		<property name="framesChunks" value="1" />
		<property name="framesFlush" value="1" />
		<property name="storeAttr" value="true" />
		<property name="lazyOpen" value="true" />
		<property name="blocking" value="false" />
		<property name="attrByDimSupported" value="true" />
		<property name="attrByDim" value="true" />
		<property name="pathErrorSuppressed" value="true" />
		<property name="pvsToCollectMaps">
			<list>
<!-- 				<ref bean="xip2_settings"/> --><!-- NexusDataWriter requires this -->
				<ref bean="xip2_output"/>
			</list>
		</property>
	</bean>	
</beans>
