#
# Important directory locations. May be overriden by -D flags (or options in the python startup script)
#
# offline testing
#gda.data                              = /scratch/users/data
#gda.var                               = ${gda.config}/var
#gda.logs.dir                          = /scratch/users/logs
#gda.jython.userScriptDir              = /scratch/users/scripts
#gda.rcp.workspace                     = ${gda.data}/$year$/$visit$/.workspace/

# beamline (use default gda.rcp.workspace)
#gda.data                              = /dls/b18/data
#gda.var                               = /dls_sw/b18/software/gda_versions/var
#gda.logs.dir                          = /dls_sw/b18/logs
#gda.jython.userScriptDir              = /dls_sw/b18/scripts

gda.factory.factoryName 	= b18
gda.factory.allowExceptionInConfigure=true
gda.oe.oefactory        	= remote
gda.objectserver.xml    	= server.xml
#gda.rmi.prefix=rmi://b18-control/gda/
gda.rmi.prefix=rmi://localhost/gda/
gda.gui.beans.xml           = ${gda.config}/xml/client.xml

# for rbac
#
gda.accesscontrol.useAccessControl = true
# if set to true then the BatonPanel MUST be used in the GUI to exchange and control the baton
gda.accesscontrol.useBatonControl = true
# this must not be set to less than 1 or baton passing will not work
gda.accesscontrol.defaultAuthorisationLevel = 1
gda.accesscontrol.defaultStaffAuthorisationLevel = 3 
gda.accesscontrol.firstClientTakesBaton = true
## Login Authentication
#gda.gui.AcquisitionGUI.authenticationMethod = gda.jython.authenticator.LdapAuthenticator
gda.gui.AcquisitionGUI.authorisationMethod = gda.jython.authoriser.LdapAuthoriser

#
# Offline configuration (version in svn)
#
# configuration for messages originating from the client
gda.client.logging.xml = ${gda.config}/xml/logging_localhost/B18_ClientLoggingConfiguration.xml
# configuration for messages originating from the object server
gda.server.logging.xml = ${gda.config}/xml/logging_localhost/B18_ServerLoggingConfiguration.xml
# configuration for messages received by the client via gda.client.logging.port - normally only sends messages to the client's log panel
gda.clientLogService.logging.xml= ${gda.config}/xml/logging_localhost/clientLogService.xml
# configuration for messages received by the log server via gda.server.logging.port
gda.logserver.xml = ${gda.config}/xml/logging_localhost/B18_LogServer.xml
#configuration for messages received by the logPanel application via gda.logPanel.logging.port
gda.logPanel.logging.xml= ${gda.config}/xml/logging_localhost/logPanel.xml

#
# Beamline configuration
#
# configuration for messages originating from the client
#gda.client.logging.xml = ${gda.config}/xml/logging_beamline/B18_ClientLoggingConfiguration.xml
# configuration for messages originating from the object server
#gda.server.logging.xml = ${gda.config}/xml/logging_beamline/B18_ServerLoggingConfiguration.xml
# configuration for messages received by the client via gda.client.logging.port - normally only sends messages to the client's log panel
#gda.clientLogService.logging.xml= ${gda.config}/xml/logging_beamline/clientLogService.xml
# configuration for messages received by the log server via gda.server.logging.port
#gda.logserver.xml = ${gda.config}/xml/logging_beamline/B18_LogServer.xml
#configuration for messages received by the logPanel application via gda.logPanel.logging.port
#gda.logPanel.logging.xml= ${gda.config}/xml/logging_beamline/logPanel.xml

gda.device.xspress.spoolDir = ${gda.data}/$year$/$visit$/processing/
gda.device.vortex.spoolDir = ${gda.data}/$year$/$visit$/processing/
gda.device.mythen.datadir = ${gda.data}/$year$/$visit$/ascii/

#
# Documentation
#
gda.help.manual=http://doc.diamond.ac.uk/Documentation/GDA-manual.html
gda.bugReport.site=http://trac.diamond.ac.uk/beam/login
gda.beamline.manual=http://intranet.diamond.ac.uk/B18Manual.html

#
## Next are settings for scripting ##
#
gda.data.scan.datawriter.datadir    = ${gda.data}/$year$/$visit$/$subdirectory$
gda.jython.terminalOutputDir  		= ${gda.logs.dir}
gda.jython.gdaScriptDir             = ${gda.config}/scripts
gda.jython.translator.class         = GeneralTranslator
gda.data.scan.datawriter.dataFormat = XasAsciiNexusDataWriter
gda.data.filePrefix                 = b18xas_
gda.jython.socket=1234

# Command to run at the end of a scan.
#gda.scan.executeAtEnd = ls -al

# Configuration for NeXus writing
gda.nexus.backend        = HDF5
gda.nexus.beamlinePrefix = true
gda.nexus.createSRS      = false

#  Cap the memory used by the client's terminal textbox
gda.jython.jythonTerminal.textFieldCharactersCap = 100000
# And for the Message and Debug Panels
gda.util.LoggingPanels.textFieldCharactersCap = 100000

# Directory to use to store the run number.
#gda.data.numtracker = /dls_sw/b18/software/gda_versions/var
gda.data.numtracker = ${gda.config}/var

#
#
## Next three settings are for the jacorb CORBA event service ##
#
gda.ORBClass 	      	= org.jacorb.orb.ORB
gda.ORBSingletonClass    = org.jacorb.orb.ORBSingleton
gda.eventChannelName  	= local.eventChannel
#



## Synoptic screen and script locations
gda.dal.screens = ${gda.config}/synoptic/screens/
gda.dal.scripts = ${gda.config}/synoptic/scripts/


## Database and persistence settings

gda.util.persistence.database.dbpath	= ${gda.config}/var/gdaDatabase
gda.util.persistence.database.username	= gda
gda.util.persistence.database.password	= gda

# Following two to connect to external database
#gda.util.persistence.database.driver 	= org.apache.derby.jdbc.ClientDriver 
#gda.util.persistence.database.protocol = jdbc:derby://localhost:1527/

# These two to use embedded driver
gda.util.persistence.database.driver	= org.apache.derby.jdbc.EmbeddedDriver
gda.util.persistence.database.protocol	= jdbc:derby:



#
## Next are miscellaneaous settings for various file locations and options ##
#
gda.params	       	      = ${gda.config}
gda.motordir              = ${gda.config}/var/motorPositions
gda.limitsdir		      = ${gda.config}/var/limitsAndOffset
gda.softlimits.save       = true
#

#
#
## EXAFS specific settings ##
#
gda.exafs.buttonFontSize          = 8
gda.exafs.minEnergy	              = 1
gda.exafs.maxEnergy	              = 15
gda.exafs.twoD		              = 6.271
gda.function.columnDataFile.lookupDir = ${gda.config}/lookupTables
gda.device.xspress.configFileName = ${gda.config}/xspress.cfg
gda.device.xspress.cnfDir 	      = ${gda.config}/var/
gda.exafs.darkcurrent.detector    = counterTimer01
gda.exafs.darkcurrent.shutter     = expt_shutter

#for bean validation
gda.exafs.element.min = P
gda.exafs.element.max = U



# setting the primary screen for GDA GUI display - default is 0
#gda.screen.primary=0
# GDA GUI display configuration
# if fractionalSize defined, width/height will not be used
#gda.gui.fractionalSize      = 0.9
gda.gui.width=1440
gda.gui.height=900

#
# EPICS
#
gda.beamline.name = BL18B
gda.epics.request.timeout=20.0
gda.epics.interface.xml = ${gda.config}/xml/BL18B-gda-interface.xml
gda.epics.interface.schema = ${gda.config}/xsd/genericBeamlineSchema.xsd
gda.epics.interface.xml.unchecked = ${gda.config}/xml/xmap-dxp.xml
gda.epics.EpicsDeviceFactory = true

##directory for lookup files
#gda.lookup.directory = C:/users/lookup


## Controls saving of metadata to Nexus files and data files to SRB
## server xml requires <FindableHashtable> entry for state communication
gda.data.nexusMetadata = false
gda.data.srbStore = false

#
# Metadata
#
gda.instrument      = b18
gda.facility        = DLS
gda.facility.probe  = x-ray
gda.facility.type   = Synchrotron X-ray Source

oracle.host=${gda.factory.factoryName}-control.diamond.ac.uk
oracle.port=1521

gda.data.metadata.icat.type            = gda.data.metadata.icat.DLSIcat
gda.data.metadata.icat.url             = jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(HOST=${oracle.host})(PROTOCOL=tcp)(PORT=${oracle.port}))(CONNECT_DATA=(SID=xe)))
gda.data.metadata.icat.shift_tolerance = 1440
gda.data.metadata.dlsicat.user         = ikit${gda.factory.factoryName}
gda.data.metadata.dlsicat.password     = d24sb4k

# Metadata values that would normally be read from ICAT
# (just define them as properties so that we don't need an ICAT!)
#gda.icat.visit = sc666-0
#gda.icat.proposal = 666
#gda.icat.title = GDA base simulation

# Default values
# this should be the current commissionning directory. It needs changing at the
# start of every shutdown
gda.defVisit = cm5713-3

gda.jython.namespaceMappingFile = ${gda.jython.gdaScriptDir}/jythonNamespaceMapping
gda.jython.beamlineParametersFile = ${gda.jython.gdaScriptDir}/beamlineParameters
gda.jython.finderNameMappingFile = ${gda.jython.gdaScriptDir}/finderNameMapping

# for client title bar
gda.beamline.name=B18

#elog
gda.elog.targeturl = http://rdb.pri.diamond.ac.uk/devl/php/elog/cs_logentryext_bl.php

# Port on which the HTTP server should listen. This is only used when creating
# a Jetty HTTP server in a Spring beans configuration file
# (e.g. stnBase_server_beans.xml).
gda.server.port=8080


# Mono rate in ms/eV
gda.exafs.mono.energy.rate = 200
# Readout constant in ms
gda.exafs.read.out.time    = 500

# for experiment perspective. So it uses the correct project in the workspace
gda.client.experimentdefinition.project.name = exafs
