from cirrus import ThreadClass
cirrus
reset_namespace
from cirrus import ThreadClass
reset_namespace
from cirrus import ThreadClass
t = ThreadClass("cirrus_scan.dat")
t.setName("cirrus")
t.start()
reset_namespace
t
t.stop()
dir(t)
t._Thread__stop()
dir(t)
t
t.stop()
t
t.stopped()
t.stop()
t
del t
t
del t
t
del t
t
t.stopped()
dataDir = PathConstructor.createFromProperty("gda.data.scan.datawriter.datadir");
from gda.data import PathConstructor
dataDir = PathConstructor.createFromProperty("gda.data.scan.datawriter.datadir");
dataDir
reset_namespace
qexafs_energy
qexafs_energy(5000)
qexafs_energy
qexafs_energy.isBusy()
qexafs_energy(5000)
t
t.stopped()
t.stop()
t.stopped()
qexafs_energy()
t.stopped()
t.stop()
qexafs_energy(5999)
qexafs_energy(7001)
t.stop()
qexafs_energy(6500)
t.stopped()
qexafs_energy(5999)
qexafs_energy(7001)
qexafs_energy(5999)
qexafs_energy(7001)
qexafs_energy(5999)
t.stop()
qexafs_energy(7001)
qexafs_energy(5999)
qexafs_energy(9999)
qexafs_energy(15001)
qexafs_energy(9999)
qexafs_energy(15001)
qexafs_energy(14999)
t.stop()
qexafs_energy(15001)
qexafs_energy(9999)
qexafs_energy(15001)
qexafs_energy(9999)
qexafs_energy(15001)
reset_namespace
import cirrus
reset_namespace
energyScannable = finder.find("qexafs_energy")
qexafs_energy()
qexafs_energy(9999)
qexafs_energy()
qexafs_energy(15000)
qexafs_energy(15001)
qexafs_energy(9999)
qexafs_energy(15001)
qexafs_energy(9999)
reset_namespace
t
reset_namespace
qexafs_energy()
reset_namespace
qexafs_energy(11001)
qexafs_energy()
qexafs_energy(11001)
qexafs_energy()
qexafs_energy(11001)
qexafs_energy(11008)
qexafs_energy()
qexafs_energy(11999)
qexafs_energy(0)
qexafs_energy(2000)
qexafs_energy()
qexafs_energy(3000)
qexafs_energy()
qexafs_energy(3000)
