<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- AD hardware -->

	<bean id="pilatus_driver"
		class="gda.device.detector.areadetector.v17.impl.ADDriverPilatusImpl">
		<property name="basePVName" value="BL16B-EA-DET-04:CAM:" />
	</bean>

	<bean id="pilatus_adbase" class="gda.device.detector.areadetector.v17.impl.ADBaseImpl">
		<property name="basePVName" value="BL16B-EA-DET-04:CAM:" />
	</bean>


	<bean id="pilatus_camserver_ndfile" class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
		<property name="basePVName" value="BL16B-EA-DET-04:CAM:" />
		<property name="resetToInitialValues" value="false" />
		<property name="filePathConverter">
			<bean class="uk.ac.gda.util.SimpleFilePathConverter">
				<property name="userSubString" value="/dls/b16/data" />
				<property name="internalSubString" value="/ramdisk" />
			</bean>
		</property>
	</bean>
	
	<bean id="pilatus_roi" class="gda.device.detector.areadetector.v17.impl.NDROIImpl">
    	<property name="basePVName" value="BL16B-EA-DET-04:ROI:" />
    	<property name="pluginBase">
        	<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
            	<property name="basePVName" value="BL16B-EA-DET-04:ROI:" />
        	</bean>
    	</property>
	</bean>
	
	<bean id="pilatus_camera_control" class="uk.ac.gda.epics.camera.CameraControlForLiveStream">
	    <constructor-arg ref="pilatus_adbase" />
	    <constructor-arg ref="pilatus_roi" />
	</bean>


	<!-- NXDetector collection strategies -->

	<bean id="pilatus_nxcollectionstrategy" class="gda.device.detector.addetector.triggering.SingleExposurePilatus">
		<constructor-arg ref="pilatus_adbase" />
		<constructor-arg value=".003" />
	</bean>

	<!-- NXDetector file writers -->
	
	<bean id="pilatus_nxfilewriter_for_scans"
		class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pilatus300k" />
		<property name="ndFile" ref="pilatus_camserver_ndfile" />
		<property name="returnPathRelativeToDatadir" value="false" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="waitForFileArrival" value="false" />
	</bean>

	<bean id="pilatus_nxfilewriter_for_snaps"
		class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriterWithNumTracker">
		<constructor-arg value="pilatus300k" />
		<property name="ndFile" ref="pilatus_camserver_ndfile" />
		<property name="numTrackerExtension" value="pilatus300k_snaps_numtracker" />
		<property name="returnPathRelativeToDatadir" value="false" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
	</bean>

	<!-- NXDetectors -->

	<bean id="_pilatus" class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus" />
		<property name="collectionStrategy" ref="pilatus_nxcollectionstrategy"/>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus_nxfilewriter_for_scans" />
				<!-- pilatus3_nxfilewriter_for_scans doesn't enable array callbacks as it writes tif
					 files via the CAM plugin, so no AD plugin other than CAM will see data.

					 As such pilatus_force_callbacks should be enabled so other plugins such as the
					 array view see data.
				 -->
				<ref bean="pilatus_force_callbacks" />
			</list>
		</property>
	</bean>

	<bean id="_pilatus_for_snaps" class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus_for_snaps" />
		<property name="collectionStrategy" ref="pilatus_nxcollectionstrategy"/>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus_nxfilewriter_for_snaps" />
			</list>
		</property>
	</bean>

	<!-- Additional pilatus beans -->

	<bean id="pilatus_force_callbacks" class="gda.device.detector.nxdetector.plugin.NXForceCallbacks" />

	<!--  RASTER SCANNING -->

	<bean id="rasterpil_nxcollectionstrategy_for_hardware_triggering_from_pie"
		class="gda.device.detector.addetector.triggering.HardwareTriggeredPilatus">
		<constructor-arg ref="pilatus_adbase" />
		<constructor-arg ref="pilatus_driver" />
		<constructor-arg value=".004" />  <!-- At 3ms we had DMA error in camserver -->
		<constructor-arg value="MULTIPLE_EXTERNAL_TRIGGER" />
	</bean>

	<bean id="rasterpil_camserver_nxfilewriter_for_hardware_triggering"
		class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="rasterpil" />
		<property name="ndFile" ref="pilatus_camserver_ndfile" />
		<property name="waitForFileArrival" value="false" />
		<property name="fileNumberAtScanStart" value="0" />
		<property name="fileTemplateForReadout" value="%s00000_%s%05d.tif" />
		<property name="writeErrorStatusSupported" value="false" />
		<property name="pathErrorSuppressed" value="true" />
		<!-- <property name="returnPathRelativeToDatadir" value="true"/> Erroneousely 
			returns e.g.: tmp/434615-rasterpil1-files rather than tmp/434616-rasterpil1-files/00000_00097.tif -->
	</bean>


	<bean id="rasterpil" class="gda.device.detector.HardwareTriggeredNXDetector">
		<property name="name" value="rasterpil" />
		<property name="hardwareTriggerProvider" value="#{pie.continuousMoveController}" />

		<property name="collectionStrategy"
			ref="rasterpil_nxcollectionstrategy_for_hardware_triggering_from_pie" />
		<property name="additionalPluginList">
			<list>
				<ref bean="rasterpil_camserver_nxfilewriter_for_hardware_triggering" />
				<bean
					class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
					<property name="pluginName" value="roistats1" />
					<property name="baseRoiPVName" value="BL16B-EA-DET-04:ROI1:" />
					<property name="baseStatsPVName" value="BL16B-EA-DET-04:STAT1:" />
					<property name="roiInputNdArrayPort" value="pilatus.cam" />
					<property name="enabledBasicStats" value="MaxValue,Total" />
					<property name="oneTimeSeriesCollectionPerLine" value="false" />

					<!-- <property name="roiProvider"> -->
					<!-- <bean -->
					<!-- class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer"> -->
					<!-- <constructor-arg ref="fastpil1_plot_server_roi_provider" /> -->
					<!-- <constructor-arg value="0" /> -->
					<!-- </bean> -->
					<!-- </property> -->
				</bean>

				<!-- <ref bean="fastpil1_freerun_controller" /> -->
			</list>
		</property>
	</bean>
	
	

</beans>
