<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="d1b_y_motor" class="gda.device.motor.EpicsMotor">
		<property name="pvName" value="BL07B-DI-PHDGN-01:Y" />
	</bean>

	<bean id="d1b_temp" class="gda.device.monitor.EpicsMonitor">
		<property name="pvName" value="BL07B-DI-PHDGN-01:SCRN:TEMP1"/>
		<property name="unit" value="Â°C"/>
		<property name="poll" value="true"/>
		<property name="sensitivity" value="2.0"/>
	</bean>

	<!-- d1b Cam1 -->
	<bean id="d1b_cam1_CamBase" class="gda.spring.V17ADBaseFactoryBean">
		<property name="prefix" value="BL07B-DI-PHDGN-01:DCAM1:CAM:" />
	</bean>

	<!-- The Object which gets the ROIs from the client over RMI -->
	<bean id="d1b_cam1_roi" class="gda.device.detector.nxdetector.roi.LiveStreamROIProvider" /> <!-- Make one per camera -->
	<!-- Export it over RMI so the client can use it -->
	<bean class="uk.ac.gda.remoting.server.GdaRmiServiceExporter">
	    <property name="serviceName" value="gda/d1b1Roi" />
	    <property name="service" ref="d1b_cam1_roi" />
	    <property name="serviceInterface" value="gda.device.detector.nxdetector.roi.RemoteRectangularROIsProvider" />
	</bean>

	<bean id="d1b_cam1_RoiStats1" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="roistats1" />
		<!-- Use ROI1 and STATS1 because the first ROI is used as the data source for the array view -->
		<property name="baseRoiPVName" value="BL07B-DI-PHDGN-01:DCAM1:ROI1:" />
		<property name="baseStatsPVName" value="BL07B-DI-PHDGN-01:DCAM1:STAT1:" />
		<property name="roiInputNdArrayPort" value="D1B.DCAM1.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
			<bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
				<property name="liveStreamRoiProvider" ref="d1b_cam1_roi" />
				<property name="index" value="0" />
			</bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>

	<bean id="d1b_cam1_RoiStats2" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="roistats2" />
		<!-- Use ROI1 and STATS1 because the first ROI is used as the data source for the array view -->
		<property name="baseRoiPVName" value="BL07B-DI-PHDGN-01:DCAM1:ROI2:" />
		<property name="baseStatsPVName" value="BL07B-DI-PHDGN-01:DCAM1:STAT2:" />
		<property name="roiInputNdArrayPort" value="D1B.DCAM1.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
			<bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
				<property name="liveStreamRoiProvider" ref="d1b_cam1_roi" />
				<property name="index" value="1" />
			</bean>
		</property>
		<property name="legacyTSpvs" value="false"/>
	</bean>

	<bean id="d1b_cam1_Hdf5Filewriter" parent="abstractHdf5FilewriternNochunking">
		<property name="fileNameTemplate" value="d1b_cam0"/>
		<property name="ndFileHDF5">
			<bean class="gda.spring.V17NDFileHDF5FactoryBean">
				<property name="ndFileImpl">
					<bean class="gda.spring.V17NDFileFactoryBean">
						<property name="prefix" value="BL07B-DI-PHDGN-01:DCAM1:HDF5:" />
						<property name="resetToInitialValues" value="false" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="d1b_cam1_CollectionStrategy" class="gda.device.detector.addetector.collectionstrategy.SingleImageModeDecorator">
		<property name="restoreNumImagesAndImageMode" value="true" />
		<property name="decoratee">
			<bean class="gda.device.detector.addetector.collectionstrategy.InternalTriggerModeDecorator">
				<property name="restoreTriggerMode" value="true" />
				<property name="decoratee">
					<bean class="gda.device.detector.addetector.collectionstrategy.ConfigureAcquireTimeDecorator">
						<property name="restoreAcquireTime" value="true" />
						<property name="decoratee">
							<bean class="gda.device.detector.addetector.collectionstrategy.SoftwareStartStop">
								<property name="restoreAcquireState" value="true" />
								<property name="adBase" ref="d1b_cam1_CamBase" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="d1b_cam1" class="gda.device.detector.NXDetector">
		<property name="name" value="d1b_cam1" />
		<property name="collectionStrategy" ref="d1b_cam1_CollectionStrategy" />
		<property name="additionalPluginList">
			<list>
				<ref bean="d1b_cam1_RoiStats1" />
				<ref bean="d1b_cam1_RoiStats2" />
				<ref bean="d1b_cam1_Hdf5Filewriter" />
			</list>
		</property>
	</bean>

	<!-- d1b Cam 2 -->
	<bean id="d1b_cam2_CamBase" class="gda.spring.V17ADBaseFactoryBean">
		<property name="prefix" value="BL07B-DI-PHDGN-01:DCAM0:CAM:" />
	</bean>

	<!-- The Object which gets the ROIs from the client over RMI -->
	<bean id="d1b_cam2_roi" class="gda.device.detector.nxdetector.roi.LiveStreamROIProvider" /> <!-- Make one per camera -->
	<!-- Export it over RMI so the client can use it -->
	<bean class="uk.ac.gda.remoting.server.GdaRmiServiceExporter">
	    <property name="serviceName" value="gda/d1b2Roi" />
	    <property name="service" ref="d1b_cam2_roi" />
	    <property name="serviceInterface" value="gda.device.detector.nxdetector.roi.RemoteRectangularROIsProvider" />
	</bean>

	<bean id="d1b_cam2_RoiStats1" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="roistats1" />
		<!-- Use ROI1 and STATS1 because the first ROI is used as the data source for the array view -->
		<property name="baseRoiPVName" value="BL07B-DI-PHDGN-01:DCAM0:ROI1:" />
		<property name="baseStatsPVName" value="BL07B-DI-PHDGN-01:DCAM0:STAT1:" />
		<property name="roiInputNdArrayPort" value="D1B.DCAM0.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
			<bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
				<property name="liveStreamRoiProvider" ref="d1b_cam2_roi" />
				<property name="index" value="0" />
			</bean>
		</property>
	</bean>

	<bean id="d1b_cam2_RoiStats2" class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
		<property name="pluginName" value="roistats2" />
		<!-- Use ROI1 and STATS1 because the first ROI is used as the data source for the array view -->
		<property name="baseRoiPVName" value="BL07B-DI-PHDGN-01:DCAM0:ROI2:" />
		<property name="baseStatsPVName" value="BL07B-DI-PHDGN-01:DCAM0:STAT2:" />
		<property name="roiInputNdArrayPort" value="D1B.DCAM0.CAM" />
		<property name="enabledBasicStats" value="Total" />
		<property name="oneTimeSeriesCollectionPerLine" value="false" />
		<property name="roiProvider">
			<bean class="gda.device.detector.nxdetector.roi.LiveStreamRoiIndexer">
				<property name="liveStreamRoiProvider" ref="d1b_cam2_roi" />
				<property name="index" value="1" />
			</bean>
		</property>
	</bean>

	<bean id="d1b_cam2_Hdf5Filewriter" parent="abstractHdf5FilewriternNochunking">
		<property name="fileNameTemplate" value="d1b_cam2"/>
		<property name="ndFileHDF5">
			<bean class="gda.spring.V17NDFileHDF5FactoryBean">
				<property name="ndFileImpl">
					<bean class="gda.spring.V17NDFileFactoryBean">
						<property name="prefix" value="BL07B-DI-PHDGN-01:DCAM0:HDF5:" />
						<property name="resetToInitialValues" value="false" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="d1b_cam2_CollectionStrategy" class="gda.device.detector.addetector.collectionstrategy.SingleImageModeDecorator">
		<property name="restoreNumImagesAndImageMode" value="true" />
		<property name="decoratee">
			<bean class="gda.device.detector.addetector.collectionstrategy.InternalTriggerModeDecorator">
				<property name="restoreTriggerMode" value="true" />
				<property name="decoratee">
					<bean class="gda.device.detector.addetector.collectionstrategy.ConfigureAcquireTimeDecorator">
						<property name="restoreAcquireTime" value="true" />
						<property name="decoratee">
							<bean class="gda.device.detector.addetector.collectionstrategy.SoftwareStartStop">
								<property name="restoreAcquireState" value="true" />
								<property name="adBase" ref="d1b_cam2_CamBase" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="d1b_cam2" class="gda.device.detector.NXDetector">
		<property name="name" value="d1b_cam2" />
		<property name="collectionStrategy" ref="d1b_cam2_CollectionStrategy" />
		<property name="additionalPluginList">
			<list>
				<ref bean="d1b_cam2_RoiStats1" />
				<ref bean="d1b_cam2_RoiStats2" />
				<ref bean="d1b_cam2_Hdf5Filewriter" />
			</list>
		</property>
	</bean>

</beans>
