<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<!-- A scannable holding the beam size so that it can be written to Nexus. -->
	<bean id="beam" class="uk.ac.diamond.daq.scanning.BeamScannable"
		init-method="register">
		<property name="name" value="beam" />
		<property name="beamSize" value="50" />
	</bean>
	
	
	<!-- Watchdogs -->
	<!-- Pauses the scan if either fe_shutter or portshutter are in any position other than open -->
	<bean id="fe_shutters_open" class="org.eclipse.scanning.sequencer.watchdog.ExpressionWatchdog" init-method="activate" >
		<property name="name" value="frontend_checker" />
		<property name="model">
			<bean class="org.eclipse.scanning.api.device.models.ExpressionWatchdogModel">
				<property name="expression" value="fe_shutter.equalsIgnoreCase(&quot;Open&quot;) &amp;&amp; portshutter.equalsIgnoreCase(&quot;Open&quot;)" />
				<property name="message" value="Front end shutter is closed" />
			</bean>
		</property>
	</bean>
	
	
		<!-- Data Server -->
	<bean id="dataServer" class="org.eclipse.dawnsci.remotedataset.server.DataServer" init-method="start">
		<property name="port" value="${gda.dataserver.port}" />
	</bean>

	<!-- Device Servlet -->
	<bean id="deviceServlet" class="org.eclipse.scanning.server.servlet.DeviceServlet" init-method="connect">
		<property name="broker" value="${gda.message.broker.uri}" />
	</bean>

	<!-- This starts a scanServlet which handles new style scan requests arriving over ActiveMQ -->
	<bean id="scanServlet" class="org.eclipse.scanning.server.servlet.DouglasServlet" init-method="connect">
		<constructor-arg>
		<util:map map-class="java.util.HashMap" key-type="java.lang.Class" value-type="java.lang.Class"> 
		  <entry key="org.eclipse.scanning.api.event.scan.ScanBean" value="org.eclipse.scanning.server.servlet.ScanProcess"/>
		  <entry key="org.eclipse.scanning.api.event.scan.WaitBean" value="org.eclipse.scanning.server.servlet.WaitProcess" />
		</util:map>
		</constructor-arg>
		<property name="broker" value="${gda.message.broker.uri}" />
	</bean>

	<bean id="acquireServlet" class="org.eclipse.scanning.server.servlet.AcquireServlet" init-method="connect">
		<property name="broker" value="${gda.message.broker.uri}" />
	</bean>
	
	<bean id="positionerServlet" class="org.eclipse.scanning.server.servlet.PositionerServlet" init-method="connect">
		<property name="broker" value="${gda.message.broker.uri}" />
	</bean>

</beans>