<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<description>
		To use the Simulated Area detector in dummy mode:
			1) Launch the Utilities > GDA AreaDetector Simulation
				on the local machine and start the IOC.
			2) If you want to use an Area detector on another machine, or
				you are also launching the GDA servers, export the
				WORKSTATION environment variable with the short name for
				the machine the Simulation IOC is running on.
	</description>

	<!-- AD hardware -->

	<bean id="pilatus1_adbase"
			class="gda.device.detector.areadetector.v17.impl.ADBaseImpl">
		<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:CAM:" />
	</bean>

	<bean id="pilatus1_driver"
			class="gda.device.detector.areadetector.v17.impl.ADDriverPilatusImpl">
		<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:CAM:" />
	</bean>

	<!-- In dummy mode we have to use the standard tiff filewriter rather than the pilatus cam tiff writer -->
	<bean id="pilatus1_ndfile"
			class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
		<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:TIFF:" />
		<property name="resetToInitialValues" value="false" />
		<property name="pluginBase">
			<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
				<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:TIFF:" />
			</bean>
		</property>
	</bean>

	<bean id="pilatus1_ndfile_hdf5"
			class="gda.device.detector.areadetector.v17.impl.NDFileHDF5Impl">
		<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:HDF5:" />
		<property name="file">
			<bean class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
				<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:HDF5:" />
				<property name="resetToInitialValues" value="false" />
				<property name="pluginBase">
					<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
						<property name="basePVName" value="#{ADSIM_HOST}-AD-SIM-01:HDF5:" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- NXDetector collection strategies -->

	<bean id="pilatus1_nxcollectionstrategy_for_scans_and_snaps"
			class="gda.device.detector.addetector.triggering.SingleExposurePilatus">
		<constructor-arg ref="pilatus1_adbase" />
		<constructor-arg value=".003" />
	</bean>

	<bean id="pilatus1_nxcollectionstrategy_for_hardware_triggering"
			class="gda.device.detector.addetector.triggering.HardwareTriggeredPilatus">
		<constructor-arg ref="pilatus1_adbase" />
		<constructor-arg ref="pilatus1_driver" />
		<constructor-arg value=".003" />
		<constructor-arg value="MULTIPLE_EXTERNAL_TRIGGER" />
	</bean>

	<!-- NXDetector file writers -->

	<bean id="pilatus1_nxfilewriter_for_scans"
			class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pilatus1_100k" />
		<property name="ndFile" ref="pilatus1_ndfile" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="alwaysPrepare" value="true" />
		<property name="keyNameForMetadataPathTemplate" value="pilatus1_100k_path_template" />
		<property name="waitForFileArrival" value="false" /> <!--should be True if not using ProcessingDetectorWrapper -->
		<property name="blocking" value="false" />
		<property name="returnPathRelativeToDatadir" value="true" />

		<!-- for soft trigger mode only -->
		<!--
		<property name="fileTemplateForReadout" value="%s%s00000_%05d.tif" />
		<property name="fileNumberAtScanStart" value="0" />
		-->
	</bean>

	<bean id="pilatus1_hdf5filewriter_for_scans"
			class="gda.device.detector.addetector.filewriter.MultipleImagesPerHDF5FileWriter">
		<property name="ndFileHDF5" ref="pilatus1_ndfile_hdf5" />
		<property name="fileNameTemplate" value="" />
		<property name="filePathTemplate" value="$datadir$/$scan$-pilatus1_100k-files" />
		<property name="fileTemplate" value="%s%s%d.hdf" />
		<property name="fileNumberAtScanStart" value="-1" />
		<property name="setFileNameAndNumber" value="true" />
		<property name="blocking" value="false" />
		<!-- 
		<property name="enabled" value="true" />
		 -->
		<property name="lazyOpen" value="true" />
		<property name="swmrModeEnabled" value="true" />
		<!-- 
		<property name="clearXmlLayoutFile" value="true" />
		<property name="ndArrayPortVal" ref="pilatus1_cam_plugin_name"/>
		 -->
	</bean>

	<bean id="pilatus1_nxfilewriter_for_snaps"
			class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriterWithNumTracker">
		<constructor-arg value="pilatus1_100k" />
		<property name="ndFile" ref="pilatus1_ndfile" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="alwaysPrepare" value="true" />
		<property name="numTrackerExtension" value="pilatus1_100ksnaps" />
	</bean>

	<!-- AD monitors -->

	<bean id="pilatus1_counter_monitor"
			class="gda.device.detector.nxdetector.plugin.areadetector.ADArrayCounterMonitor">
		<constructor-arg ref="pilatus1_adbase" />
	</bean>

	<!-- NXDetectors -->

	<bean id="pilatus1"
			class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus1" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy_for_scans_and_snaps"/>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus1_nxfilewriter_for_scans" />
				<!-- The camserver nxfilewriter does not enable array callbacks, as it writes tif
					 files via the CAM plugin, so no AD plugin other than CAM will see data

					 If no other plugins are in this list then pilatus1_force_callbacks should be
					 enabled so other plugins see data
				<ref bean="pilatus1_force_callbacks" />
				 -->
				<ref bean="pilatus1_hdf5filewriter_for_scans" />
			</list>
		</property>
	</bean>

	<bean id="pilatus1_force_callbacks" class="gda.device.detector.nxdetector.plugin.NXForceCallbacks" />

	<!-- Used in localStation for NxProcessingDetectorWrapper -->
	<bean id="pilatus1_for_snaps"
			class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus1_for_snaps" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy_for_scans_and_snaps"/>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus1_nxfilewriter_for_snaps" />
				<!-- The camserver nxfilewriter does not enable array callbacks, as it writes tif
					 files via the CAM plugin, so no AD plugin other than CAM will see data

					 If no other plugins are in this list then pilatus1_force_callbacks should be
					 enabled so other plugins see data
				 -->
				<ref bean="pilatus1_force_callbacks" />
			</list>
		</property>
	</bean>

	<!-- Note most plugins are exposed via NXDetector's component system -->
	<!-- >>>Finder.find("pilatus1_plugins").get('pilatus1_counter_monitor') -->
	<bean id="pilatus1_plugins"
			class="gda.device.FindableObjectHolder">
		<property name="map">
			<map>
				<entry key="pilatus1_counter_monitor" value-ref="pilatus1_counter_monitor" />
			</map>
		</property>
	</bean>
</beans>
