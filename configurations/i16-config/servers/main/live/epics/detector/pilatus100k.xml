<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<!-- AD hardware -->

	<bean id="pilatus1_adbase" class="gda.device.detector.areadetector.v17.impl.ADBaseImpl">
		<property name="basePVName" value="BL16I-EA-PILAT-01:CAM:" />
	</bean>

	<bean id="pilatus1_driver"
		class="gda.device.detector.areadetector.v17.impl.ADDriverPilatusImpl">
		<property name="basePVName" value="BL16I-EA-PILAT-01:CAM:" />
	</bean>

	<bean id="pilatus1_camserver_ndfile" class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
		<property name="basePVName" value="BL16I-EA-PILAT-01:CAM:" />
		<property name="resetToInitialValues" value="false" />
		<property name="filePathConverter">
			<bean class="uk.ac.gda.util.SimpleFilePathConverter">
				<property name="userSubString" value="/dls/i16/data" />
				<property name="internalSubString" value="/ramdisk" />
			</bean>
		</property>
	</bean>

	<bean id="pilatus1_ndfile_hdf5" class="gda.device.detector.areadetector.v17.impl.NDFileHDF5Impl">
		<property name="basePVName" value="BL16I-EA-PILAT-01:HDF5:" />
		<property name="file">
			<bean class="gda.device.detector.areadetector.v17.impl.NDFileImpl">
				<property name="basePVName" value="BL16I-EA-PILAT-01:HDF5:" />
				<property name="resetToInitialValues" value="false" />
				<property name="pluginBase">
					<bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
						<property name="basePVName" value="BL16I-EA-PILAT-01:HDF5:" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>


	<!-- NXDetector collection strategies -->

	<bean id="pilatus1_nxcollectionstrategy" class="gda.device.detector.addetector.triggering.SingleExposurePilatus">
		<constructor-arg ref="pilatus1_adbase" />
		<constructor-arg value=".003" />
	</bean>

	<bean id="pilatus1_softtrigger"
			class="gda.device.detector.addetector.triggering.SoftTriggeredPilatus">
		<constructor-arg ref="pilatus1_adbase" />
		<constructor-arg value=".003" />
		<property name="pilatusDriver" ref="pilatus1_driver" />
	</bean>

	<bean id="pilatus1_nxcollectionstrategy_for_hardware_triggering"
		class="gda.device.detector.addetector.triggering.HardwareTriggeredPilatus">
		<constructor-arg ref="pilatus1_adbase" />
		<constructor-arg ref="pilatus1_driver" />
		<constructor-arg value=".003" />
		<constructor-arg value="MULTIPLE_EXTERNAL_TRIGGER" />
	</bean>

	<bean id="pilatus1_nxcollectionstrategy_for_multiple_exposures_per_collection_internal_triggering"
		class="gda.device.detector.addetector.triggering.MultipleExposurePerCollectionStandard">
		<constructor-arg ref="pilatus1_adbase" />
		<constructor-arg value=".003" />
		<property name="readAcquisitionPeriod" value="true" />
		<property name="timeFormat" value="%.6f" />
	</bean>


	<!-- NXDetector file writers -->
	
	<bean id="pilatus1_nxfilewriter_for_scans"
		class="gda.device.detector.nxdetector.plugin.areadetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pilatus100k" />
		<property name="ndFile" ref="pilatus1_camserver_ndfile" />
		<property name="keyNameForMetadataPathTemplate" value="pilatus100k_path_template" />
		<property name="waitForFileArrival" value="false" /> <!--should be True if not using ProcessingDetectorWrapper -->
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="blocking" value="false" />
		<property name="returnPathRelativeToDatadir" value="true" />
		<property name="alwaysPrepare" value="true" />

		<!-- for soft trigger mode only -->
		<!--
		<property name="fileTemplateForReadout" value="%s%s00000_%05d.tif" />
		<property name="fileNumberAtScanStart" value="0" />
		-->
	</bean>

	<bean id="pilatus1_hdf5filewriter_for_scans"
		class="gda.device.detector.nxdetector.plugin.areadetector.filewriter.MultipleImagesPerHDF5FileWriter">
		<property name="ndFileHDF5" ref="pilatus1_ndfile_hdf5" />
		<property name="fileNameTemplate" value="" />
		<property name="filePathTemplate" value="$datadir$/$scan$-pilatus100k-files" />
		<property name="fileTemplate" value="%s%s%d.hdf" />
		<property name="fileNumberAtScanStart" value="-1" />
		<property name="setFileNameAndNumber" value="true" />
		<property name="blocking" value="false" />
	</bean>

	<bean id="pilatus1_nxfilewriter_for_hardware_triggering"
		class="gda.device.detector.nxdetector.plugin.areadetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pilatus100k" />
		<property name="ndFile" ref="pilatus1_camserver_ndfile" />
		<property name="keyNameForMetadataPathTemplate" value="pilatus100k_path_template" />
		<property name="waitForFileArrival" value="false" />
		<property name="fileNumberAtScanStart" value="0" />
		<property name="fileTemplateForReadout" value="%s00000_%s%05d.tif" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="alwaysPrepare" value="true" />
	</bean>

	<bean id="pilatus1_nxfilewriter_for_snaps"
		class="gda.device.detector.nxdetector.plugin.areadetector.filewriter.SingleImagePerFileWriterWithNumTracker">
		<constructor-arg value="pilatus100k" />
		<property name="ndFile" ref="pilatus1_camserver_ndfile" />
		<property name="numTrackerExtension" value="pilatus100ksnaps" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="alwaysPrepare" value="true" />
	</bean>
	
	<bean id="pilatus1_nxfilewriter_for_multiple_exposures_per_collection_internal_triggering"
		class="gda.device.detector.nxdetector.plugin.areadetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pilatus100kmulti" />
		<property name="ndFile" ref="pilatus1_camserver_ndfile" />
		<property name="keyNameForMetadataPathTemplate" value="pilatus100k_path_template" />
		<property name="waitForFileArrival" value="false" />
		<property name="fileNumberAtScanStart" value="0" />
		<property name="fileTemplateForReadout" value="%s%s%05d_nnnnn.tif" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="alwaysPrepare" value="true" />
	</bean>
	
	<bean id="pilatus1_counter_monitor" class="gda.device.detector.nxdetector.plugin.areadetector.ADArrayCounterMonitor">
		<constructor-arg ref="pilatus1_adbase" />
	</bean>

	<!-- NXDetectors -->

	<bean id="pilatus1" class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus1" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy"/>
		<!-- <property name="collectionStrategy" ref="pilatus1_softtrigger" /> -->
		<property name="additionalPluginList">
			<list>
				<!--<ref bean="pilatus1_force_callbacks" />-->
				<ref bean="pilatus1_nxfilewriter_for_scans" />
				<!-- <ref bean="pilatus1_hdf5filewriter_for_scans" /> -->
			</list>
		</property>
	</bean>

	<bean id="pilatus1_multi" class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus1_multi" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy_for_multiple_exposures_per_collection_internal_triggering"/>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus1_nxfilewriter_for_multiple_exposures_per_collection_internal_triggering" />
			</list>
		</property>
	</bean>

	<bean id="pilatus1_force_callbacks" class="gda.device.detector.nxdetector.plugin.NXForceCallbacks" />

	<bean id="pilatus1_hardware_triggered" class="gda.device.detector.HardwareTriggeredNXDetector">
		<property name="name" value="pilatus1_hardware_triggered" />
		<property name="hardwareTriggerProvider" ref="zebraContinuousMoveController" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy_for_hardware_triggering" />
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus1_nxfilewriter_for_hardware_triggering" />
			</list>
		</property>
		<!--
		<property name="hardwareTriggerProvider" ref="xpsTrajController" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy_for_hardware_triggering"/>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus1_nxfilewriter_for_hardware_triggering" />
				<ref bean="pilatus1_force_callbacks" />
			</list>
		</property>
	-->
	</bean>

	<bean id="pilatus1_for_snaps" class="gda.device.detector.NXDetector">
		<property name="name" value="pilatus1_for_snaps" />
		<property name="collectionStrategy">
			<bean
				class="gda.device.detector.addetector.triggering.SingleExposurePilatus">
				<constructor-arg ref="pilatus1_adbase" />
				<constructor-arg value=".003" />
			</bean>
		</property>
		<property name="additionalPluginList">
			<list>
				<ref bean="pilatus1_nxfilewriter_for_snaps" />
			</list>
		</property>
	</bean>

	<!-- Note most plugins are exposed via NXDetector's component system -->
	<!-- >>>Finder.getInstance().find("pilatus1_plugins").get('pilatus1_counter_monitor') -->
	<bean id="pilatus1_plugins" class="gda.device.FindableObjectHolder">
		<property name="map">
			<map>
				<entry key="pilatus1_counter_monitor" value-ref="pilatus1_counter_monitor" />
			</map>
		</property>
	</bean>

	<bean id="zebrapil1" class="gda.device.detector.HardwareTriggeredNXDetector">
		<property name="name" value="zebrapil1" />
		<property name="hardwareTriggerProvider" ref="zebraContinuousMoveController" />
		<property name="collectionStrategy" ref="pilatus1_nxcollectionstrategy_for_hardware_triggering" />
		<property name="additionalPluginList">
			<list>
				<ref bean="zebrapil1_camserver_nxfilewriter_for_hardware_triggering" />
				<ref bean="pilatus1_force_callbacks" />
			</list>
		</property>
	</bean>

	<bean id="zebra1" class="gda.device.zebra.controller.impl.ZebraImpl">
		<property name="zebraPrefix" value="BL16I-MO-DIFF-01:ZEB1:"/>
		<property name="armPutNoWait" value="True" />
	</bean>

	<bean id="zebraContinuousMoveController" class="gda.device.zebra.ZebraConstantVelocityMoveController">
		<property name="zebra" ref="zebra1"/>
		<property name="local" value="true" />
		<property name="mode" value="1"/>
		<property name="pcPulseGateNotTrigger" value="false"/>
		<property name="minimumAccelerationDistance" value="0.008"/>
	</bean>

	<bean id="kphiZebra" class="gda.device.zebra.ZebraScannableMotor">
		<property name="motor" ref="sixcKphiMotor" />
		<property name="local" value="true" />
		<property name="zebraConstantVelocityMoveController" ref="zebraContinuousMoveController"/>
		<property name="scurveTimeToVelocity" value=".05"/> <!-- From ACCL -->
	</bean>

	<bean id="kthZebra" class="gda.device.zebra.ZebraScannableMotor">
		<property name="motor" ref="sixcKthMotor" />
		<property name="local" value="true" />
		<property name="zebraConstantVelocityMoveController" ref="zebraContinuousMoveController"/>
		<property name="scurveTimeToVelocity" value=".05"/> <!-- From ACCL -->
	</bean>

	<bean id="zebrapil1_camserver_nxfilewriter_for_hardware_triggering"
		class="gda.device.detector.nxdetector.plugin.areadetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="zebrapil1" />
		<property name="ndFile" ref="pilatus1_camserver_ndfile" />
		<property name="waitForFileArrival" value="false" />
		<property name="fileNumberAtScanStart" value="0" />
		<property name="fileTemplateForReadout" value="%s00000_%s%05d.tif" />
		<property name="writeErrorStatusSupported" value="false"/>
		<property name="pathErrorSuppressed" value="true" />
		<property name="keyNameForMetadataPathTemplate" value="pilatus100k_path_template" />
		<property name="returnPathRelativeToDatadir" value="true" />
		<property name="alwaysPrepare" value="true" />
	</bean>

</beans>
