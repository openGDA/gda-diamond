<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd"
	profile="NexusScanDataWriter">

	<bean id="dummy_NSDW" class="gda.device.scannable.ScannableMotor">
		<property name="motor" ref="dummy_NSDW_motor" />
	</bean>

	<bean id="dummy_NSDW_motor" class="gda.device.motor.DummyMotor"/>

	<!-- Beans required for NexusScanDataWriter
	 -->

	<bean class="gda.data.scan.nexus.device.BeforeScanSnapshotWriter" init-method="register" />

	<bean id="sourceNexusDevice" class="org.eclipse.scanning.device.SourceNexusDevice" init-method="register">
		<property name="name" value="sourceNexusDevice" />
		<property name="sourceName" value="Diamond Light Source" />
		<property name="currentScannableName" value="rc" />
	</bean>

	<bean id="idNexusDevice" class="org.eclipse.scanning.device.InsertionDeviceNexusDevice" init-method="register">
		<property name="name" value="idNexusDevice" />
		<property name="type" value="WIGGLER" />
		<property name="gapScannableName" value="idgap" />
		<!-- 
		<property name="taperScannableName" value="dummy1" />
		 -->
		<property name="harmonicScannableName" value="uharmonic" />
	</bean>

	<bean id="monochromatorNexusDevice" class="org.eclipse.scanning.device.MonochromatorNexusDevice" init-method="register">
		<property name="name" value="monochromatorNexusDevice" />
		<property name="energyScannableName" value="en" />
		<!-- Commenting any out causes the whole NXmonochromator node to be disappeared
		<property name="energyErrorScannableName" value="dummy1" />
		 -->
	</bean>

	<bean id="beamNexusDevice" class="org.eclipse.scanning.device.BeamNexusDevice" init-method="register">
		<property name="name" value="beamNexusDevice" />
		<property name="incidentEnergyScannableName" value="en" />
		<!-- Commenting any out causes the whole NXmonochromator node to be disappeared
		<property name="incidentBeamDivergenceScannableName" value="dummy1" />
		<property name="incidentPolarizationScannableName" value="dummy1" />
		<property name="beamExtentScannableName" value="dummy1" />
		<property name="fluxScannableName" value="dummy1" />
		 -->
	</bean>

	<bean id="userNexusDevice" class="org.eclipse.scanning.device.UserNexusDevice" init-method="register">
		<property name="name" value="userNexusDevice" />
	</bean>

	<bean id="commonBeamlineDevicesConfiguration" class="org.eclipse.scanning.device.CommonBeamlineDevicesConfiguration">
		<property name="sourceName" value="sourceNexusDevice" />
		<property name="insertionDeviceName" value="idNexusDevice" />
		<!-- 
		<property name="bendingMagnetName" value="" />
		 -->
		<property name="monochromatorName" value="monochromatorNexusDevice" />
		<property name="beamName" value="beamNexusDevice" />
		<property name="userDeviceName" value="userNexusDevice" />
		<property name="additionalDeviceNames">
			<set>
				<value>before_scan</value>
			</set>
		</property>
	</bean>

	<!-- org.eclipse.dawnsci.nexus.scan.IDefaultDataGroupCalculator -->
	<bean id="nexusDefaultDataGroupName" class="org.eclipse.scanning.sequencer.nexus.DefaultDataGroupConfiguration">
		<property name="defaultDataGroupName" value="measurement" />
	</bean>

	<!-- Beans also required for NexusDataWriter
	 -->

	<bean id="nexusDataWriterConfiguration" class="gda.data.scan.datawriter.NexusDataWriterConfiguration">
		<!-- Clear the nexusTemplateFiles if LocalProperties.get("gda.data.scan.datawriter.dataFormat") == u'NexusDataWriter' as
			 these only work with NexusScanDataWriter, see scripts/datawriting/16_nexus.py -->
		<property name="nexusTemplateFiles">
			<list>
				<value>${gda.config}/yaml/NXclassic_scan.yaml</value>
				<!-- 
				<value>${gda.config}/yaml/locationMap.yaml</value>
				 -->
			</list>
		</property>
		<!-- The locationMap will work with both NexusDataWriter and NexusScanDataWriter, but is deprecated for the latter -->
		<property name="locationMap">
			<map>
				<entry key="frontend">
					<bean class="gda.data.scan.datawriter.scannablewriter.SingleScannableWriter">
						<property name="paths">
							<list>
								<value>instrument:NXinstrument/Frontend:NXcollection/frontendx</value>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="en">
					<bean class="gda.data.scan.datawriter.scannablewriter.SingleScannableWriter">
						<property name="paths">
							<list>
								<value>sample:NXsample/beam:NXbeam/incident_energy</value>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="delta_axis_offset">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="instrument:NXinstrument/transformations:NXtransformations/offsetdelta" />
						<property name="depends_on"
							value="entry1/instrument/transformations/delta" />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list><list>
								<value>0</value>
								<value>-1</value> <!-- rotation is in opposite direction to delta -->
								<value>0</value>
							</list></list>
						</property>
					</bean>
				</entry>
				<entry key="kdelta">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="instrument:NXinstrument/transformations:NXtransformations/delta" />
						<property name="depends_on"
							value="entry1/instrument/transformations/gamma" />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list><list>
								<value>0</value>
								<value>1</value>
								<value>0</value>
							</list></list>
						</property>
					</bean>
				</entry>
				<entry key="kgam">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="instrument:NXinstrument/transformations:NXtransformations/gamma" />
						<property name="depends_on" value="." />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list><list>
								<value>1</value>
								<value>0</value>
								<value>0</value>
							</list></list>
						</property>
					</bean>
				</entry>
				<!-- Comment out kphi when USE_CRYO_GEOMETRY = True  -->
				<entry key="kphi">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="sample:NXsample/transformations:NXtransformations/phi" />
						<property name="depends_on"
							value="entry1/sample/transformations/kappa" />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list><list>
								<value>0</value><value>1</value><value>0</value>
							</list></list>
						</property>
					</bean>
				</entry>
				<entry key="kap">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="sample:NXsample/transformations:NXtransformations/kappa" />
						<property name="depends_on"
							value="entry1/sample/transformations/theta" />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list><list>
								<value>0</value><value>0.64278761</value><value>-0.76604443</value>
							</list></list>
						</property>
					</bean>
				</entry>
				<entry key="kth">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="sample:NXsample/transformations:NXtransformations/theta" />
						<property name="depends_on"
							value="entry1/sample/transformations/mu" />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list>
								<list><value>0</value><value>1</value><value>0</value></list>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="kmu">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="sample:NXsample/transformations:NXtransformations/mu" />
						<property name="depends_on"
							value="." />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list>
								<list><value>1</value><value>0</value><value>0</value></list>
							</list>
						</property>
					</bean>
				</entry>
				<!-- Comment out cryophi when USE_CRYO_GEOMETRY = False -->
				<!-- uncomment when the NXMeta thing is fixed or cryophi is online
				<entry key="cryophi">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
								value="sample:NXsample/transformations:NXtransformations/cryophi" />
						<property name="depends_on"
								value="entry1/sample/transformations/phi" />
						<property name="units" value="deg" />
						<property name="vector">
							<list>
								<list><value>0.567744</value><value>-0.0003651</value><value>0.82389</value></list>
							</list>
						</property>
					</bean>
				</entry>
				-->
				<entry key="x">
					<bean class="gda.data.scan.datawriter.scannablewriter.SingleScannableWriter">
						<property name="paths"
							value="test:NXcollection/x" />
					</bean>
				</entry>
			</map>
		</property>
		<property name="metadataScannables">
			<set>
				<value>kgam</value>
				<value>kdelta</value>
				<value>delta_offset</value>
				<value>kap</value>
				<value>kphi</value>
				<value>kth</value>
				<value>kmu</value>
			</set>
		</property>
	</bean>

	<!-- Transform to test
	<bean id="kgam_transform" class="org.eclipse.scanning.device.PositionerTransformationsAppender">
		<property name="name" value="delta" />
		<property name="transformation">
			<bean class="org.eclipse.scanning.device.Transformation">
				<property name="axisName" value="gamma" />
				<property name="type">
					<value type="org.eclipse.scanning.device.Transformation.TransformationType">ROTATION</value>
				</property>
				<property name="dependsOn" value="entry1/instrument/transformations/gamma" />
				<property name="size" value="0" />
				<property name="vector">
					<list>
						<value>0</value>
						<value>1</value>
						<value>0</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>
	 -->
				<!-- 
				<entry key="kgam">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
						<property name="paths"
							value="instrument:NXinstrument/transformations:NXtransformations/gamma" />
						<property name="depends_on" value="." />
						<property name="transformation" value="rotation" />
						<property name="units" value="deg" />
						<property name="vector">
							<list><list>
								<value>1</value>
								<value>0</value>
								<value>0</value>
							</list></list>
						</property>
					</bean>
				</entry>
				 -->

	<!-- Transform to test
	<bean id="kdelta_transform" class="org.eclipse.scanning.device.PositionerTransformationsAppender">
		<property name="name" value="delta" />
		<property name="transformation">
			<bean class="org.eclipse.scanning.device.Transformation">
				<property name="axisName" value="kdelta" />
				<property name="type">
					<value type="org.eclipse.scanning.device.Transformation.TransformationType">ROTATION</value>
				</property>
				<property name="dependsOn" value="entry1/instrument/transformations/gamma" />
				<property name="size" value="0" />
				<property name="vector">
					<list>
						<value>0</value>
						<value>1</value>
						<value>0</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>
	 -->

	<!-- Not used
				<property name="offset">
					<list>
						<value>0</value>
						<value>1</value>
						<value>0</value>
					</list>
				</property>
				<property name="offsetUnits" value="deg" />

	Example Transformation from unit test
		Transformation(String axisName, TransformationType type, String dependsOn,
			double size, double[] vector, double[] offset, String offsetUnits) {

		private static final Transformation POSITIONER_TRANSFORMATION = new Transformation(
			"theta", ROTATION, "phi", 0.0, new double[] { 0.67, 0, -0.33 },
			new double[] { 1.23, 4.56, 7.89  }, "mm");
	
	Original TransformationWriter bean
			Y	<entry key="kdelta">
					<bean class="gda.data.scan.datawriter.scannablewriter.TransformationWriter">
			N			<property name="paths"
							value="instrument:NXinstrument/transformations:NXtransformations/delta" />
																							Transformations get added to the scannable, not a specific place
			Y			<property name="depends_on"
							value="entry1/instrument/transformations/gamma" />
			Y			<property name="transformation" value="rotation" />
			N			<property name="units" value="deg" />					This is the unit of the scannable, not the offset units of the transformation
			Y			<property name="vector">
							<list><list>
								<value>0</value>
								<value>1</value>
								<value>0</value>
							</list></list>
						</property>
					</bean>
				</entry>
	 -->
</beans>
