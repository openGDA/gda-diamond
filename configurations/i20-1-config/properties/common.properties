
# beamline (use default gda.rcp.workspace)
# don't forget to change the logging properties as well!
#gda.data                              = /dls/i20-1/data
#gda.var                               = /dls_sw/i20-1/software/gda_versions/var
#gda.logs.dir                          = /dls_sw/i20-1/logs

gda.data.scan.datawriter.datadir	= ${gda.data}/$year$/$visit$/$subdirectory$


gda.factory.factoryName 	= i20-1
gda.factory.allowExceptionInConfigure=true
gda.oe.oefactory        	= remote
gda.objectserver.xml    	= ${gda.config}/servers/main/dummy/server.xml
gda.gui.beans.xml           = ${gda.config}/clients/main/dummy/client.xml

#
# for rbac
#
gda.accesscontrol.useAccessControl = true 
# if set to true then the BatonPanel MUST be used in the GUI to exchange and control the baton
gda.accesscontrol.useBatonControl = true
# this must not be set to less than 1 or baton passing will not work
gda.accesscontrol.defaultAuthorisationLevel = 1
gda.accesscontrol.defaultStaffAuthorisationLevel = 3 
gda.accesscontrol.firstClientTakesBaton = true
## Login Authentication
#gda.gui.AcquisitionGUI.authenticationMethod = gda.jython.authenticator.LdapAuthenticator
gda.gui.AcquisitionGUI.authorisationMethod = gda.jython.authoriser.LdapAuthoriser

#
# logging
#
# port used by client log panel to receive messages - normally from logserver
gda.client.logging.port = 6789
# port used by logserver to receive messages
gda.server.logging.port = 6788
# port used by logPanel application to receive messages - normally from logserver
gda.logPanel.logging.port=6790

#
# Offline configuration (version in svn) TODO: make two separate sets of files
#
# configuration for messages originating from the client
#gda.client.logging.xml = ${gda.config}/xml/logging_localhost/logging-configuration-client.xml
# configuration for messages originating from the object server
#gda.server.logging.xml = ${gda.config}/xml/logging_localhost/logging-configuration-server.xml
# configuration for messages received by the client via gda.client.logging.port - normally only sends messages to the client's log panel
#gda.clientLogService.logging.xml= ${gda.config}/xml/logging_localhost/client-log-service.xml
# configuration for messages received by the log server via gda.server.logging.port
#gda.logserver.xml = ${gda.config}/xml/logging_localhost/log-server.xml
#configuration for messages received by the logPanel application via gda.logPanel.logging.port
#gda.logPanel.logging.xml= ${gda.config}/xml/logging_localhost/log-panel.xml


#
# Beamline configuration
#
# configuration for messages originating from the client
#gda.client.logging.xml = ${gda.config}/xml/beamline_logging/logging-configuration-client.xml
# configuration for messages originating from the object server
#gda.server.logging.xml = ${gda.config}/xml/beamline_logging/logging-configuration-server.xml
# configuration for messages received by the client via gda.client.logging.port - normally only sends messages to the client's log panel
#gda.clientLogService.logging.xml= ${gda.config}/xml/beamline_logging/client-log-service.xml
# configuration for messages received by the log server via gda.server.logging.port
#gda.logserver.xml = ${gda.config}/xml/beamline_logging/log-server.xml
#configuration for messages received by the logPanel application via gda.logPanel.logging.port
#gda.logPanel.logging.xml= ${gda.config}/xml/beamline_logging/log-panel.xml

#
# Documentation
#
gda.help.manual=http://doc.diamond.ac.uk/Documentation/GDA-manual.html
gda.bugReport.site=http://trac.diamond.ac.uk/beam/login
gda.beamline.manual=http://intranet.diamond.ac.uk/I20-1Manual.html

#
# scripting and the scanning mechanism
#
gda.jython.terminalOutputDir        = ${gda.logs.dir}
gda.data.scan.datawriter.dataFormat = NexusDataWriter
gda.data.filePrefix                 = i20-1_

# Command to run at the end of a scan.
#gda.scan.executeAtEnd = ls -al

# Configuration for NeXus writing
gda.nexus.backend        = HDF5
gda.nexus.beamlinePrefix = true
gda.nexus.createSRS      = false

#  Cap the memory used by the client's terminal textbox
gda.jython.jythonTerminal.textFieldCharactersCap = 100000
# And for the Message and Debug Panels
gda.util.LoggingPanels.textFieldCharactersCap = 100000

#
#
## Next three settings are for the jacorb CORBA event service ##
#
gda.ORBClass             = org.jacorb.orb.ORB
gda.ORBSingletonClass    = org.jacorb.orb.ORBSingleton
gda.eventChannelName     = local.eventChannel
#

#
## Next are miscellaneaous settings for various file locations and options ##
#
gda.params	       	      = ${gda.config}
gda.motordir              = ${gda.config}/var/motorPositions
gda.limitsdir		      = ${gda.config}/var/limitsAndOffset
gda.softlimits.save       = true
#

## Synoptic screen and script locations
gda.dal.screens = ${gda.config}/xml/client/synoptic/screens/
gda.dal.scripts = ${gda.config}/xml/client/synoptic/scripts/

#
## EXAFS specific settings ##
#
#gda.exafs.buttonFontSize              = 8
#gda.exafs.minEnergy                   = 1
#gda.exafs.maxEnergy                   = 15
#gda.exafs.twoD                        = 6.271
#gda.function.columnDataFile.lookupDir = ${gda.config}/lookupTables
#gda.oe.undulatorLookupDir             = ${gda.function.columnDataFile.lookupDir}
#gda.device.xspress.configFileName     = ${gda.config}/xspress.cfg
#gda.exafs.darkcurrent.detector        = counterTimer01
#gda.exafs.darkcurrent.shutter         = shutter1

#
# EPICS
#
gda.beamline.name = BL20J
gda.epics.request.timeout=20.0

gda.epics.interface.xml = ${gda.config}/xml/epics/BL20J-gda-interface.xml
gda.epics.interface.schema = ${gda.config}/xsd/genericBeamlineSchema.xsd
gda.epics.interface.xml.unchecked = ${gda.config}/xml/epics/xmap.xml
gda.epics.EpicsDeviceFactory = true

## Controls saving of metadata to Nexus files and data files to SRB
## server xml requires <FindableHashtable> entry for state communication
gda.data.nexusMetadata = false
gda.data.srbStore = false

# Metadata
gda.instrument      = i20-1
gda.facility        = DLS
gda.facility.probe  = x-ray
gda.facility.type   = Synchrotron X-ray Source

oracle.host=${gda.factory.factoryName}-control.diamond.ac.uk
oracle.port=1521

gda.data.metadata.icat.type            = null
#gda.data.metadata.icat.type            = gda.data.metadata.icat.DLSIcat
#gda.data.metadata.icat.url             = jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(HOST=${oracle.host})(PROTOCOL=tcp)(PORT=${oracle.port}))(CONNECT_DATA=(SID=xe)))
#gda.data.metadata.icat.shift_tolerance = 1440
#gda.data.metadata.dlsicat.user         = ikit${gda.factory.factoryName}
#gda.data.metadata.dlsicat.password     = d24sb4k

# Default values
#gda.defVisit = cm1903-4
#gda.defVisit = i20-1

gda.jython.namespaceMappingFile = ${gda.config}/scripts/jythonNamespaceMapping
gda.jython.beamlineParametersFile = ${gda.config}/scripts/beamlineParameters
gda.jython.finderNameMappingFile = ${gda.config}/scripts/finderNameMapping

# for client title bar
gda.beamline.name=I20-1

#elog
gda.elog.targeturl = http://rdb.pri.diamond.ac.uk/devl/php/elog/cs_logentryext_bl.php

# Port on which the HTTP server should listen. This is only used when creating
# a Jetty HTTP server in a Spring beans configuration file
# (e.g. stnBase_server_beans.xml).
gda.server.port=8080

# Mono rate in ms/eV
gda.exafs.mono.energy.rate = 200
# Readout constant in ms
gda.exafs.read.out.time    = 500

#
# RCP client options
#
uk.ac.gda.pydev.show.python.config.project = true
uk.ac.gda.pydev.show.python.gda.project    = true
