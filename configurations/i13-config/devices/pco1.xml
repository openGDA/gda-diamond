<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:corba="http://www.diamond.ac.uk/schema/gda/corba"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.diamond.ac.uk/schema/gda/corba http://www.diamond.ac.uk/schema/gda/corba/gda-corba-1.0.xsd">

	<bean id="pco1_cameraroi" class="gda.device.detector.nxdetector.plugin.areadetector.CameraROINXPlugin">
	<constructor-arg value="pco_roi"/>
	<constructor-arg ref="pco1_cam_base"/>
	</bean>


	<bean id="pco1_plugins" class="gda.device.FindableObjectHolder">
		<property name="map">
			<util:map>
				<entry key="pco1_cam_base" value-ref="pco1_cam_base" />
				<entry key="pco1_arr" value-ref="pco1_arr" />
				<entry key="pco1_ffmpeg1" value-ref="pco1_ffmpeg1" />
<!-- 				<entry key="pco1_ffmpeg2" value-ref="pco1_ffmpeg2" />
 -->				<entry key="pco1_roi1" value-ref="pco1_roi1" />
<!-- 				<entry key="pco1_roi2" value-ref="pco1_roi2" />
 -->				<entry key="pco1_proc1" value-ref="pco1_proc1" />
<!-- 				<entry key="pco1_proc2" value-ref="pco1_proc2" />
 -->				<entry key="pco1_ndhdf5file" value-ref="pco1_ndhdf5file"/>
				<entry key="pco1_ndfiletif" value-ref="pco1_ndfiletif"/>
				<entry key="pco1_stat" value-ref="pco1_stat"/>
				<entry key="pco1_singleExposurePcoSoftwareTrigger" value-ref="pco1_singleExposurePcoSoftwareTrigger"/>
				<entry key="pco1_singleExposurePco" value-ref="pco1_singleExposurePco"/>
				<entry key="pco1_autoContinuousTrigger" value-ref="pco1_autoContinuousTrigger"/>
				<entry key="adDriverPco1" value-ref="adDriverPco1"/>
			</util:map>
		</property>
	</bean>



	<bean id="adDriverPco1"
		class="gda.device.detector.areadetector.v17.impl.ADDriverPcoImpl">
		<property name="basePvName" value="BL13I-EA-DET-01:CAM" />
	</bean>


	<bean id="pco1_autoContinuousTrigger" class="gda.device.detector.addetector.triggering.PCOAutoContinuous">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg ref="adDriverPco1" />
		<property name="adcMode" value="0"/>		
	</bean>

	<bean id="pco1_singleExposurePcoSoftwareTrigger" class="gda.device.detector.addetector.triggering.SingleExposurePcoSoftwareTrigger">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg ref="adDriverPco1" />
		<constructor-arg value=".03" />
	</bean>
	<bean id="pco1_singleExposurePco" class="gda.device.detector.addetector.triggering.SingleExposurePco">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg ref="adDriverPco1" />
		<constructor-arg value=".03" />
	</bean>
	<bean id="flyScanFlatDarkCollectionStrategy" parent="pco1_singleExposurePco"/>
	
	<!-- <bean id="pco1_rec" class="gda.device.detector.addetector.triggering.PCORecorder">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg ref="adDriverPco1" />
		<constructor-arg value=".04" />
	</bean> -->

	<!-- Connect 
	a.phase shifted TTL from function generator to Trigger Out (from camera).
	b.Trigger In ( from TFg to Camera Trigger In
	c.Busy Out ( from camera to tfg)
	-->
<!--  	<bean id="pco1_multipleExposureHardwarePco" class="gda.device.detector.addetector.triggering.PCOMultipleExposureHardwareTrigger">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg value=".04" />
		<constructor-arg ref="adDriverPco1" />
		<property name="ndProcess" ref="pco1_proc2" />
		<property name="etfg" ref="tfg"/>
		<property name="exposureTime" value=".001"/>
	</bean>
 -->
	<bean id="pco1_tfg" class="gda.device.detector.addetector.triggering.PCOTFGTrigger">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg ref="adDriverPco1" />
		<constructor-arg ref="tfg" />
		<property name="exposeTriggerOutVal" value="64"/>
		<property name="noLongerBusyTriggerInVal" value="39"/>
		<property name="noLongerBusyTriggerSetupCommand" value="tfg setup-trig start adc5 alternate 1"/>
		<property name="adcMode" value="0"/>
		<property name="useShutterPV" value="false"/>
		<property name="shutterSleep" value="100"/>
		<property name="shutterPVName" value="BL13I-EA-FSHTR-01:CONTROL"/>
	</bean>
	
	<bean id="pco1_tfg_contauto" class="gda.device.detector.addetector.triggering.PCOTFGTriggerContinuousAutoMode">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg ref="adDriverPco1" />
		<constructor-arg ref="tfg" />
		<property name="exposeTriggerOutVal" value="64"/>
		<property name="noLongerBusyTriggerInVal" value="39"/>
		<property name="noLongerBusyTriggerSetupCommand" value="tfg setup-trig start adc5 alternate 1"/>
		<property name="adcMode" value="0"/>
		<property name="useShutterPV" value="false"/>
		<property name="shutterSleep" value="100"/>
		<property name="shutterPVName" value="BL13I-EA-FSHTR-01:CONTROL"/>
	</bean>
	
	<bean id="pco1_hdf5_filewriter" class="gda.device.detector.addetector.filewriter.MultipleImagesPerHDF5FileWriter">
		<property name="ndFileHDF5" ref="pco1_ndhdf5file" />
		<property name="fileNameTemplate" value="pco1"/>
		<property name="filePathTemplate" value="$datadir$"/>
		<property name="fileTemplate" value="%s%s-%d.hdf"/>
		<property name="fileNumberAtScanStart" value="-1"/>
		<property name="setFileNameAndNumber" value="true"/>
		<property name="rowChunks" value="64"/>
		<property name="colChunks" value="0"/>
		<property name="framesChunks" value="64"/>
		<property name="framesFlush" value="64"/>
		<property name="lazyOpen" value="true"/>
<!-- 		<property name="boundaryAlign" value="1048576"/>
 -->		<property name="blocking" value="false"/> <!-- must be false otherwise PCO Event Driver driver crashes if framesChunks is 64-->
		<property name="pathErrorSuppressed" value="true"></property>
	</bean>

	<bean id="pco1_hdf5_filewriter_nochunking" class="gda.device.detector.addetector.filewriter.MultipleImagesPerHDF5FileWriter">
		<property name="ndFileHDF5" ref="pco1_ndhdf5file" />
		<property name="fileNameTemplate" value="pco1"/>
		<property name="filePathTemplate" value="$datadir$"/>
		<property name="fileTemplate" value="%s%s-%d.hdf"/>
		<property name="fileNumberAtScanStart" value="-1"/>
		<property name="setFileNameAndNumber" value="true"/>
		<property name="rowChunks" value="0"/>
		<property name="colChunks" value="0"/>
		<property name="framesChunks" value="0"/>
		<property name="framesFlush" value="0"/>
		<property name="lazyOpen" value="true"/>
		<!-- property name="boundaryAlign" value="1048576"/ -->
		<property name="blocking" value="false"/> <!-- must be false otherwise PCO Event Driver driver crashes if framesChunks is 64-->
		<property name="pathErrorSuppressed" value="true"></property>
	</bean>


	<!--  Use External Only triggering as otherwise the PCo EPICS driver will also send software triggers -->
	<bean id="flyScanCollectionStrategy" class="gda.device.detector.addetector.triggering.HardwareTriggeredPCO">
		<constructor-arg ref="pco1_cam_base" />
		<constructor-arg value=".001" />
		<constructor-arg ref="adDriverPco1" />
		<property name="etfg" ref="tfg"/>
		<property name="triggerMode" value="EXTERNAL_ONLY"/>
	</bean>

	<bean id="pco1_tif_writer" class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
		<constructor-arg value="pco1"/>
		<property name="ndFile" ref="pco1_ndfiletif" />
		<property name="highestExistingFileMonitor" ref="highestExistingFileMonitor"/>
		<property name="waitForFileArrival" value="true"/>
		<property name="pathErrorSuppressed" value="true"></property>
	</bean>

	<bean id="pco1_hw_tif" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_hw_tif"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_tfg" />
		<property name="additionalPluginList">
			<list>
			<ref bean="pco1_tif_writer"/>
			<ref bean="pco1_cameraroi"/>
			</list>
		</property>
	</bean>	

	<bean id="pco1_hw_array" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_hw_tif_array"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_tfg" />
		<property name="additionalPluginList">
			<list>
			<bean class="gda.device.detector.nxdetector.plugin.areadetector.ADArrayPlugin">
				<constructor-arg ref="pco1_arr"/>
			</bean>
			</list>
		</property>
	</bean>	

	<bean id="pco1_tif" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_tif"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_singleExposurePco" />
		<property name="additionalPluginList">
			<list>
 			<bean class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
				<constructor-arg value="pco1"/>
				<property name="ndFile" ref="pco1_ndfiletif" />
				<property name="highestExistingFileMonitor" ref="highestExistingFileMonitor"/>
				<property name="waitForFileArrival" value="true"/>
				<property name="pathErrorSuppressed" value="true"></property>
				
			</bean>

			<bean class="gda.device.detector.nxdetector.plugin.areadetector.ADArrayPlugin">
				<constructor-arg ref="pco1_arr"/>
			</bean>
			<bean class="gda.device.detector.nxdetector.plugin.areadetector.ADBasicStats">
				<constructor-arg ref="pco1_stat"/>
			</bean>
			
			</list>
		</property>
	</bean>	

	<bean id="pco1_sw" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_sw"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_singleExposurePco" />
		<property name="additionalPluginList">
			<list>
			<bean class="gda.device.detector.nxdetector.plugin.areadetector.ADArrayPlugin">
				<constructor-arg ref="pco1_arr"/>
			</bean>
			</list>
		</property>
	</bean>	

	<bean id="pco1_hw_hdf" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_hw_hdf"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_tfg" />
		<property name="additionalPluginList">
			<list>
				<ref bean="pco1_hdf5_filewriter" />
				<ref bean="pco1_cameraroi"/>
			</list>
		</property>
	</bean>	


	<bean id="pco1_hw_hdf_nochunking" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_hw_hdf_nochunking"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_tfg" />
		<property name="additionalPluginList">
			<list>
				<ref bean="pco1_hdf5_filewriter_nochunking" />
				<ref bean="pco1_cameraroi"/>
			</list>
		</property>
	</bean>	

	<bean id="pco1_hw_hdf_nochunk_radio" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_hw_hdf_nochunking"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_tfg_contauto" />
		<property name="additionalPluginList">
			<list>
				<ref bean="pco1_hdf5_filewriter_nochunking" />
				<ref bean="pco1_cameraroi"/>
			</list>
		</property>
	</bean>	
	
	
	<!-- <bean id="pco1_tif_rec" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_tif_rec"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_rec" />
		<property name="additionalPluginList">
			<list>
 			<bean class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
				<constructor-arg value="pco1"/>
				<property name="ndFile" ref="pco1_ndfiletif" />
				<property name="highestExistingFileMonitor" ref="highestExistingFileMonitor"/>
				<property name="waitForFileArrival" value="true"/>
				<property name="pathErrorSuppressed" value="true"></property>
				
			</bean>

			<bean class="gda.device.detector.nxdetector.plugin.areadetector.ADArrayPlugin">
				<constructor-arg ref="pco1_arr"/>
			</bean>
			<bean class="gda.device.detector.nxdetector.plugin.areadetector.ADBasicStats">
				<constructor-arg ref="pco1_stat"/>
			</bean>
			
			</list>
		</property>
	</bean>	 -->
	
<!-- 	<bean id="pco1_multi_hdf" class="gda.device.detector.NXDetector">
		<property name="name" value="pco1_multi_hdf"/>
		<property name="addCollectTimeMs" value="true"/>
		<property name="collectionStrategy" ref="pco1_multipleExposureHardwarePco"/>
		<property name="additionalPluginList">
			<list>
	<bean class="gda.device.detector.addetector.filewriter.MultipleImagesPerHDF5FileWriter">
		<property name="ndFileHDF5" ref="pco1_ndhdf5file" />
		<property name="fileNameTemplate" value="pco1"/>
		<property name="filePathTemplate" value="$datadir$"/>
		<property name="fileTemplate" value="%s%s-%d.hdf"/>
		<property name="fileNumberAtScanStart" value="-1"/>
		<property name="setFileNameAndNumber" value="true"/>
		<property name="rowChunks" value="64"/>
		<property name="colChunks" value="0"/>
		<property name="framesChunks" value="64"/>
		<property name="framesFlush" value="64"/>
		<property name="lazyOpen" value="true"/>
		<property name="boundaryAlign" value="1048576"/>
		<property name="blocking" value="false"/> must be false otherwise PCO Event Driver driver crashes if framesChunks is 64
				<property name="ndArrayPortVal" value="pco1.prc2"/> use same proc as in collectionStrategy 
	</bean>
				<ref bean="pco1_cameraroi"/>
			</list>
		</property>
	</bean>	
 -->
	<!-- Not required <bean id="pco1_tif_processors" class="gda.device.detector.nexusprocessor.NexusTreeProviderProcessors">
		<property name="processors">
			<list>
				<ref bean="cam_ad_filename_processor" />
			</list>
		</property>
	</bean>


	<bean id="pco1" class="gda.device.detector.nexusprocessor.NexusDetectorProcessor">
		<property name="detector" ref="pco1_tif" />
		<property name="processor" ref="pco1_tif_processors" />
		<property name="mergeWithDetectorData" value="true"/>
	</bean> -->	


</beans>	
