
# Metadata items
gda.beamline.name  = i07
gda.instrument  = i07


gda.jython.GDAJythonInterpreter.useWriters = True
gda.device.scannable.ScannableMotor.copyMotorLimitsIntoScannableLimits = False

## Login Authentication
#gda.gui.AcquisitionGUI.authenticationMethod = gda.jython.authenticator.LdapAuthenticator
gda.gui.AcquisitionGUI.authorisationMethod = gda.jython.authoriser.LdapAuthoriser

# Documentation: Manual, bug report and beamline Wiki
gda.help.manual=http://doc.diamond.ac.uk/Documentation/GDA-manual.html
gda.beamline.manual=http://wiki.diamond.ac.uk/Wiki/Wiki.jsp?page=I07Entry
gda.bugReport.site=http://trac.diamond.ac.uk/beam/login

# scan plot settings
gda.scan.useScanPlotSettings = true
gda.plot.ScanPlotSettings.fromUserList = true
gda.plot.ScanPlotSettings.XFieldIndex = -1
gda.plot.ScanPlotSettings.YFieldIndicesVisible=-1
gda.gui.scanplot.maintainYTraceSelectionOnXaxisChange = true

# scan settings
gda.scan.sets.scannumber=True


## For data storage             ##
#gda.data.scan.datawriter.dataFormat = SrsDataFile
gda.data.scan.datawriter.dataFormat = NexusDataWriter

## For Pilatus data storage
gda.pilatus.datadir 	 = ${gda.data}/$year$/$visit$

gda.device.temperature.datadir=${gda.data}/$year$/$visit$


# Configuration for NeXus writing
gda.nexus.backend = HDF5
gda.nexus.createSRS = true
gda.nexus.instrumentApi=false
gda.nexus.writeSwmr = true
gda.nexus.beamlinePrefix = true
gda.data.fileExtension = nxs
gda.data.filePrefix = ${gda.beamline.name}-

## The next three have constraints. srsStation cannot have more than 4  ##
## characters, srsProject and srsExperiment cannot have more than 8 ##
#gda.data.scan.datawriter.srsStation     = BASE
#gda.data.scan.datawriter.srsProject     = GDA_BASE
#gda.data.scan.datawriter.srsExperiment  = Emulator

#  Cap the memory used by the client's terminal textbox
#gda.jython.jythonTerminal.textFieldCharactersCap = 100000
# And for the Message and Debug Panels
#gda.util.LoggingPanels.textFieldCharactersCap = 100000


## Controls saving of metadata to Nexus files and data files to SRB
## server xml requires <FindableHashtable> entry for state communication
gda.data.nexusMetadata = false
gda.data.srbStore = false

## Database and persistence settings
gda.util.persistence.database.dbpath	= ${gda.var}/gdaDatabase
gda.util.persistence.database.username	= gda
gda.util.persistence.database.password	= gda

# Following two to connect to external database
# These two to use embedded driver
gda.util.persistence.database.driver	= org.apache.derby.jdbc.EmbeddedDriver
gda.util.persistence.database.protocol	= jdbc:derby:

# analysis parameters
gda.analysis.io.PilatusLoader.commandPath = /dls_sw/apps/PilatusReader/recent/preader
gda.analysis.io.PilatusLoader.tempFile = /tmp/temp.bin

## Miscellaneaous settings for various file locations and options ##
gda.params	       	      = ${gda.config}
gda.motordir              = ${gda.var}/motorPositions
gda.limitsdir		      = ${gda.var}/limitsAndOffset

## Lookup Table directory ##
gda.oe.undulatorLookupDir = ${gda.config}/lookupTables

gda.factory.doXMLInstanceValidation = false

## Epics setting
gda.epics.beamline.name = BL07I
gda.epics.request.timeout = 3

# GDA GUI display configuration
# if fractionalSize defined, width/height will not be used
#gda.gui.fractionalSize      = 0.9
# setting the primary screen for GDA GUI display - default is 0
#gda.screen.primary=0
gda.gui.width =1440[self.epicsDriver.getGain(), 
gda.gui.height=900

#For the scan command
gda.scan.concurrentScan.readoutConcurrently=false

gda.device.vortex.spoolDir = ${gda.data}/$year$/$visit$/spool/
gda.fluorescenceDetector.spoolDir = ${gda.data}/$year$/$visit$/spool/

include=${sys:gda.facility.dir}/properties/${sys:gda.mode}/${sys:gda.mode}_facility_java.properties
