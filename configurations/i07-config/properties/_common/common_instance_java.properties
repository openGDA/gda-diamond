include=../../../mt-config/properties/common/java.properties

gda.objectserver.initialisationCompleteFolder=${gda.var}

gda.factory.factoryName = I07

# Metadata items
gda.beamline.name  = i07
gda.instrument  = i07
gda.facility   = DLS
gda.facility.type   = Synchrotron X-ray Source
gda.facility.probe   = X-ray

gda.jython.GDAJythonInterpreter.useWriters = True

## Login Authentication
#gda.gui.AcquisitionGUI.authenticationMethod = gda.jython.authenticator.LdapAuthenticator
gda.gui.AcquisitionGUI.authorisationMethod = gda.jython.authoriser.LdapAuthoriser

# for Role Based Access Control
gda.accesscontrol.useAccessControl = true
# if set to true then the BatonPanel MUST be used in the GUI to exchange and control the baton
gda.accesscontrol.useBatonControl = true
# this must not be set to less than 1 or baton passing will not work
gda.accesscontrol.defaultAuthorisationLevel = 1
gda.accesscontrol.defaultStaffAuthorisationLevel = 3 
gda.accesscontrol.firstClientTakesBaton = true

## For single application mode ##

#GDA Logging Server and Client configuration
#The client port must match with the port setting in SocketAppender element of the LogServer.xml. 
#default port is 6001
gda.client.logging.port = 6001
#The server port must match with the port number in SocketAppender element of the 
# ServerLoggingConfiguration.xml. Default port is 6000
gda.server.logging.port = 6000
# port used by logPanel application to receive messages - normally from logserver
gda.logPanel.logging.port=6002

gda.logserver.out.port = 6750

# configuration for messages originating from the client
gda.client.logging.xml = ${gda.config}/properties/${gda.mode}/client_and_server_logging.xml
# configuration for messages originating from the object server
gda.server.logging.xml = ${gda.config}/properties/${gda.mode}/client_and_server_logging.xml
# configuration for messages received by the client via gda.client.logging.port - normally only sends messages to the client's log panel
gda.clientLogService.logging.xml= ${gda.config}/xml/logging/clientService.xml
# configuration for messages received by the log server via gda.server.logging.port
gda.logserver.xml = ${gda.config}/properties/${gda.mode}/logServer.xml
#configuration for messages received by the logPanel application via gda.logPanel.logging.port


# Documentation: Manual, bug report and beamline Wiki
gda.help.manual=http://doc.diamond.ac.uk/Documentation/GDA-manual.html
gda.beamline.manual=http://wiki.diamond.ac.uk/Wiki/Wiki.jsp?page=I07Entry
gda.bugReport.site=http://trac.diamond.ac.uk/beam/login

# Jython Console Properties file
#gda.client.console.properties = ${gda.config}/properties/jyconsole.properties

# scan plot settings
gda.scan.useScanPlotSettings = true
gda.plot.ScanPlotSettings.fromUserList = true
gda.plot.ScanPlotSettings.XFieldIndex = -1
gda.plot.ScanPlotSettings.YFieldIndicesVisible=-1

# scan settings
gda.scan.sets.scannumber=True

## Remote access via a socket
#gda.jython.socket = 7777

## For scripting files         ##
gda.jython.userScriptDir 	 = /dls_sw/${gda.beamline.name}/scripts
gda.jython.gdaScriptDir      = ${gda.config}/scripts
gda.jython.terminalOutputDir = ${gda.logs.dir}
#gda.jython.gdaDevScriptDir   = ${gda.root}/uk.ac.gda.core/scripts/gdascripts
gda.jython.gdaDevScriptDir   = ${gda.install.git.loc}/gda-core.git/uk.ac.gda.core/scripts/gdascripts

##localstation name
#gda.jython.stationStartupScript = ${gda.config}/scripts/localStation.py


gda.jython.translator.class  = GeneralTranslator
#gda.jython.translator.class	 = MMTranslator

## For data storage             ##
#gda.data.scan.datawriter.dataFormat = GenericDataHandler
#gda.data.scan.datawriter.dataFormat = SrsDataFile
#gda.data.scan.datawriter.dataFormat = NexusDataWriter
gda.data.scan.datawriter.dataFormat = SixdSrsDataWriter
#gda.data.scan.datawriter.dataFormat = SixdNexusDataWriter

gda.function.columnDataFile.lookupDir = ${gda.config}/lookupTables

#gda.data.scan.datawriter.datadir    = ${gda.data}/data/$year$/$visit$
gda.data.scan.datawriter.datadir    = ${gda.data}/$year$/$visit$/$subdirectory$

## For Pilatus data storage
gda.pilatus.datadir 	 = ${gda.data}/$year$/$visit$

gda.device.temperature.datadir=${gda.data}/$year$/$visit$


# Command to run at the end of a scan.
#gda.scan.executeAtEnd = ls -al

# Configuration for NeXus writing
gda.nexus.backend = HDF5
gda.nexus.createSRS = true
gda.nexus.instrumentApi=false

gda.nexus.beamlinePrefix = true
gda.data.fileExtension = nxs
gda.data.filePrefix = ${gda.beamline.name}-

## The next three have constraints. srsStation cannot have more than 4  ##
## characters, srsProject and srsExperiment cannot have more than 8 ##
#gda.data.scan.datawriter.srsStation     = BASE
#gda.data.scan.datawriter.srsProject     = GDA_BASE
#gda.data.scan.datawriter.srsExperiment  = Emulator

#  Cap the memory used by the client's terminal textbox
#gda.jython.jythonTerminal.textFieldCharactersCap = 100000
# And for the Message and Debug Panels
#gda.util.LoggingPanels.textFieldCharactersCap = 100000


## Controls saving of metadata to Nexus files and data files to SRB
## server xml requires <FindableHashtable> entry for state communication
gda.data.nexusMetadata = false
gda.data.srbStore = false


# Default values
gda.defVisit = cm12156-1


## Database and persistence settings
gda.util.persistence.database.dbpath	= ${gda.var}/gdaDatabase
gda.util.persistence.database.username	= gda
gda.util.persistence.database.password	= gda

# Following two to connect to external database
# These two to use embedded driver
gda.util.persistence.database.driver	= org.apache.derby.jdbc.EmbeddedDriver
gda.util.persistence.database.protocol	= jdbc:derby:

# analysis parameters
gda.analysis.io.PilatusLoader.commandPath = /dls_sw/apps/PilatusReader/recent/preader
gda.analysis.io.PilatusLoader.tempFile = /tmp/temp.bin


## For the jacorb CORBA event service ##
gda.ORBClass 	      = org.jacorb.orb.ORB
gda.ORBSingletonClass = org.jacorb.orb.ORBSingleton
gda.eventChannelName  = local.eventChannel

## Miscellaneaous settings for various file locations and options ##
gda.params	       	      = ${gda.config}
gda.motordir              = ${gda.var}/motorPositions
gda.limitsdir		      = ${gda.var}/limitsAndOffset
gda.softlimits.save       = false


## Lookup Table directory ##
gda.oe.undulatorLookupDir = ${gda.config}/lookupTables
#


#
gda.factory.doXMLInstanceValidation = false

## Epics setting
gda.epics.beamline.name = BL07I
gda.epics.request.timeout=10
gda.epics.devices.xml = ${gda.config}/xml/epics/BL07I-gda-devices.xml
gda.epics.types.xml = ${gda.config}/xml/epics/BL07I-gda-types.xml
gda.epics.configs.xml = ${gda.config}/xml/epics/BL07I-gda-configs.xml

gda.epics.interface.xml = ${gda.config}/xml/epics/BL07I-gda-interface.xml
gda.epics.interface.schema = ${gda.config}/xsd/genericBeamlineSchema.xsd
#gda.epics.interface.xml.unchecked = ${gda.config}/xml/epics/gda-interface_unchecked.xml
#gda.epics.EpicsDeviceFactory = true
#gda.epics.SimulatedEpicsDeviceFactory = true



# Hostname or IP address of the GDA server
# gda.server.host=localhost


## For Swing GUI
gda.gui.xml        = ${gda.config}/clients/main/live/client.xml

gda.gui.beans.xml  = ${gda.config}/clients/main/_common/client.xml

## OEMove Panel display settings  ##
gda.gui.oemove.xmlFile		= ${gda.config}/xml/castor/client/OEMove.xml
gda.gui.oemove.singleMenu   =  false
gda.gui.oemove.pictorialView=  true

#gda.gui.oemove.defaultDofMode  =  absolute
gda.gui.oemove.defaultDofMode  =  relative

gda.gui.oemove.absolute     =  false
gda.gui.oemove.relative     =  true
gda.gui.oemove.continuous   =  false
gda.gui.oemove.set          =  false
gda.gui.oemove.homeSet      =  false
gda.gui.oemove.home         =  false

## Docking Frame work licensing information
gda.gui.dock               = true
#gda.gui.fractionalSize     = 0.8
jdock.license.company.name = Diamond Light Source Ltd
jdock.license.project.name = GDA
jdock.license.key = fNu:aL3TXt5RKvQjAjYspkf.38N4.rA1

# GDA GUI display configuration
# if fractionalSize defined, width/height will not be used
#gda.gui.fractionalSize      = 0.9
# setting the primary screen for GDA GUI display - default is 0
#gda.screen.primary=0
gda.gui.width =1440[self.epicsDriver.getGain(), 
gda.gui.height=900
gda.unit.name = DLS-unit
gda.coordinate.name = DLS-coordinate

## CSS Synoptic screen and script settings  ##
gda.dal.screens = ${gda.config}/client/synoptic/screens/
gda.dal.scripts = ${gda.config}/client/synoptic/scripts/

#To disable the SDA servers that started on the client to communicate with Jython and Python consoles started through Pydev in the client
#To disable RPC, set:
uk.ac.diamond.scisoft.analysis.analysisrpcserverprovider.disable=true
#To disable RMI, set:
uk.ac.diamond.scisoft.analysis.rmiserverprovider.disable=true

#For the scan command
#GDA_SCAN_CONCURRENTSCAN_READOUT_CONCURRENTLY=false
gda.scan.concurrentScan.readoutConcurrently=false

#Default ELog server of the development database
#gda.elog.targeturl = http://rdb.pri.diamond.ac.uk/devl/php/elog/cs_logentryext_bl.php

#Default ELog server of the production database
gda.elog.targeturl = http://rdb.pri.diamond.ac.uk/php/elog/cs_logentryext_bl.php
