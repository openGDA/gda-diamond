<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="mpxsim_localhostname" class="java.net.InetAddress"
		factory-method="getLocalHost" />
	<bean id="mpxsim_workstation" class="java.lang.String">
		<constructor-arg
			value="#{ mpxsim_localhostname.hostName.split('\.')[0] }" />
	</bean>
	<bean id="mpxsim_pvbase" class="java.lang.String">
		<constructor-arg value="#{mpxsim_workstation}-AD-SIM-01" />
	</bean>

    <bean id="merlinAD_config_base" class="gda.spring.V17ADBaseFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:CAM:" />
    </bean>

    <bean id="merlinAD_summary_arr" class="gda.spring.V17NDArrayFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:ARR:" />
    </bean>

    <bean id="merlinAD_summary_stat" class="gda.spring.V17NDStatsFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:STAT:" />
    </bean>

    <bean id="merlinAD_summary_roi" class="gda.spring.V17NDROIFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:ROI:" />
    </bean>

    <bean id="merlinAD_summary_mjpg" class="gda.spring.V17FfmpegStreamFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:MJPG:" />
    </bean>

    <bean id="merlinAD_summary_proc" class="gda.spring.V17NDProcessFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:PROC:" />
    </bean>

    <bean id="merlinAD_NDFileTiff" class="gda.spring.V17NDFileFactoryBean">
        <property name="prefix" value="#{mpxsim_pvbase}:TIFF:" />
        <property name="resetToInitialValues" value="false" />
    </bean>

    <bean id="merlinAD_NDFileHDF5" class="gda.spring.V17NDFileHDF5FactoryBean">
        <property name="ndFileImpl">
            <bean class="gda.spring.V17NDFileFactoryBean">
                <property name="prefix" value="#{mpxsim_pvbase}:HDF5:" />
                <property name="resetToInitialValues" value="false" />
            </bean>
        </property>
    </bean>

    <bean id="merlinAD_MultipleExposureSoftwareTriggerAutoModeCollectionStrategy"
        class="gda.device.detector.addetector.triggering.MultipleExposureSoftwareTriggerAutoMode">
        <constructor-arg ref="merlinAD_config_base" />
        <property name="readAcquireTimeFromHardware" value="False" />
    </bean>

    <bean id="merlinAD_SingleExposureStandardCollectionStrategy"
        class="gda.device.detector.addetector.triggering.SingleExposureStandard">
        <constructor-arg ref="merlinAD_config_base" />
        <constructor-arg value="1" />
    </bean>

    <bean id="merlinAD_tiff_SingleImagePerFileWriterWithNumTracker"
        class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriterWithNumTracker">
        <constructor-arg value="merlin" />
        <property name="ndFile" ref="merlinAD_NDFileTiff" />
        <property name="numTrackerExtension" value="merlin_numtracker" />
    </bean>

    <bean id="merlinAD_tiff_SingleImagePerFileWriter"
        class="gda.device.detector.addetector.filewriter.SingleImagePerFileWriter">
        <constructor-arg value="merlin" />
        <property name="ndFile" ref="merlinAD_NDFileTiff" />
    </bean>

    <bean id="merlinAD_hdf5_MultipleImagesPerHDF5FileWriter"
        class="gda.device.detector.addetector.filewriter.MultipleImagesPerHDF5FileWriter">
        <property name="ndFileHDF5" ref="merlinAD_NDFileHDF5" />
        <property name="fileTemplate" value="%s%s%05d.hdf5" />
        <property name="filePathTemplate" value="$datadir$" />
        <property name="fileNameTemplate" value="$scan$-merlin" />
        <property name="fileNumberAtScanStart" value="-1" />
        <property name="setChunking" value="false" />
        <property name="lazyOpen" value="true" />
    </bean>

    <bean id="merlin_ndprocess" class="gda.device.detector.areadetector.v17.impl.NDProcessImpl">
        <property name="basePVName" value="#{mpxsim_pvbase}:PROC:" />
        <property name="pluginBase">
            <bean class="gda.device.detector.areadetector.v17.impl.NDPluginBaseImpl">
                <property name="basePVName" value="#{mpxsim_pvbase}:PROC:" />
            </bean>
        </property>
    </bean>

    <bean id="merlin_proc" class="gda.device.detector.nxdetector.plugin.areadetector.ADProcPlugin">
        <constructor-arg value="proc1" />
        <property name="inputPort" value="ADSIM.CAM" />
        <property name="blocking" value="false" />
        <property name="enableLowClip" value="true" />
        <property name="lowClip" value="0" />
        <property name="dataType" value="AUTOMATIC" />
        <property name="ndProcess" ref="merlin_ndprocess" />
    </bean>

    <bean id="merlin_plot_server_roi_provider" class="gda.device.detector.nxdetector.roi.PlotServerROISelectionProvider">
        <constructor-arg value="Merlin" />
        <constructor-arg value="6" />
    </bean>

    <bean id="merlin" class="gda.device.detector.NXDetector">
        <property name="name" value="merlin" />
        <property name="collectionStrategy" ref="merlinAD_SingleExposureStandardCollectionStrategy" />
        <property name="additionalPluginList">
            <list>
                <ref bean="merlinAD_tiff_SingleImagePerFileWriter" />
                <ref bean="merlinAD_hdf5_MultipleImagesPerHDF5FileWriter" />
                <bean
                    class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
                    <property name="pluginName" value="roistats1" />
                    <property name="baseRoiPVName" value="#{mpxsim_pvbase}:ROI1:" />
                    <property name="baseStatsPVName" value="#{mpxsim_pvbase}:STAT1:" />
                    <property name="roiInputNdArrayPort" value="ADSIM.proc" />
                    <property name="enabledBasicStats" value="MaxValue,MaxX,MaxY,Total" />
                    <property name="roiProvider">
                        <bean
                            class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer">
                            <constructor-arg ref="merlin_plot_server_roi_provider" />
                            <constructor-arg value="0" />
                        </bean>
                    </property>
                </bean>
                <bean
                    class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
                    <property name="pluginName" value="roistats2" />
                    <property name="baseRoiPVName" value="#{mpxsim_pvbase}:ROI2:" />
                    <property name="baseStatsPVName" value="#{mpxsim_pvbase}:STAT2:" />
                    <property name="roiInputNdArrayPort" value="ADSIM.proc" />
                    <property name="enabledBasicStats" value="MaxValue,MaxX,MaxY,Total" />
                    <property name="roiProvider">
                        <bean
                            class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer">
                            <constructor-arg ref="merlin_plot_server_roi_provider" />
                            <constructor-arg value="1" />
                        </bean>
                    </property>
                </bean>
                <bean
                    class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
                    <property name="pluginName" value="roistats3" />
                    <property name="baseRoiPVName" value="#{mpxsim_pvbase}:ROI3:" />
                    <property name="baseStatsPVName" value="#{mpxsim_pvbase}:STAT3:" />
                    <property name="roiInputNdArrayPort" value="ADSIM.proc" />
                    <property name="enabledBasicStats" value="MaxValue,MaxX,MaxY,Total" />
                    <property name="roiProvider">
                        <bean
                            class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer">
                            <constructor-arg ref="merlin_plot_server_roi_provider" />
                            <constructor-arg value="2" />
                        </bean>
                    </property>
                </bean>
                <bean
                    class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
                    <property name="pluginName" value="roistats4" />
                    <property name="baseRoiPVName" value="#{mpxsim_pvbase}:ROI4:" />
                    <property name="baseStatsPVName" value="#{mpxsim_pvbase}:STAT4:" />
                    <property name="roiInputNdArrayPort" value="ADSIM.proc" />
                    <property name="enabledBasicStats" value="MaxValue,MaxX,MaxY,Total" />
                    <property name="roiProvider">
                        <bean
                            class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer">
                            <constructor-arg ref="merlin_plot_server_roi_provider" />
                            <constructor-arg value="3" />
                        </bean>
                    </property>
                </bean>
                <bean
                    class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
                    <property name="pluginName" value="roistats5" />
                    <property name="baseRoiPVName" value="#{mpxsim_pvbase}:ROI5:" />
                    <property name="baseStatsPVName" value="#{mpxsim_pvbase}:STAT5:" />
                    <property name="roiInputNdArrayPort" value="ADSIM.proc" />
                    <property name="enabledBasicStats" value="MaxValue,MaxX,MaxY,Total" />
                    <property name="roiProvider">
                        <bean
                            class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer">
                            <constructor-arg ref="merlin_plot_server_roi_provider" />
                            <constructor-arg value="4" />
                        </bean>
                    </property>
                </bean>
                <bean
                    class="gda.device.detector.nxdetector.plugin.areadetector.ADRoiStatsPairFactory">
                    <property name="pluginName" value="roistats6" />
                    <property name="baseRoiPVName" value="#{mpxsim_pvbase}:ROI6:" />
                    <property name="baseStatsPVName" value="#{mpxsim_pvbase}:STAT6:" />
                    <property name="roiInputNdArrayPort" value="ADSIM.proc" />
                    <property name="enabledBasicStats" value="MaxValue,MaxX,MaxY,Total" />
                    <property name="roiProvider">
                        <bean
                            class="gda.device.detector.nxdetector.roi.RectangularIntegerROIIndexer">
                            <constructor-arg ref="merlin_plot_server_roi_provider" />
                            <constructor-arg value="5" />
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="merlin_for_snaps" class="gda.device.detector.NXDetector">
        <property name="name" value="merlin_for_snaps" />
        <property name="collectionStrategy" ref="merlinAD_SingleExposureStandardCollectionStrategy" />
        <property name="additionalPluginList">
            <list>
                <ref bean="merlinAD_tiff_SingleImagePerFileWriterWithNumTracker" />
            </list>
        </property>
    </bean>
</beans>
