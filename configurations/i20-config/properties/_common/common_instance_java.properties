gda.beamline.name=i20

# Disable Corba and use RMI + JMS instead
gda.remoting.disableCorba = true

# gda.defVisit = cm12176-2

#
# Object Factories
#
gda.factory.factoryName 	          = ${gda.beamline.name}
gda.factory.allowExceptionInConfigure = true

# to prevent occasional bug in client, see GDA-5483
uk.ac.diamond.scisoft.analysis.analysisrpcserverprovider.disable = true
gda.jython.startupScript=${gda.config}/scripts/localStation.py
#
# for rbac
#
gda.accesscontrol.useAccessControl = false 
# if set to true then the BatonPanel MUST be used in the GUI to exchange and control the baton
gda.accesscontrol.useBatonControl = false
# this must not be set to less than 1 or baton passing will not work
gda.accesscontrol.defaultAuthorisationLevel = 1
gda.accesscontrol.defaultStaffAuthorisationLevel = 3 
gda.accesscontrol.firstClientTakesBaton = false
gda.accesscontrol.sameUserVisitShareBaton = false
## Login Authentication
#gda.gui.AcquisitionGUI.authenticationMethod = gda.jython.authenticator.LdapAuthenticator

#
# Documentation
#
gda.help.manual=http://www.opengda.org/documentation/manuals/GDA_User_Guide/trunk/contents.html
gda.bugReport.site=http://trac.diamond.ac.uk/beam/login
gda.beamline.manual=http://intranet.diamond.ac.uk/I20Manual.html

#
# scripting and the scanning mechanism
#
gda.data.scan.datawriter.datadir	= ${gda.data}/$year$/$visit$/$subdirectory$
gda.data.scan.datawriter.dataFormat = XasAsciiNexusDataWriter
gda.jython.terminalOutputDir        = ${gda.logs.dir}
gda.jython.namespaceMappingFile     = ${gda.config}/scripts/jythonNamespaceMapping
gda.jython.beamlineParametersFile   = ${gda.config}/scripts/beamlineParameters
gda.jython.finderNameMappingFile    = ${gda.config}/scripts/finderNameMapping
gda.scan.sets.scannumber = true

#
# Configuration for NeXus writing
#
gda.nexus.backend        = HDF5
gda.nexus.beamlinePrefix = false
gda.nexus.createSRS      = false
# gda.nexus.writeSwmr      = true
gda.nexus.writeSwmr      = false

#
# RCP Options
#
uk.ac.gda.pydev.show.python.config.project = true
uk.ac.gda.pydev.show.python.gda.project    = true

#  Cap the memory used by the client's terminal textbox
gda.jython.jythonTerminal.textFieldCharactersCap = 100000
# And for the Message and Debug Panels
gda.util.LoggingPanels.textFieldCharactersCap = 100000

#
# EXAFS
#
gda.exafs.darkcurrent.detector   = ionchambers
gda.exafs.ionchambersName        = ionchambers
gda.exafs.darkcurrent.shutter    = photonshutter
#for bean validation
gda.exafs.element.min            = P
gda.exafs.element.max            = Am
# Mono rate in ms/eV
gda.exafs.mono.energy.rate       = 0
# Readout constant in ms
# for I20 just say its 1.0s overhead total
gda.exafs.read.out.time          = 1000  
# for the XES XMap rates view
gda.exafs.i1Name                 = I1

#
## Controls saving of metadata to Nexus files and data files to SRB
## server xml requires <FindableHashtable> entry for state communication
#
gda.data.nexusMetadata = false
gda.data.srbStore = false

#
# Metadata
#
gda.instrument      = ${gda.beamline.name}
gda.facility        = DLS
gda.facility.probe  = x-ray
gda.facility.type   = Synchrotron X-ray Source

# Port on which the HTTP server should listen. This is only used when creating
# a Jetty HTTP server in a Spring beans configuration file
# (e.g. stnBase_server_beans.xml).
gda.server.port=8080

# for experiment perspective. So it uses the correct project in the workspace
gda.client.experimentdefinition.project.name = exafs

#Add all beamline specific keys before this line

#Do not set any keys after this line as the value may not get set as expected.

