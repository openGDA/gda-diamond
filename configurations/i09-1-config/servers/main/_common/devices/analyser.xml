<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="analyser" class="uk.ac.diamond.daq.devices.specs.phoibos.SpecsPhoibosAnalyser">
		<property name="name" value="analyser" />
		<property name="controller" ref="analyser_controller" />
		<property name="collectionStrategy" >
			<bean class="uk.ac.diamond.daq.devices.specs.phoibos.SpecsPhoibosCollectionStrategy">
				<property name="analyser" ref="analyser" />
				<property name="safeStateAfterScan" value="true" />
			</bean>
		</property>
		<property name="photonEnergyProvider" ref="dcmenergyEv" />
		<property name="workFunction" value="4.5" />
		<!-- GDA will attempt to read actual value from EPICS during configure stage. -->
		<property name="detectorEnergyWidth" value="0.134" />
	</bean>
	
    <!-- Export analyser so that it will be available on client -->
	<bean class="uk.ac.gda.remoting.server.GdaRmiServiceExporter">
		<property name="serviceName" value="${gda.rmi.prefix}analyser" />
		<property name="service" ref="analyser" />
		<property name="serviceInterface" value="uk.ac.diamond.daq.devices.specs.phoibos.api.ISpecsPhoibosAnalyser" />
	</bean>
	
	<!-- Dummy scannable used when making a single point scan with the analyser -->
	<bean id="dummy_a" class="gda.device.scannable.DummyScannable" />

</beans>
