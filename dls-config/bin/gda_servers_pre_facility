# Setup specific to this facility, that is done before the servers are started
bashlog debug "gda_servers_pre_facility" "Entered"


# Check that the user actually wants the servers restarted.
if [[ -n "${DISPLAY:-}" && "${GDA_NO_PROMPT:-}" != true ]]; then
    if [[ "${GDA_MODE}" == "live" ]]; then
        icon_type="warning"
    else
        icon_type="question"
    fi
    RESPONSE=yes
    zenity --width 300 --title "Are you sure?" --question --text "Are you sure you want to ${GDA_OPERATION-restart} the ${GDA_INSTANCE_NAME} GDA servers in ${GDA_MODE} mode?" --window-icon=${icon_type} || RESPONSE=no
    if [[ $RESPONSE == "no" ]]; then
        bashlog INFO "gda_servers_pre_facility" "User cancelled the ${GDA_OPERATION-restart}"
        exit
    else
        bashlog INFO "gda_servers_pre_facility" "User confirmed the ${GDA_OPERATION-restart}"
    fi
fi

# Set up some basic environment
. ${GDA_WORKSPACE_PARENT}/${GDA_FACILITY_CONFIG_rel}/bin/loadjava.sh

# Define GDA_VAR
if [[ "${GDA_MODE}" == "live" ]]; then
    # GDA_VAR will point to something like /dls_sw/<beamline>/software/gda_var
    export GDA_VAR=$(readlink -f ${GDA_WORKSPACE_PARENT}/../../gda_var)
else
    export GDA_VAR=${GDA_WORKSPACE_PARENT}/gda_var_non_live
fi
bashlog debug "gda_servers_pre_facility" "set \${GDA_VAR}=${GDA_VAR}"

export OBJECT_SERVER_STARTUP_FILE=${GDA_VAR}/object_server_startup_server_main
bashlog debug "gda_servers_pre_facility" "set \${OBJECT_SERVER_STARTUP_FILE}=${OBJECT_SERVER_STARTUP_FILE}"

if [ -n "${BEAMLINE-}" ]; then
    # This is the normal way the control machine name is constructed at Diamond
    #Set CONTROL_MACHINE_NAME in gda_servers_pre_instance if non-standard
    export CONTROL_MACHINE_NAME=${BEAMLINE}-control.diamond.ac.uk
    bashlog debug "gda_servers_pre_facility" "CONTROL_MACHINE_NAME = $CONTROL_MACHINE_NAME"
else
    bashlog error "gda_servers_pre_facility" "BEAMLINE environment variable must be set"
    exit 1
fi
if [ "${GDA_MODE}" = "live" ]; then
    export CONTROL_MACHINE_USER=gda2
    export CONTROL_MACHINE_SSHKEY_LOC=${GDA_VAR}/.ssh/${BEAMLINE}-ssh.key
    if [ ! -f "${CONTROL_MACHINE_SSHKEY_LOC}" ]; then
        bashlog warn "gda_servers_pre_facility" "Unable to find $CONTROL_MACHINE_SSHKEY_LOC, checking in config"
        export CONTROL_MACHINE_SSHKEY_LOC=${GDA_WORKSPACE_PARENT}/${GDA_INSTANCE_CONFIG_rel}/${BEAMLINE}ssh.key
    fi
    if [ ! -f "${CONTROL_MACHINE_SSHKEY_LOC}" ]; then
        bashlog warn "gda_servers_pre_facility" "Unable to find $CONTROL_MACHINE_SSHKEY_LOC, remote start will not be possible."
        unset CONTROL_MACHINE_SSHKEY_LOC
    fi
fi

bashlog debug "gda_servers_pre_facility" "Exited"
