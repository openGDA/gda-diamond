#!/bin/bash 

# Command to start the GDA servers on current PC

DLS_CONFIG_BIN=$(readlink -f $(dirname $0))

function usage {
	cat 1>&2 <<EOF

Command to start the GDA servers on current PC

Usage: gda_servers_local <uk.ac.gda.core folder location> <config folder> <mode used by gda command> [other options for gda command]


Can be used from command line or from Eclipse within an External Run Configuration.

Examples.
To start ixx-config from an installation in /scratch/gda_master in dummy mode:

~>/scratch/gda_master/workspace_git/gda-diamond.git/dls-config/bin/gda_servers_local /scratch/gda_master/workspace_git/gda-core.git/uk.ac.gda.core/ /scratch/gda_master/workspace_git/gda-dls-beamlines-ixx.git/ixx dummy --restart --debug

To use within an Eclipse External Run Configuration:

Location - ${project_loc:/dls-config/bin/gda_servers_local}
Arguments (example for ixx-config to restart servers in dummy mode)
 - ${project_loc:/uk.ac.gda.core} ${workspace_loc:/ixx-config} dummy --restart --debug

EOF
}
if [[ $# < 2 ]]; then
	usage
	exit 1
fi

module load global/http_proxy

. $DLS_CONFIG_BIN/loadjava.sh
if [[ $? -ne 0 ]]; then
   echo module failed - assuming java is already on the path
fi

module load python
if [[ $? -ne 0 ]]; then
   echo module failed - assuming python is already on the path
fi
JAVA_OPTS="-Xms128m -Xmx2024m -XX:MaxPermSize=128m"; export JAVA_OPTS
#if [ -f "/dls_sw/dasc/jrebel/5.2/jrebel.jar" ]; then
#	JAVA_OPTS="-javaagent:/dls_sw/dasc/jrebel/5.2/jrebel.jar -Drebel.properties=/dls_sw/dasc/jrebel/5.2/jrebel.properties $JAVA_OPTS"; export JAVA_OPTS
#fi

GDA_CORE=$1
GDA_CONFIG=$2
GDA_MODE=$3
shift;shift;shift

echo Core folder: $GDA_CORE
echo Config folder: $GDA_CONFIG
echo GDA mode: $GDA_MODE
echo Other args: $*

export GDALOGS=/scratch
export LOGFILE=$GDALOGS/gda_output_`date +%F-%T`.txt
touch $LOGFILE
if [ -e $GDALOGS/gda_output.txt ]; then
	rm $GDALOGS/gda_output.txt
fi
ln -s $LOGFILE $GDALOGS/gda_output.txt


echo python2.6  $GDA_CORE/bin/gda  --config=$GDA_CONFIG --smart --trace servers -v --mode=$GDA_MODE $*
     python2.6  $GDA_CORE/bin/gda  --config=$GDA_CONFIG --smart --trace servers -v --mode=$GDA_MODE $*
