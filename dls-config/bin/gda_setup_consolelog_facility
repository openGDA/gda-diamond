# Parameter 1 is the console log folder name - {servers|client|logpanel}
LOGNAME=gda_$1_output
bashlog debug "gda_setup_consolelog_facility" "Entered"

if [ $# -ne 1 ] ; then
  bashlog error "gda_setup_consolelog_facility" "Only one parameter accepted by $0: $@"
  exit 1 
fi
bashlog debug "gda_setup_consolelog_facility" "Parameters: $@"

# Define GDA_LOGS_DIR
if [ "${GDA_MODE}" == "live" ]; then
    # GDA_LOGS_DIR will point to something like /dls_sw/<beamline>/logs/
    export GDA_LOGS_DIR=$(readlink -f ${GDA_WORKSPACE_PARENT}/../../gda_logs)
else
    export GDA_LOGS_DIR=${GDA_WORKSPACE_PARENT}/gda_logs_non_live
fi
bashlog debug "gda_setup_consolelog_facility" "set \${GDA_LOGS_DIR}=${GDA_LOGS_DIR}"

# Protect against ssh being so fast that server and client try to write to the same file
while [ -z ${GDA_LOG_FILE-} ]; do
    export GDA_LOG_FILE=${GDA_LOGS_DIR}/$LOGNAME/${LOGNAME}_`date +%F-%T`.txt
    if [ -f $GDA_LOG_FILE ]; then
        bashlog debug "gda_setup_consolelog_facility" "GDA_LOG_FILE exists, wait a second and try again..."
        GDA_LOG_FILE=
        sleep 1
    fi
done

consolelogfile_dir=$(dirname ${GDA_LOG_FILE})
consolelogfile_name=$(basename ${GDA_LOG_FILE})

# Create the parent directory for the console log file, and create an (initially empty) logfile
if [[ ! -d "${consolelogfile_dir}" ]]; then
    bashlog info "gda_setup_consolelog_facility" "issuing: mkdir -pv -m 777 ${consolelogfile_dir}"
    mkdir -pv -m 777 ${consolelogfile_dir}/
fi

bashlog debug "gda_setup_consolelog_facility" "Writing console log to $GDA_LOG_FILE"
touch $GDA_LOG_FILE
LAST_LOG_FILE=$(readlink -f "$GDA_LOGS_DIR/$LOGNAME.txt")
[ -h $GDA_LOGS_DIR/$LOGNAME.txt ] && rm $GDA_LOGS_DIR/$LOGNAME.txt
[ -h $GDA_LOGS_DIR/$LOGNAME.old.txt ] && rm $GDA_LOGS_DIR/$LOGNAME.old.txt
ln -s $GDA_LOG_FILE $GDA_LOGS_DIR/$LOGNAME.txt
ln -s $LAST_LOG_FILE $GDA_LOGS_DIR/$LOGNAME.old.txt

bashlog debug "gda_setup_consolelog_facility" "Exited"
