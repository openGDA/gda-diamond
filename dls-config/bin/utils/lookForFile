OBJECT_SERVER_STARTUP_FILE=$1
HOSTNAME=$2
REMOTE_PID=$3

# Since the OBJECT_SERVER_STARTUP_FILE can take a minute to be seen on client
# workstations, and we may be able to tell that a server has started up due to
# the ssh process having completed, if the REMOTE_PID is specified and the
# process is no longer running, exit early to speed start-up.

if [ -r $OBJECT_SERVER_STARTUP_FILE ]; then
  printf "%30s: Waiting for no %s\n" "$HOSTNAME" "$OBJECT_SERVER_STARTUP_FILE"

  while true; do
    # If we have a REMOTE_PID then check if it's exited
    if [ -n "$REMOTE_PID" ] ; then
      if kill -0 "$REMOTE_PID" 2>/dev/null ; then
        : #printf "%30s: ssh PID %s IS RUNNING while waiting for no %s\n" "$HOSTNAME" "$REMOTE_PID" "$OBJECT_SERVER_STARTUP_FILE"
      else
        printf "%30s: ssh PID %s TERMINATED while waiting for no %s\n" "$HOSTNAME" "$REMOTE_PID" "$OBJECT_SERVER_STARTUP_FILE"
        exit 0
      fi
    fi
    if [ ! -r $OBJECT_SERVER_STARTUP_FILE ]; then
      printf "\n%30s: Not found      %s\n" "$HOSTNAME" "$OBJECT_SERVER_STARTUP_FILE"
      break
    fi

    sleep 1
    printf "+"
  done
fi

printf "\n%30s: Waiting for    %s\n" "$HOSTNAME" "$OBJECT_SERVER_STARTUP_FILE"

while true; do
  if [ -n "$REMOTE_PID" ] ; then
    if kill -0 "$REMOTE_PID" 2>/dev/null ; then
      : #printf "%30s: ssh PID %s IS RUNNING while waiting for %s\n" "$HOSTNAME" "$REMOTE_PID" "$OBJECT_SERVER_STARTUP_FILE"
    else
      printf "%30s: ssh PID %s TERMINATED while waiting for %s\n" "$HOSTNAME" "$REMOTE_PID" "$OBJECT_SERVER_STARTUP_FILE"
      exit 0
    fi
  fi
  if [ -r $OBJECT_SERVER_STARTUP_FILE ]; then
    printf "\n%30s: Found          %s\n" "$HOSTNAME" "$OBJECT_SERVER_STARTUP_FILE"
    exit 0
  fi

  sleep 1
  printf "-"
done
