#syntax: call correctFlood3 <1. filename> (without suffix) <2. no_of_dark_images_to_subtract> <3. exposureTime>
#			    <4. apply repair correction> <5. poly mscalar> <6. unwarp> <7. flood poly>
#		            <8. export all intermediate images> <9. subtract correlated dark> <10. export compressed>  (1=true, 0=false) 
#			    <11. binning>
#
# e.g.  call correctFlood3 "c:/testImage" 0 1 1 1 0 0 0 0 0
#
## 1. APPLY UNWARP CORRECTION TO IMAGE IN sum
## 2. EXPORT IMAGE TO UNCOMPRESSED FILE WITH GIVEN NAME
#
mode echo

# WAIT FOR DETECTOR READY 
wait for object detector ready

#
## 0. IF @2 IS > 0, SUBTRACT @2 TIMES DARK IMAGE
#
if (@2==0) jmp check_sum_exists

if (exist("/root/Dark_"+@3+"_"+@11+"/Data/Dark")) jmp darks_subtract
echo =ERROR - correctFlood3: Cannot find dark image to subtract
return

label darks_subtract
($("/root/sum/Data/Image")-= multiply($("/root/Dark_"+@3+"_"+@11+"/Data/Dark"), @2))

label no_dark_subtract
wait for object cr ready

#
## 1. APPLY FLOOD MSCALAR AND UNWARP CORRECTIONS TO IMAGE IN sum IF IT EXISTS
#
label check_sum_exists
if (exist("/root/sum/Data/Image")) jmp apply_corrections
echo =ERROR - correctFlood3: Cannot find image in /root/sum
return

label apply_corrections

cmd="call applyCorrections \"/root/sum/Data/Image\" 0 "+@5+" "+@6+" 0"

#
## 2. EXPORT IMAGE
#
cmd="call exportImage \"/root/sum/Data/Image\" \""+@1+"_corrSum_"+@3+"s.img\" "+@10

