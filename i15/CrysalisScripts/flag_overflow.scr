# syntax: flag_overflow <1. limit> <2. image filename> <3. output filename>
#
#i.e. 
# call flag_overflow 110000 "c:/Data/tests020309/testAstd.img" "c:/Data/tests020309/testA.img"
#
# call flag_overflow 110000 "c:/tmp/anto3_1_86.img" "c:/tmp/anto3_1_86_flagged.img"
#
# Assumes images already saved by other calls to smi_exps2.
#

root echo = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
cmd="root echo = COMMON Start call flag_overflow "+@1+" \""+@2+"\" \""+@3+"\""
mode echo

#
# 1. IMPORT IMAGES
#

cmd="call setup_node \"/root/std\""
cmd="cr call import_img \""+@2+"\" \"/root/std\""

wait for object cr ready

cmd="call setup_node \"/root/out\""
cmd="cr call import_img \""+@2+"\" \"/root/out\""

wait for object cr ready

#
## 2. Replace pixels from 3. with pixels from 4. scaled by 2.
#

((limit):integer)
((maxs):real)
((maxo):real)

($(limit)=@1)
($(maxs)=Max($(/root/std)))

($(/root/out)=FlagOverflow($(/root/std),$(limit)))
($(/root/out/remeasure/OverflowPixels)=1)

($(maxo)=Max($(/root/out)))
cmd="echo =limit="+$(limit)
cmd="echo =max(std)="+$(maxs)+", max(out)="+$(maxo)+" <<<<<<<<<<<<<<<<<<<<<<<<<"

#
## 3. EXPORT IMAGE
#

cmd="call exportImage \"/root/out\" \""+@3+"\" 0"

#restore previous configuration
#!IMAGE EXPORTED

cmd="root echo = COMMON End   call flag_overflow "+@1+" \""+@2+"\" \""+@3+"\""
root echo = ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
return