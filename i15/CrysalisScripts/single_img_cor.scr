#
# syntax: single_img_cor <time> <binning> <flood>
#
# i.e. call single_img_cor 1.0 2 1
#
#flood field correction applied if last argument is 1 else not
#assumes detector distance for flood poly correction is 60.0mm

((r):real)
((timeinms):integer)

mode echo
if not exist object cr jmp crysalis_notexist

#in test configuration for Newport we must disconnect gonio before using sm i command since shutter
#control is not going through MGC interface

#if not exist object gonio jmp no_gonio
#gonio disconnect
#label no_gonio

#confirm gg graph window exists or create it
if exist object gg jmp gg_exists

object gg : graph
#set colour table
gg db cp file lib/db/palette.db to *
gg load palette Saturn

#set image zoom to show whole image
if (@2==1) jmp zoom1
if (@2==2) jmp zoom2
if (@2==4) jmp zoom4

echo =NOT ALLOWED BINNING
jmp end_ok

label zoom1
gg zoom 1:4
jmp endzoom

label zoom2
gg zoom 1:2
jmp endzoom

label zoom3
gg zoom 1:1

label endzoom

#set look up table range for image window
gg level = 255

#position window on screen
gg resize 533 560
gg move 730 420

label gg_exists

#confirm /root/Darks node exists or creat it
if (exist("/root/Darks")) jmp darks_node_exists

db cd /root
db mkdir /root/Darks

label darks_node_exists

($(r)=@1)
($(r)*=1000.0)
($(timeinms)=Integer($(r)))

#make temporary node
db cd /root
db mkdir /root/tmp/single

#check whether dark current exists and measure it if not
cmd="call darkcurrent "+@1+" "+@2+" \"/root/Darks\""

#take image
cmd="sm i "+@1+" bin "+@2+"x"+@2
wait for object detector ready
save results to /root

#take image
cmd="sm i "+@1+" bin "+@2+"x"+@2
wait for object detector ready
save results to /root/tmp/single

#### REPAIR ####
cmd = "cr repair /root/Data/Image"
cmd = "cr repair /root/tmp/single/Data/Image"

#correlate
($("/root/Data/Image")=Correlate($("/root/Data/Image"),$("/root/tmp/single/Data/Image"),$(/root/cor_len_img),$(/root/cor_fact_img)))

##### DARK SUBTRACTION #####
($("/root/Data/Image")-=$("/root/Darks/dark"+$(timeinms)+"_"+@2+"x"+@2+"/Data/Dark"))

if (@3==0) jmp no_flood_scalar

cr flood mscalar /root/Data/Image

label no_flood_scalar

##### UNWARP #####
cr unwarp /root/Data/Image

if (@3==0) jmp no_flood_poly

#create node for detector distance and set distance value so that flood poly can work
((/root/Data/Image/mgcctrl/Axes/cam/StartPosition):real)
((/root/Data/Image/mgcctrl/Axes/cam/EndPosition):real)
($(/root/Data/Image/mgcctrl/Axes/cam/StartPosition)=60.0)
($(/root/Data/Image/mgcctrl/Axes/cam/EndPosition)=60.0)

cr flood poly /root/Data/Image

#remove node for detector distance since crysalis export command will not work unless ALL mgcctrl subnodes are filled
db cd /root/Data/Image
db rm mgcctrl

label no_flood_poly

gg print matrix /root/Data/Image

#### END OK ####
label end_ok

#reconnect gonio
#gonio connect
#wait for object gonio ready

return

#ERRORS

label crysalis_notexist
#!OBJECT CRYSALIS NOT EXIST
return
