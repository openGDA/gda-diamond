#syntax: call smi_exps2_atlas <1. filename> <2. phiStart> <3. phiStop> <4. phiVel>
#			<5. kappaStart> <6. kappaStop> <7. kappaVel> 
#			<8. omegaStart> <9. omegaStop> <10. omegaVel> 
#			<11. twothetaStart> <12. twothetaStop> <13. twothetaVel> 
#			<14. gammaStart> <15. gammaStop> <16. gammaVel> 
#			<17. detector distance> 
#			<18. apply repair correction> <19. poly mscalar> <20. unwarp> <21. flood poly>
#		        <22. export all intermediate images> <23. subtract correlated dark> <24. export compressed>  (1=true, 0=false) 
#			<25. intensity integral> <26.time> <27. binning>
#
#i.e. call smi_exps2_atlas "c:/Data/tests020309/testA.img" 11 11 0 23 23 0 20 30 5 99 99 0 44 44 0 123 1 1 0 0 1 1 0 5 1.4 2
#                                                          <-------- geometry ------------------->  dd <-crs->       i t b
#
# Assumes image already saved in /tmp by smi_exps2_atlas. Updates header with geometry, detector distance and
# intensity information
#
#mode echo

#
## INSERT GEOMETRY INTO HEADER
#

((/tmp/Data/Image/mgcctrl/Axes/phi/StartPosition):real=@2)
((/tmp/Data/Image/mgcctrl/Axes/phi/EndPosition):real=@3)
((/tmp/Data/Image/mgcctrl/Axes/phi/Velocity):real=@4)

((/tmp/Data/Image/mgcctrl/Axes/kappa/StartPosition):real=@5)
((/tmp/Data/Image/mgcctrl/Axes/kappa/EndPosition):real=@6)
((/tmp/Data/Image/mgcctrl/Axes/kappa/Velocity):real=@7)

((/tmp/Data/Image/mgcctrl/Axes/omega/StartPosition):real=@8)
((/tmp/Data/Image/mgcctrl/Axes/omega/EndPosition):real=@9)
((/tmp/Data/Image/mgcctrl/Axes/omega/Velocity):real=@10)

((/tmp/Data/Image/mgcctrl/Axes/theta/StartPosition):real=@11)
((/tmp/Data/Image/mgcctrl/Axes/theta/EndPosition):real=@12)
((/tmp/Data/Image/mgcctrl/Axes/theta/Velocity):real=@13)

((/tmp/Data/Image/mgcctrl/Axes/gamma/StartPosition):real=@14)
((/tmp/Data/Image/mgcctrl/Axes/gamma/EndPosition):real=@15)
((/tmp/Data/Image/mgcctrl/Axes/gamma/Velocity):real=@16)

#Ruby: ((/tmp/Data/Image/detector/Type):string="Ruby")
#Atlas:
((/tmp/Data/Image/detector/Type):string="Atlas")

#
## INSERT DETECTOR DISTANCE
#
((/tmp/Data/Image/mgcctrl/Axes/cam/StartPosition):real=@17)
((/tmp/Data/Image/mgcctrl/Axes/cam/EndPosition):real=@17)

label insert_intensity
#
## INSERT INTENSITY
#
((/tmp/Data/Image/crysalis/structures/special/lageneral):integer[10]=((0,0,0,0,0,0,0,0,0,0)))
($[0:1]("/tmp/Data/Image/crysalis/structures/special/lageneral")=@25)

#
#### APPLY CORRECTIONS
#
cmd="call applyCorrections \"/tmp/Data/Image\" "+@18+" "+@19+" "+@20+" "+@21
wait for object cr ready


if (@23==0) jmp export_image
#
## SUBTRACT CORRELATED DARK IF EXISTS
#
if (exist("/root/Dark_"+@26+"_"+@27+"/Data/Dark")) jmp dark_subtract
#Ruby: cmd="call correlateDark "+@26+" "+@27+" \""+@1+"\" "+@18+" "+@19+" "+@20+" "+@21+" "+@22+" "+@23+" "+@24
#Atlas
cmd="call correlateDark_atlas "+@26+" "+@27+" \""+@1+"\" "+@18+" "+@19+" "+@20+" "+@21+" "+@22+" "+@23+" "+@24
wait for object cr ready

label dark_subtract
($("/tmp/Data/Image")-=$("/root/Dark_"+@26+"_"+@27+"/Data/Dark"))


#
#### EXPORT IMAGE TO FILE NAME
#
label export_image
cmd="call exportImage \"/tmp/Data/Image\" \""+@1+"\" "+@24

#restore previous configuration
#!IMAGE EXPORTED
return
