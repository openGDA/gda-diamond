#syntax: call smi_exps1_atlas <1. binning> <2. timeout>
#
# Takes image and save to /tmp. smi_exps2_atlas should be called next
# 
# e.g. call smi_exps1_atlas 2

root echo = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
cmd="root echo = ATLAS Start call smi_exps1_atlas "+@1+" "+@2
mode echo

## Take image and save to /tmp

if not (Exist(/ppcdirpnp/data/Image)) jmp image_data_not_found

#Ruby: if not object detector ready jmp DETECTOR_NOT_READY
#Atlas:
if not dbnode /ppcdirpnp/data/Image valid jmp DETECTOR_NOT_READY

label image_data_not_found
cmd="call setup_node \"/tmp\""

#Ruby: cmd="sm m timeout 0 bin "+@1+"x"+@1
#Atlas:
((timeout):real=@2)
($(timeout)+=0.5)
cmd="call Scan_Start "+$(timeout)+" "+@1

#Ruby: wait for object detector ready
#Atlas:
wait for valid $(/ppcdirpnp/data/Image)

#Ruby: api save results to /tmp
#Atlas:

((/root/binning):integer=@1)
((time):real=@2) 
cmd="db mkdir /tmp/Data"
cmd="call Img_Cut \"/ppcdirpnp/data/Image\" \"/tmp/Data/Image\" "+$(time)+" "+$(//root/binning)

((/tmp/Data/Image/mgcctrl/Axes/omega/StartPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/theta/StartPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/kappa/StartPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/phi/StartPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/cam/StartPosition):real)

((/tmp/Data/Image/mgcctrl/Axes/omega/EndPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/theta/EndPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/kappa/EndPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/phi/EndPosition):real)
((/tmp/Data/Image/mgcctrl/Axes/cam/EndPosition):real)

((/tmp/Data/Image/mgcctrl/Axes/omega/Velocity):real)
((/tmp/Data/Image/mgcctrl/Axes/theta/Velocity):real)
((/tmp/Data/Image/mgcctrl/Axes/kappa/Velocity):real)
((/tmp/Data/Image/mgcctrl/Axes/phi/Velocity):real)
((/tmp/Data/Image/mgcctrl/Axes/cam/Velocity):real)

#restore previous configuration
#!IMAGE TAKEN
root echo = api:IMAGE TAKEN
root echo = ATLAS IMAGE TAKEN
root echo = ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
return

label DETECTOR_NOT_READY
root echo = ATLAS DETECTOR_NOT_READY
#!DETECTOR NOT READY
root echo = api:DETECTOR NOT READY
root echo = !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!