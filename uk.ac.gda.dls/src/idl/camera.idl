/*-
 * Copyright Â© 2009 Diamond Light Source Ltd., Science and Technology
 * Facilities Council Daresbury Laboratory
 *
 * This file is part of GDA.
 *
 * GDA is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License version 3 as published by the Free
 * Software Foundation.
 *
 * GDA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with GDA. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _CAMERA_IDL_
#define _CAMERA_IDL_

#include <device.idl>

module gda {
module images {
module camera {     
module corba {

/**
 * An interface for a image gathering camera class
 *
 */

typedef sequence<double> zoomSeq;
typedef sequence<double> focusSeq;

interface CorbaCamera : device::corba::CorbaDevice
{
   string getImageFileName()
      raises (device::corba::CorbaDeviceException);
   string getCameraName()
      raises (device::corba::CorbaDeviceException);
   double getMicronsPerXPixel()
      raises (device::corba::CorbaDeviceException);
   double getMicronsPerYPixel()
      raises (device::corba::CorbaDeviceException);
   double getFocus()
      raises (device::corba::CorbaDeviceException);
   double getZoom()
      raises (device::corba::CorbaDeviceException);
   void setZoom(in double zoom)
      raises (device::corba::CorbaDeviceException);
   void setFocus(in double focus)
      raises (device::corba::CorbaDeviceException);
   void captureImage(in string fileName)
      raises (device::corba::CorbaDeviceException);
   any getImage()
      raises (device::corba::CorbaDeviceException);
   zoomSeq getZoomLevels()
      raises (device::corba::CorbaDeviceException);
   focusSeq getFocusLevels()
      raises (device::corba::CorbaDeviceException);
};
};};};};

#endif
